{"version":3,"sources":["components/LoginForm.js","components/RegistrationForm.js","components/WellItem.js","components/WellList.js","components/WelcomePage.js","components/WellHoles.js","components/WellCasings.js","components/WellCements.js","components/WellPerfs.js","components/WellPlugs.js","components/WellView.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","username","password","userLog","setUserLog","handleInput","event","target","name","value","prevState","handleError","err","console","warn","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","log","json","data","set","key","setIsAuth","isAuth","to","className","onSubmit","htmlFor","type","id","placeholder","onChange","required","password1","href","RegistrationForm","email","password2","userReg","setUserReg","error","setError","WellItem","idString","history","useHistory","fetchWell","ok","setWell","push","lease","well_number","API_number","onClick","parentElement","WellList","list","wellList","setWellList","useEffect","fetchWells","map","well","Spinner","animation","variant","WelcomePage","logHTML","handleLogout","user","remove","userID","userName","WellHoles","hole_size","starting_depth","ending_depth","WellCasings","gauge","casing_weight","casing_grading","WellCements","cement_type","sacks_pumped","WellPerfs","perforation_interval","perforation_total_holes","WellPlugs","WellView","wellHolesHTML","wellCasingsHTML","wellCementsHTML","wellPerfsHTML","wellPlugsHTML","wellInfoHTML","$faImage","icon","faImage","size","setWellFeatures","wellHoles","setWellHoles","wellCasings","setWellCasings","wellCements","setWellCements","wellPerfs","setWellPerfs","wellPlugs","setWellPlugs","fetchWellFeatures","holes","casings","cements","perforations","plugs","hole","casing","cement","perf","plug","$popup","document","getElementById","style","display","rawDate","updated_at","year","slice","formatDate","company","permit_number","current_status","location","section","survey","county","state","field","initial_formation","spud_date","completion_date","ground_level","kelley_bushing","derrick_floor","total_depth","width","height","App","setUserName","setUserID","checkAuth","ID","pk","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b8ffc64a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props){\n    const [userLog, setUserLog] = useState({\n        username: '',\n        password: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserLog(prevState => ({   //prevState is a variable name for the previous\n            ...prevState,         //value of the state\n            [name]:value,\n        }))\n    }\n\n    function handleError(err){\n        console.warn(err);\n    }\n    \n    async function handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(userLog)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`); // This is bad mang.\n            props.setIsAuth(true);\n            // props.history.push('/profile');  // This pushes the browser to the next area\n        }\n    \n    }\n    if (props.isAuth){  //Example of a redirect, but kind of balls user-friendly-wise.  Instead, replace login button with logout button\n        return <Redirect to=\"/\" />\n    } //Could flip it to protect \"profileForm\" and redirect them to login\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 login-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userLog.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={userLog.password1}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Log in</button>            \n            <p className=\"text-center\">Not  a member?  Click <a href=\"/register\">here</a> to register.</p>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { useState } from 'react'\nimport Cookies from 'js-cookie'\n\nfunction RegistrationForm(props){\n    const [userReg, setUserReg] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserReg(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n\n    const [error, setError] = useState(null);\n\n    function handleError(err){\n        console.warn(err);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(userReg.password1 !== userReg.password2){\n            setError('Passwords do not match!');\n        } else {\n            //fire off registration process\n            const options = {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                },\n                body: JSON.stringify(userReg)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response){\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setIsAuth(true);\n            }\n        }\n    }\n\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 register-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userReg.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='email'>Email address</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter E-mail\"\n                    onChange={handleInput}\n                    required\n                    name='email'\n                    value={userReg.email}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password1'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password1\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password1'\n                    value={userReg.password1}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password2'>Confirm Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password2\"\n                    placeholder=\"Re-enter password\"\n                    onChange={handleInput}\n                    required\n                    name='password2'\n                    value={userReg.password2}\n                />\n                {error &&<span className=\"text-danger\"> {error}</span>}\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Register</button>\n        </form>\n        </div>\n    )\n\n}\n\nexport default RegistrationForm","import { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction WellItem(props) {\n    const id = props.id;\n    const idString = `${id}`;\n    const history = useHistory();\n\n    const fetchWell = async () => {\n      const response = await fetch(`/api/wells/${id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push('/wellinfo');\n      }\n    }\n\n    function handleClick(event){\n      const wellID = event.target.parentElement.id;\n      fetchWell();\n    }\n\n  return(\n    <li className=\"ListItem\" id={idString}>\n        <p className=\"list-p\">{props.lease} {props.well_number}</p> <p><span className=\"bold-span\">API:</span> {props.API_number} </p> <button onClick={handleClick}className=\"li-button\">Select</button>\n    </li>\n  )\n  }\n\nexport default WellItem;\n","import { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport WellItem from './WellItem';\nimport Spinner from 'react-bootstrap/esm/Spinner';\n\nfunction WellList(props){\n\n    const [wellList, setWellList] = useState([])\n\n    useEffect(()=> {\n        const fetchWells = async () => {\n        const response = await fetch('/api/wells/user/', \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                }\n        });\n        if (!response.ok) {\n            console.log('Error fetching wells');\n        } else {\n            const data = await response.json();\n            setWellList(data);\n        }\n        }\n        fetchWells();\n    }, []);\n\n    let list;\n    if (wellList !== []){\n        list = wellList.map(well => <WellItem key={well.id+9000} {...well} wellList={wellList} setWellList={setWellList} setWell={props.setWell} />)\n    } else {\n        list = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    return (\n        <div className=\"well-list-container\">\n            <p><span className=\"bold-span\"> Your wells: </span></p>\n            <ul className=\"well-ul\">\n                {list}\n            </ul>\n        </div>\n    )    \n}\n\nexport default WellList","import { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport WellList from './WellList';\n\nfunction WelcomePage(props){\n\n    const handleLogout = async () => {\n        const options = {\n          method: 'POST',\n          headers:{\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(props.user)\n        };\n    const response = await fetch('/rest-auth/logout/', options)\n      if(!response){\n          console.log(response);\n      } else {\n        Cookies.remove('Authorization');\n        Cookies.remove('SessionID');\n        props.setIsAuth(false);\n      }\n    };\n\n    let logHTML;\n    let IDtestHTML;\n    if(props.isAuth){\n        IDtestHTML = <p>User ID: {props.userID}</p>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={handleLogout}>Logout</div>\n    } else {\n        IDtestHTML = <></>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={() => props.history.push('/login')}>Login</div>\n    }\n\n\n    return (\n        <div className=\"welcome-container\">\n            <h1 className=\"fp-h1 text-center\"> Welcome back, {props.userName}! </h1>\n            <WellList setWell={props.setWell} well={props.well}/> \n            {logHTML}            \n        </div>\n    )\n}\n\nexport default WelcomePage\n\n/*\n<p className=\"fp-p\"> Blank(ish) Landing Page </p>\n{IDtestHTML}\n\n*/","function WellHoles(props){\n    return(\n        <div className=\"well-hole\">\n            <p>Hole Size: {props.hole_size}</p>\n            <p>Starting Depth: {props.starting_depth}</p>\n            <p>Ending Depth: {props.ending_depth}</p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellHoles;\n\n\n","function WellCasings(props){\n    return(\n        <div className=\"well-casing\">\n            <p>Casing Gauge: {props.gauge}</p>\n            <p>Casing Weight: {props.casing_weight}</p>\n            <p>Casing Grading: {props.casing_grading}</p>\n            <p>Starting Depth: {props.starting_depth}</p>\n            <p>Ending Depth: {props.ending_depth}</p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellCasings;\n\n/*\n\nTO DO: TRANSLATE GAUGE BACK INTO SIZES\n\n*/\n\n","function WellCements(props){\n    return(\n        <div className=\"well-cement\">\n        <p>Cement Type: {props.cement_type}</p>\n        <p>Sacks Pumped: {props.sacks_pumped}</p>\n        <p>Starting Depth: {props.starting_depth}</p>\n        <p>Ending Depth: {props.ending_depth}</p>\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellCements;\n","function WellPerfs(props){\n    return(\n        <div className=\"well-perfs\">\n            <p>Perforation Interval: {props.perforation_interval}</p>\n            <p>Total Holes: {props.perforation_total_holes}</p>\n            <p>Starting Depth: {props.starting_depth}</p>\n            <p>Ending Depth: {props.ending_depth}</p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellPerfs;\n\n/*\n\n\nending_depth: 8404\nid: 1\nperforation_interval: \"15'\"\nperforation_total_holes: \"250\"\nstarting_depth: 8076\nwell: 1\n\n\n*/","function WellPlugs(props){\n    return(\n        <div className=\"well-plug\">\n        <p>Cement Type: {props.cement_type}</p>\n        <p>Sacks Pumped: {props.sacks_pumped}</p>\n        <p>Starting Depth: {props.starting_depth}</p>\n        <p>Ending Depth: {props.ending_depth}</p>\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellPlugs;","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport WellHoles from './WellHoles';\nimport WellCasings from './WellCasings';\nimport WellCements from './WellCements';\nimport WellPerfs from './WellPerfs';\nimport WellPlugs from './WellPlugs';\nimport Spinner from 'react-bootstrap/esm/Spinner';\n\n\nfunction WellView(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} size=\"2x\" />\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    let wellHolesHTML;\n    let wellCasingsHTML;\n    let wellCementsHTML;\n    let wellPerfsHTML;\n    let wellPlugsHTML;\n    \n    function displayPopup() {\n        const $popup = document.getElementById('popup');\n        if ($popup.style.display === 'none'){\n            $popup.style.display = 'block';\n        } else {\n            $popup.style.display = 'none';\n        }\n    }\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    useEffect(() => {\n        const fetchWellFeatures = async () => {\n            const response = await fetch(`/api/wells/${props.well.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n            }\n        }\n        fetchWellFeatures();\n    }, [props.well]);\n\n\n    \n    if (wellHoles !== []){\n        wellHolesHTML = wellHoles.map(hole => <WellHoles key={hole.id+1000} {...hole} />)\n    } else {\n        wellHolesHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    if (wellCasings !== []){\n        wellCasingsHTML = wellCasings.map(casing => <WellCasings key={casing.id+2000} {...casing} />)\n    } else {\n        wellCasingsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    if (wellCements !== []){\n        wellCementsHTML = wellCements.map(cement => <WellCements key={cement.id+3000} {...cement} />)\n    } else {\n        wellCementsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    if (wellPerfs !== []){\n        wellPerfsHTML = wellPerfs.map(perf => <WellPerfs key={perf.id+4000} {...perf} />)\n    } else {\n        wellPerfsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    if (wellPlugs !== []){\n        wellPlugsHTML = wellPlugs.map(plug => <WellPlugs key={plug.id+5000} {...plug} />)\n    } else {\n        wellPlugsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n\n    let wellInfoHTML;\n    if (props.well !== null) {\n        wellInfoHTML = \n        <div className=\"well-info\">\n                <div className=\"well-table-top row\">\n                    <div className=\"col-lg-8\"> \n                        <h2>{props.well.lease} {props.well.well_number} <span className=\"icon\" onClick={displayPopup}>{$faImage}</span></h2>\n                    </div>\n                    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n                    <div className=\"col-lg-4 text-right\">\n                        <span className=\"bold-span\">Last Updated: </span>{formatDate()}\n                    </div>                    \n                </div>\n                <div className=\"well-table-id row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">API Number: </span>{props.well.API_number}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Company: </span>{props.well.company}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Permit Number: </span>{props.well.permit_number}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Current Status: </span>{props.well.current_status}\n                    </div>\n                </div>\n                <div className=\"well-table-location row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Location: </span>{props.well.location}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Section: </span>{props.well.section}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Survey: </span>{props.well.survey}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <p><span className=\"bold-span\">County: </span>{props.well.county}\n                        &nbsp; &nbsp; <span className=\"bold-span\">State: </span>{props.well.state}</p>\n                    </div>\n                </div>\n                <div className=\"well-table-field row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Field: </span>{props.well.field}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Initial Formation: </span>{props.well.initial_formation}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Spud Date: </span>{props.well.spud_date}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Comp Date: </span>{props.well.completion_date}\n                    </div>\n                </div>\n                <div className=\"well-table-depths row mb-3\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Ground Level: </span>{props.well.ground_level}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Kelley Bushing: </span>{props.well.kelley_bushing}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Derrick Floor: </span>{props.well.derrick_floor}\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Total Depth: </span>{props.well.total_depth}\n                    </div>\n                </div>\n                <div className=\"labels row\">\n                    <div className=\"hole-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label1\"> HOLE</p>\n                        </div>\n                        {wellHolesHTML}\n                    </div>\n                    <div className=\"casing-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label2\">CASING</p>\n                        </div>\n                        {wellCasingsHTML}\n                    </div>\n                    <div className=\"cement-col col\">\n                        <div className=\"showme\" >\n                            <p className=\"label3\">CEMENT</p>\n                        </div>\n                        {wellCementsHTML}\n                    </div>\n                    <div className=\"perf-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label4\">PERFORATIONS</p>\n                        </div>\n                        {wellPerfsHTML}\n                    </div>\n                    <div className=\"plug-col col\">\n                        <div className=\"col showme\">\n                            <p className=\"label5\">PLUGS</p>\n                        </div>\n                        {wellPlugsHTML}\n                    </div>\n                </div>\n            </div>;\n    } else {\n        wellInfoHTML = <div>Loading...</div>;\n    }\n        \n        \n        \n        \n        \n\n\n\n    return (\n        <div className=\"well-container\">\n            {wellInfoHTML}\n            <div className=\"canvas-frame\">\n                <canvas id=\"canvas\" width=\"25vw\" height=\"90vh\"></canvas>\n            </div>\n        </div>\n    );\n};\n\nexport default WellView\n\n\n\n/*\n\n<div className=\"well-info\">\n                <h2>{props.well.lease} {props.well.well_number}</h2>\n                <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n                <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n                I'm a well! \n            </div>\n\n\n\n\n\n\n\n*/","import { useState, useEffect } from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport './App.css';\nimport WelcomePage from './components/WelcomePage';\nimport WellView from './components/WellView';\nimport WellList from './components/WellList';\n\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [isAuth, setIsAuth] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const history = useHistory();\n  const [well, setWell] = useState(null);\n\n  useEffect(()=> {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        setIsAuth(false);\n        history.push('/login'); // THIS LINE IS PUSHING FROM REGISTRATION BACK TO LOGIN.  DISABLE?\n      } else {\n        const data = await response.json();\n        const ID=data.pk;\n        const username=data.username;\n        setIsAuth(true);\n        setUserID(ID);\n        setUserName(username);\n        // history.push('');\n      }\n    }\n    checkAuth();\n  }, [history, isAuth])\n\n  if (isAuth === null){\n    return <Spinner animation=\"grow\" variant='primary' />\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/register' >\n          <RegistrationForm isAuth={isAuth} setIsAuth={setIsAuth}/>\n        </Route>\n        <Route path='/login'>\n            <LoginForm  isAuth={isAuth} setIsAuth={setIsAuth}/>\n        </Route>       \n        <Route path='/wellinfo'>\n            <WellView well={well} setWell={setWell}/>\n        </Route>       \n        {/* <Route path='/wellslist'>\n            <WellList isAuth={isAuth} history={history} well={well} setWell={setWell}/>\n        </Route>        */}\n        <Route path=''>\n          <WelcomePage isAuth={isAuth} setIsAuth={setIsAuth} userID={userID} history={history} userName={userName} well={well} setWell={setWell}/>\n        </Route>        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
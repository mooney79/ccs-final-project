{"version":3,"sources":["components/LoginForm.js","components/RegistrationForm.js","components/WellItem.js","components/WellList.js","components/WelcomePage.js","components/WellView.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","username","password","userLog","setUserLog","handleInput","event","target","name","value","prevState","handleError","err","console","warn","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","log","json","data","set","key","setIsAuth","isAuth","to","className","onSubmit","htmlFor","type","id","placeholder","onChange","required","password1","href","RegistrationForm","email","password2","userReg","setUserReg","error","setError","WellItem","idString","history","useHistory","lease","well_number","API_number","onClick","parentElement","push","WellList","list","wellList","setWellList","useEffect","fetchWells","ok","map","well","Spinner","animation","variant","WelcomePage","logHTML","handleLogout","user","remove","userID","userName","WellView","$faImage","icon","faImage","size","$popup","document","getElementById","style","display","width","height","App","setUserName","setUserID","checkAuth","ID","pk","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dcdfd5e0.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props){\n    const [userLog, setUserLog] = useState({\n        username: '',\n        password: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserLog(prevState => ({   //prevState is a variable name for the previous\n            ...prevState,         //value of the state\n            [name]:value,\n        }))\n    }\n\n    function handleError(err){\n        console.warn(err);\n    }\n    \n    async function handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(userLog)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`); // This is bad mang.\n            props.setIsAuth(true);\n            // props.history.push('/profile');  // This pushes the browser to the next area\n        }\n    \n    }\n    if (props.isAuth){  //Example of a redirect, but kind of balls user-friendly-wise.  Instead, replace login button with logout button\n        return <Redirect to=\"/\" />\n    } //Could flip it to protect \"profileForm\" and redirect them to login\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 login-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userLog.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={userLog.password1}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Log in</button>            \n            <p className=\"text-center\">Not  a member?  Click <a href=\"/register\">here</a> to register.</p>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { useState } from 'react'\nimport Cookies from 'js-cookie'\n\nfunction RegistrationForm(props){\n    const [userReg, setUserReg] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserReg(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n\n    const [error, setError] = useState(null);\n\n    function handleError(err){\n        console.warn(err);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(userReg.password1 !== userReg.password2){\n            setError('Passwords do not match!');\n        } else {\n            //fire off registration process\n            const options = {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                },\n                body: JSON.stringify(userReg)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response){\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setIsAuth(true);\n            }\n        }\n    }\n\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 register-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userReg.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='email'>Email address</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter E-mail\"\n                    onChange={handleInput}\n                    required\n                    name='email'\n                    value={userReg.email}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password1'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password1\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password1'\n                    value={userReg.password1}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password2'>Confirm Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password2\"\n                    placeholder=\"Re-enter password\"\n                    onChange={handleInput}\n                    required\n                    name='password2'\n                    value={userReg.password2}\n                />\n                {error &&<span className=\"text-danger\"> {error}</span>}\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Register</button>\n        </form>\n        </div>\n    )\n\n}\n\nexport default RegistrationForm","import { useHistory } from \"react-router-dom\";\n\nfunction WellItem(props) {\n    const id = props.id;\n    const idString = `${id}`;\n    const history = useHistory();\n\n    function handleClick(event){\n        const wellID = event.target.parentElement.id;\n        history.push('/wellinfo');\n        /*\n            use Router to push the wellID to the wellinfo page?\n            <NavLink to='/wellinfo'> Well Info Preview</NavLink> ?\n        */\n        }\n\n  return(\n    <li className=\"ListItem\" id={idString}>\n        <p className=\"list-p\">{props.lease} {props.well_number}</p> <p><span className=\"bold-span\">API:</span> {props.API_number} </p> <button onClick={handleClick}className=\"li-button\">Select</button>\n    </li>\n  )\n  }\n\nexport default WellItem;\n","import { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport WellItem from './WellItem';\nimport Spinner from 'react-bootstrap/esm/Spinner';\n\nfunction WellList(props){\n\n    const [wellList, setWellList] = useState([])\n\n    useEffect(()=> {\n        const fetchWells = async () => {\n        const response = await fetch('/api/wells/user/', \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                }\n        });\n        if (!response.ok) {\n            console.log('Error fetching wells');\n        } else {\n            const data = await response.json();\n            setWellList(data);\n        }\n        }\n        fetchWells();\n    }, []);\n\n    // if (wellList.length === 0) {\n    //     return <div>Loading...</div>\n    // } else {\n    //     return <p>{wellList[0].API_number}</p>\n\n    let list;\n    if (wellList !== []){\n        list = wellList.map(well => <WellItem key={well.id+9000} {...well} wellList={wellList} setWellList={setWellList} />)\n    } else {\n        list = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    return (\n        <div className=\"well-list-container\">\n            <p><span className=\"bold-span\"> Your wells: </span></p>\n            <ul className=\"well-ul\">\n                {list}\n            </ul>\n        </div>\n    )\n    \n}\n\nexport default WellList\n\n\n/* Ok, so I need to fetch the user in App.js.  \nThen use that to fetch associated wells to populate this component.\nWhen this well is clicked on, I need to pass the well ID to the WellView component.\n\n\n    \n\n\n\n*/","import { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport WellList from './WellList';\n\nfunction WelcomePage(props){\n\n    const handleLogout = async () => {\n        const options = {\n          method: 'POST',\n          headers:{\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(props.user)\n        };\n    const response = await fetch('/rest-auth/logout/', options)\n      if(!response){\n          console.log(response);\n      } else {\n        Cookies.remove('Authorization');\n        Cookies.remove('SessionID');\n        props.setIsAuth(false);\n      }\n    };\n\n    let logHTML;\n    let IDtestHTML;\n    if(props.isAuth){\n        IDtestHTML = <p>User ID: {props.userID}</p>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={handleLogout}>Logout</div>\n    } else {\n        IDtestHTML = <></>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={() => props.history.push('/login')}>Login</div>\n    }\n\n\n    return (\n        <div className=\"welcome-container\">\n            <h1 className=\"fp-h1 text-center\"> Welcome back, {props.userName}! </h1>\n            <WellList /> \n            {logHTML}            \n        </div>\n    )\n}\n\nexport default WelcomePage\n\n/*\n<p className=\"fp-p\"> Blank(ish) Landing Page </p>\n{IDtestHTML}\n\n*/","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction WellView(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} size=\"5x\" />\n    \n    function displayPopup() {\n        const $popup = document.getElementById('popup');\n        if ($popup.style.display === 'none'){\n            $popup.style.display = 'block';\n        } else {\n            $popup.style.display = 'none';\n        }\n    }\n\n    // async function fetchWell(pk) {\n    //     const response = await fetch(`/api/wells/${pk}/`);\n        \n    //     const data = await response.json();\n     \n    // }\n\n\n    return (\n        <div className=\"well-container\">\n            <div className=\"well-info\">\n                I'm a well! \n                <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n                <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n            </div>\n            <div className=\"canvas-frame\">\n                <canvas id=\"canvas\" width=\"25vw\" height=\"90vh\"></canvas>\n            </div>\n        </div>\n    );\n};\n\nexport default WellView\n","import { useState, useEffect } from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport './App.css';\nimport WelcomePage from './components/WelcomePage';\nimport WellView from './components/WellView';\nimport WellList from './components/WellList';\n\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [isAuth, setIsAuth] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const history = useHistory();\n\n  useEffect(()=> {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        setIsAuth(false);\n        history.push('/login'); // THIS LINE IS PUSHING FROM REGISTRATION BACK TO LOGIN.  DISABLE?\n      } else {\n        const data = await response.json();\n        const ID=data.pk;\n        const username=data.username;\n        setIsAuth(true);\n        setUserID(ID);\n        setUserName(username);\n        // history.push('');\n      }\n    }\n    checkAuth();\n  }, [history, isAuth])\n\n  if (isAuth === null){\n    return <Spinner animation=\"grow\" variant='primary' />\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/register' >\n          <RegistrationForm isAuth={isAuth} setIsAuth={setIsAuth}/>\n        </Route>\n        <Route path='/login'>\n            <LoginForm  isAuth={isAuth} setIsAuth={setIsAuth}/>\n        </Route>       \n        <Route path='/wellinfo'>\n            <WellView />\n        </Route>       \n        <Route path='/wellslist'>\n            <WellList isAuth={isAuth} history={history}/>\n        </Route>       \n        <Route path=''>\n          <WelcomePage isAuth={isAuth} setIsAuth={setIsAuth} userID={userID} history={history} userName={userName}/>\n        </Route>        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
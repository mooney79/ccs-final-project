{"version":3,"sources":["components/LoginForm.js","components/RegistrationForm.js","components/WellItem.js","components/WellList.js","components/WelcomePage.js","components/WellHoles.js","components/WellCasings.js","components/WellCements.js","components/WellPerfs.js","components/WellPlugs.js","components/DeleteDetails.js","components/DeleteConfirmationModal.js","components/DeleteWellModal.js","components/PlatImageModal.js","StaticImages/cement-texture.jpeg","components/Diagram.js","components/WellView.js","components/NewWellModal.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","username","password","userLog","setUserLog","handleInput","event","target","name","value","prevState","handleError","err","console","warn","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","log","json","data","set","key","setIsAuth","isAuth","to","className","onSubmit","htmlFor","type","id","placeholder","onChange","required","password1","href","onClick","history","push","RegistrationForm","email","password2","userReg","setUserReg","error","setError","WellItem","idString","useHistory","fetchWell","ok","setWell","lease","well_number","API_number","parentElement","WellList","list","wellList","setWellList","useEffect","fetchWells","map","well","Spinner","animation","variant","setShowNew","showNew","WelcomePage","logHTML","handleLogout","user","remove","userID","userName","WellHoles","$faTrashAlt","icon","faTrashAlt","inverse","pull","handleHoleChange","onBlur","handleHoleBlur","hole_size","starting_depth","ending_depth","$delTarget","currentTarget","getClass","attributes","class","slice","length","getID","children","setDeleteTarget","element","setIsClicked","WellCasings","gaugeHTML","gauge","handleCasingChange","handleCasingBlur","defaultValue","casing_weight","casing_grading","WellCements","handleCementChange","handleCementBlur","cement_type","sacks_pumped","WellPerfs","handlePerforationChange","handlePerforationBlur","perforation_interval","perforation_total_holes","WellPlugs","handlePlugChange","handlePlugBlur","DeleteDetails","DeleteConfirmationModal","deleteDetails","setDeleteDetails","handleClose","setShowDelete","deleteTarget","delHTML","urlPicker","handleDelete","setRefresh","Math","random","fetchDeleteDetails","showDelete","detailPairs","Object","entries","pair","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","DeleteWellModal","setShowWellDel","urlId","location","pathname","showWellDel","PlatImageModal","imageHTML","setPreview","plat_image","src","alt","file","files","reader","FileReader","onloadend","result","readAsDataURL","showImage","setShowImage","formData","FormData","append","Diagram","canvas0Ref","useRef","canvas1Ref","canvas2Ref","ctx0Ref","ctx1Ref","ctx2Ref","lrgEndRef","medEndRef","smlEndRef","drawCement","x","y","w","h","current","strokestyle","lineWidth","fillRect","moveTo","lineTo","stroke","drawPipe","fillStyle","drawCasingSet","beginPath","fill","drawPerfPair","drawEachPerf","x2","y2","drawPlug","canvas0","ctx0","getContext","width","window","innerWidth","height","innerHeight","addEventListener","canvas1","ctx1","ptrn","img","Image","dirt","casings","canvas2","ctx2","clearRect","wellCasings","forEach","casing","casingX","casingY","total_depth","casingW","casingH","casingA","lrgEnd","medEnd","smlEnd","onload","createPattern","wellCements","cement","cementY","cementH","wellPlugs","plug","plugY","plugH","wellPerfs","perf","perfY","perfH","depth","strokeStyle","topLine","round","font","fillText","midLine","botLine","setLineDash","drawDepthGuides","refresh","ref","wellHolesHTML","wellCasingsHTML","wellCementsHTML","wellPerfsHTML","wellPlugsHTML","$faImage","faImage","size","wellFeatures","setWellFeatures","wellHoles","setWellHoles","setWellCasings","setWellCements","setWellPerfs","setWellPlugs","isClicked","handleChange","handleBlur","propertyName","match","params","fetchWellFeatures","holes","cements","perforations","plugs","index","findIndex","hole","test","wellInfoHTML","createNewHole","newHole","createNewCasing","newCasing","createNewCement","newCement","createNewPerforation","newPerforation","createNewPlug","newPlug","rawDate","updated_at","year","formatDate","company","permit_number","current_status","section","survey","county","state","field","initial_formation","spud_date","completion_date","ground_level","kelley_bushing","derrick_floor","NewWellModal","handleSave","newWell","setNewWell","App","setUserName","setUserID","checkAuth","ID","pk","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4eff515.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props){\n    const [userLog, setUserLog] = useState({\n        username: '',\n        password: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserLog(prevState => ({   //prevState is a variable name for the previous\n            ...prevState,         //value of the state\n            [name]:value,\n        }))\n    }\n\n    function handleError(err){\n        console.warn(err);\n    }\n    \n    async function handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(userLog)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`); // This is bad mang.\n            props.setIsAuth(true);\n            // props.history.push('/profile');  // This pushes the browser to the next area\n        }\n    \n    }\n    if (props.isAuth){  //Example of a redirect, but kind of balls user-friendly-wise.  Instead, replace login button with logout button\n        return <Redirect to=\"/\" />\n    } //Could flip it to protect \"profileForm\" and redirect them to login\n\n    function directToRegister(){\n        props.history.push('/register');\n    }\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 login-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userLog.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={userLog.password1}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Log in</button>            \n            <p className=\"text-center\">Not  a member?  Click <a href=\"\" onClick={directToRegister}>here</a> to register.</p>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { useState } from 'react'\nimport Cookies from 'js-cookie'\n\nfunction RegistrationForm(props){\n    const [userReg, setUserReg] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserReg(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n\n    const [error, setError] = useState(null);\n\n    function handleError(err){\n        console.warn(err);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(userReg.password1 !== userReg.password2){\n            setError('Passwords do not match!');\n        } else {\n            //fire off registration process\n            const options = {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                },\n                body: JSON.stringify(userReg)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response){\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setIsAuth(true);\n            }\n        }\n    }\n\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 register-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userReg.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='email'>Email address</label>\n                <input type=\"email\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter E-mail\"\n                    onChange={handleInput}\n                    required\n                    name='email'\n                    value={userReg.email}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password1'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password1\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password1'\n                    value={userReg.password1}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password2'>Confirm Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password2\"\n                    placeholder=\"Re-enter password\"\n                    onChange={handleInput}\n                    required\n                    name='password2'\n                    value={userReg.password2}\n                />\n                {error &&<span className=\"text-danger\"> {error}</span>}\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Register</button>\n        </form>\n        </div>\n    )\n\n}\n\nexport default RegistrationForm","import { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction WellItem(props) {\n    const id = props.id;\n    const idString = `${id}`;\n    const history = useHistory();\n\n    const fetchWell = async () => {\n      const response = await fetch(`/api/wells/${id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n    function handleClick(event){\n      const wellID = event.target.parentElement.id;\n      fetchWell();\n    }\n\n  return(\n    <li className=\"ListItem\" id={idString}>\n        <p className=\"list-p\">{props.lease} {props.well_number}</p> <p><span className=\"bold-span\">API:</span> {props.API_number} </p> <button onClick={handleClick}className=\"li-button\">Select</button>\n    </li>\n  )\n  }\n\nexport default WellItem;\n","import { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport WellItem from './WellItem';\nimport Spinner from 'react-bootstrap/esm/Spinner';\n\nfunction WellList(props){\n\n    const [wellList, setWellList] = useState([]);\n    \n\n    useEffect(()=> {\n        const fetchWells = async () => {\n        const response = await fetch('/api/wells/user/', \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                }\n        });\n        if (!response.ok) {\n            console.log('Error fetching wells');\n        } else {\n            const data = await response.json();\n            setWellList(data);\n        }\n        }\n        fetchWells();\n    }, []);\n\n    let list;\n    if (wellList !== []){\n        list = wellList.map(well => <WellItem key={well.id+9000} {...well} wellList={wellList} setWellList={setWellList} setWell={props.setWell} />)\n    } else {\n        list = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n    return (\n        <div className=\"well-list-container\">\n            <p><span className=\"bold-span\"> Your wells: </span></p>\n            <ul className=\"well-ul\">\n                {list}\n                <li className=\"ListItem\" id=\"new-well\">\n                    <button className=\"list-p li-button\" onClick={() => {console.log(\"I fired!\"); props.setShowNew(true);console.log(props.showNew)}}> Add New Well</button>\n                </li>\n            </ul>\n        </div>\n    )    \n}\n\nexport default WellList","import { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport WellList from './WellList';\n\nfunction WelcomePage(props){\n\n    const handleLogout = async () => {\n        const options = {\n          method: 'POST',\n          headers:{\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(props.user)\n        };\n    const response = await fetch('/rest-auth/logout/', options)\n      if(!response){\n          console.log(response);\n      } else {\n        Cookies.remove('Authorization');\n        Cookies.remove('SessionID');\n        props.setIsAuth(false);\n      }\n    };\n\n    let logHTML;\n    let IDtestHTML;\n    if(props.isAuth){\n        IDtestHTML = <p>User ID: {props.userID}</p>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={handleLogout}>Logout</div>\n    } else {\n        IDtestHTML = <></>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={() => props.history.push('/login')}>Login</div>\n    }\n\n\n    return (\n        <div className=\"welcome-container\">\n            <h1 className=\"fp-h1 text-center\"> Welcome back, {props.userName}! </h1>\n            <WellList setWell={props.setWell} well={props.well} setShowNew={props.setShowNew} showNew={props.showNew}/> \n            {logHTML}            \n        </div>\n    )\n}\n\nexport default WelcomePage\n\n/*\n<p className=\"fp-p\"> Blank(ish) Landing Page </p>\n{IDtestHTML}\n\n*/","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellHoles(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-hole\">\n            <p>Hole Size:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"hole_size\" className=\"input-hidden\" value={props.hole_size} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellHoles;\n//<i class=\"far fa-trash-alt\"></i>\n//So... \n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellCasings(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n    \n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    \n    let gaugeHTML;\n    if (props.gauge === 'lrg'){\n        gaugeHTML = \n        <select id={props.id} onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"gauge\" className=\"input-hidden\" defaultValue=\"lrg\" >\n            <option value=\"lrg\" >13 3/8\"</option>\n            <option value=\"med\" >9 5/8\"</option>\n            <option value=\"sml\" >5 1/2\"</option>\n        </select>\n        // gaugeSize = '13 3/8\"';\n    } else if (props.gauge === 'med'){\n        gaugeHTML = \n        <select id={props.id} onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"gauge\" className=\"input-hidden\"  defaultValue=\"med\" >\n            <option value=\"lrg\" >13 3/8\"</option>\n            <option value=\"med\" >9 5/8\"</option>\n            <option value=\"sml\" >5 1/2\"</option>\n        </select>\n        // gaugeSize = '9 5/8\"';\n    } else if (props.gauge === 'sml'){\n        gaugeHTML = \n        <select id={props.id} onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"gauge\" className=\"input-hidden\"  defaultValue=\"sml\" >\n            <option value=\"lrg\" >13 3/8\"</option>\n            <option value=\"med\" >9 5/8\"</option>\n            <option value=\"sml\"  >5 1/2\"</option>\n        </select>\n        // gaugeSize = '5 1/2\"';\n    }\n//value={gaugeSize}\n    return(\n        <div className=\"well-casing\">\n            <p>Casing Gauge:</p> {gaugeHTML}\n            <p>Casing Weight:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"casing_weight\" className=\"input-hidden\" value={props.casing_weight} />\n            <p>Casing Grading:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"casing_grading\" className=\"input-hidden\" value={props.casing_grading} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellCasings;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellCements(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\" />\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-cement\">\n        <p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />\n        <p>Sacks Pumped: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Starting Depth: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellCements;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nfunction WellPerfs(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\" />\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    return(\n        <div className=\"well-perfs\">\n            <p>Perforation Interval:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"perforation_interval\" className=\"input-hidden\" value={props.perforation_interval} />\n            <p>Total Holes:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"perforation_total_holes\" className=\"input-hidden\" value={props.perforation_total_holes} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellPerfs;\n\n/*\n<input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n\nending_depth: 8404\nid: 1\nperforation_interval: \"15'\"\nperforation_total_holes: \"250\"\nstarting_depth: 8076\nwell: 1\n\n\n*/","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellPlugs(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-plug\">\n        <p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />\n        <p>Sacks Pumped:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellPlugs;","function DeleteDetails(props){\n\n    return (\n        <>\n            <p><span className=\"bold-span\">{props[0]}:</span> {props[1]} </p>\n        </>\n    )\n}\n\nexport default DeleteDetails;","import Modal from 'react-bootstrap/Modal'\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\nimport DeleteDetails from './DeleteDetails';\n\nfunction DeleteConfirmationModal(props) {\n    const [deleteDetails, setDeleteDetails] = useState({});\n    const handleClose = () => props.setShowDelete(false);\n    const {id, element} = props.deleteTarget;\n    let delHTML='';\n    let urlPicker='';\n\n    const handleDelete = async () => {\n       \n        const options = {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        console.log(urlPicker);\n        const response = await fetch(urlPicker, options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            // console.log(data);\n            // props.setShowDelete(false);\n            handleClose();\n            props.setDeleteTarget({});\n            props.setRefresh(Math.random());\n            \n            // handleClose();\n            // props.history.push(props.history.location.pathname);\n            // props.history.push(`/wellinfo/${data.id}`);\n        }\n    }\n\n    useEffect(() => {\n        const fetchDeleteDetails = async () => {\n            const response = await fetch(urlPicker, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well feature');\n            } else {\n                const data = await response.json();\n                setDeleteDetails(data);\n            }\n        }\n        fetchDeleteDetails();        \n    }, [props.showDelete]);\n\n    // console.log(props);\n    if (props.showDelete === true) {\n    \n    switch(element) {\n        case 'hole':\n            urlPicker = `/api/wells/holes/${id}/`;\n            break;\n        case 'casing':\n            urlPicker = `/api/wells/casings/${id}/`;\n            break;\n        case 'cement':\n            urlPicker = `/api/wells/cements/${id}/`;\n            break;\n        case 'perfs':\n            urlPicker = `/api/wells/perforations/${id}/`;\n            break;\n        case 'plug':\n            urlPicker = `/api/wells/plugs/${id}/`;\n            break;\n        default:\n            console.log('Error: no urlPicker defined for delete feature');\n    }\n    // console.log(element, id);\n    // console.log(urlPicker);\n    // useEffect(() => {\n    //     const fetchDeleteDetails = async () => {\n    //         const response = await fetch(urlPicker, \n    //         {headers: {\n    //                 'Content-Type': 'application/json',\n    //                 'X-CSRFToken': Cookies.get('csrftoken'),\n    //                 }\n    //         });\n    //         if (!response.ok) {\n    //             console.log('Error fetching well feature');\n    //         } else {\n    //             const data = await response.json();\n    //             setDeleteDetails(data);\n    //             // console.log(data);\n    //             // if (data !== {}) {\n    //                 // for (const [key, value] of Object.entries(data)){\n    //                 //     delHTML += `<p>${key}: ${value}</p>`;\n    //                     // delHTML += `<p><span className=\"bold-span\">${key}: ${value}</span></p> <br />`;\n    //                 // }\n    //             // }\n    //         }\n    //     }\n    //     fetchDeleteDetails();\n        \n        \n    // }, [/*props.deleteTarget*/]);\n\n    \n    \n    // console.log(deleteDetails);\n    // if (deleteDetails !== {}) {\n    //     for (const [key, value] of Object.entries(deleteDetails)){\n    //         delHTML = <><p><span className=\"bold-span\">{key}:</span> {value} </p><br/></>\n    //     }\n    // }\n    if (deleteDetails !== {}) {\n        const detailPairs = Object.entries(deleteDetails);\n        console.log(detailPairs);\n        delHTML = detailPairs.map(pair => <DeleteDetails key={Math.random()*450} {...pair} />);\n    }\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showDelete} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Entry</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Are you sure you want to delete this entry? This action cannot be undone.</p>\n            <br />\n            <div>\n                {delHTML}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Keep Data\n            </Button>\n            <Button variant=\"primary\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default DeleteConfirmationModal;\n\n/*\nTO DO:\n------\nFigure out where to put this, and what props are needed.\nRewrite this to pop up when a delete button is pressed.\nRewrite the fetch to delete the entry.\nCan I figure out how to call it without cloning 5 times for each feature?\nWrite the detai views/urls needed for the fetch.\n*/","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\n// import DeleteDetails from './DeleteDetails';\n\nfunction DeleteWellModal(props) {\n    const handleClose = () => props.setShowWellDel(false);\n    const urlId=props.history.location.pathname.slice(10);\n    const urlPicker=`/api/wells/${urlId}`;\n\n\n    const handleDelete = async () => {\n       \n        const options = {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(urlPicker, options);\n        if(!response){\n            console.log(response);\n        } else {\n            props.setRefresh(Math.random())\n            props.history.push('');\n        }\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showWellDel} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Well</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Are you sure you want to delete this Well? This action cannot be undone.</p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Keep Well\n            </Button>\n            <Button variant=\"primary\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default DeleteWellModal;","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport { useState } from 'react';\nimport Cookies from 'js-cookie'\n// import DeleteDetails from './DeleteDetails';\n\nfunction PlatImageModal(props) {\n  const handleClose = () => props.setShowImage(false);\n\n  const [preview, setPreview] = useState('');\n\n  const handleImage = (event) => {\n    const file = event.target.files[0];\n    props.setWell({\n      ...props.well,\n      plat_image: file,\n    })\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreview(reader.result);\n    }\n    reader.readAsDataURL(file); //returns URL\n  }\n\n    // const urlId=props.history.location.pathname.slice(10);\n    // const urlPicker=`/api/wells/${urlId}`;\n\n\n    // const handleDelete = async () => {\n       \n    //     const options = {\n    //         method: 'DELETE',\n    //         headers:{\n    //             'Content-Type': 'application/json',\n    //             'X-CSRFToken': Cookies.get('csrftoken'),\n    //         },\n    //     };\n    //     const response = await fetch(urlPicker, options);\n    //     if(!response){\n    //         console.log(response);\n    //     } else {\n    //         props.history.push('');\n    //     }\n    // }\n\n    function handleUpload(){\n      const formData = new FormData(); //Constructing key value pairs below VVV\n      formData.append('plat_image', props.well.plat_image);\n\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'X-CSRFToken': Cookies.get('csrftoken'), \n        },\n        body: formData,\n        // body: JSON.stringify({[propertyName]: value})\n      }\n      fetch(`/api/wells/${props.well.id}/`, options); \n      // fetch(`/media/`, options); \n    }\n\n    let imageHTML;\n    if(props.well){      \n      imageHTML=\n      <div className=\"ImageForm\">\n        {/* if (props.well.plat_image) {\n          <img src={props.well.plat_image} alt=\"plat_image\" />\n        } else {*/}\n        {props.well.plat_image && <img className=\"prev\" src={props.well.plat_image} alt =\"\" />}\n        <input type=\"file\" name=\"plat_image\" onChange={handleImage}/>\n      </div>\n    } else {\n      imageHTML=<></>\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showImage} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Plat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {imageHTML}\n          </Modal.Body>\n          <Modal.Footer>           \n            <Button variant=\"primary\" onClick={handleUpload}>\n              Upload Photo\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default PlatImageModal;\n\n/*\n\n<Button variant=\"secondary\" onClick={handleClose}>\n  Keep Well\n</Button>\n\n\n\n\n  \n  const handleUpload = (event) => {\n    // event.preventDefault();\n    const formData = new FormData(); //Constructing key value pairs below VVV\n    formData.append('plat_image', well.plat_image);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'), \n      },\n      body: formData,\n      // body: JSON.stringify({[propertyName]: value})\n    }\n    // fetch(`/api/wells/${props.well.id}/`, options); \n    fetch(`/media/`, options); \n  }\n\n  return (\n    <div className=\"ImageForm\">\n        <input type=\"file\" name=\"plat_image\" onChange={handleImage}/>\n        {props.well.plat_image && <img src={preview} alt =\"\" />}\n    </div>\n  );\n}\n\n\nconst fetchWell = async () => {\n      const response = await fetch(`/api/wells/${props.well.id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n\n\n\n\n*/","export default __webpack_public_path__ + \"static/media/cement-texture.0f27d432.jpeg\";","import { useEffect, useRef } from \"react\";\nimport dirt from '../StaticImages/cement-texture.jpeg';\n\nfunction Diagram(props){\n    const canvas0Ref = useRef(null);\n    const canvas1Ref = useRef(null);\n    const canvas2Ref = useRef(null);\n    const ctx0Ref = useRef(null);\n    const ctx1Ref = useRef(null);\n    const ctx2Ref = useRef(null);\n    const lrgEndRef = useRef(null);\n    const medEndRef = useRef(null);\n    const smlEndRef = useRef(null);\n    // const centerX = 222;\n\n   \n\n    useEffect(() => {\n        const canvas0 = canvas0Ref.current;\n        const ctx0 = canvas0.getContext('2d');\n        ctx0Ref.current = ctx0;\n\n        ctx0.width = window.innerWidth;\n        ctx0.height = window.innerHeight;\n\n        canvas0.addEventListener('resize', function() {\n        ctx0.width = window.innerWidth;\n        ctx0.height = window.innerHeight;\n        });\n\n        const canvas1 = canvas1Ref.current;\n        const ctx1 = canvas1.getContext('2d');\n        ctx1Ref.current = ctx1;\n\n        ctx1.width = window.innerWidth;\n        ctx1.height = window.innerHeight;\n\n        canvas1.addEventListener('resize', function() {\n        ctx1.width = window.innerWidth;\n        ctx1.height = window.innerHeight;\n        });\n\n        let img = new Image();\n        let ptrn;\n        img.src = dirt;        \n\n        const canvas2 = canvas2Ref.current;\n        // canvas2 = document.getElementById('canvas2');\n        const ctx2 = canvas2.getContext('2d');\n        ctx2Ref.current = ctx2;\n\n        canvas2.addEventListener('resize', function() {\n            ctx2.width = window.innerWidth;\n            ctx2.height = window.innerHeight;\n        });\n\n        ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n        \n        drawCasings(props.wellCasings);\n\n        img.onload = () => {\n            ptrn = ctx1.createPattern(img, 'repeat');\n            ctx1.fillStyle = ptrn;\n            ctx2.fillStyle = ptrn;\n            drawCements(props.wellCements);\n            placePlugs(props.wellPlugs);\n        }\n\n        placePerforations(props.wellPerfs);\n\n        if (props.well){\n            drawDepthGuides(props.well.total_depth);\n        }\n\n        \n\n    }, [props.wellCasings, props.wellCements, props.wellPerfs, props.wellPlugs, props.refresh]);\n\n    function drawCement(x, y, w, h){\n        ctx1Ref.current.strokestyle = \"darkgray\";\n        ctx1Ref.current.lineWidth= 3;    \n        ctx1Ref.current.fillRect(x, y, w, h);\n        ctx1Ref.current.moveTo(x,y);\n        ctx1Ref.current.lineTo(x,y+h);\n        ctx1Ref.current.moveTo(x+w, y);\n        ctx1Ref.current.lineTo(x+w,y+h);\n        ctx1Ref.current.stroke();\n    }\n\n    function drawDepthGuides(depth){\n        ctx0Ref.current.strokeStyle = \"white\";\n        ctx0Ref.current.lineWidth=2;\n        const x = canvas0Ref.current.width;\n        const topLine = Math.round(depth*0.25);\n        ctx0Ref.current.fillStyle = \"white\";\n        ctx0Ref.current.font = '16px Oxygen';\n        ctx0Ref.current.fillText(topLine, 10, 891*0.25-10);\n        const midLine = Math.round(depth*0.5);\n        ctx0Ref.current.fillText(midLine, 10, 891*0.5-10);\n        const botLine = Math.round(depth*0.75);\n        ctx0Ref.current.fillText(botLine, 10, 891*0.75-10);\n        ctx0Ref.current.beginPath();\n        ctx0Ref.current.setLineDash([5, 15]);\n        ctx0Ref.current.moveTo(0, 891*0.25);\n        ctx0Ref.current.lineTo(x,891*0.25);\n        ctx0Ref.current.stroke();\n        ctx0Ref.current.moveTo(0, 891*0.5);\n        ctx0Ref.current.lineTo(x,  891*0.5);\n        ctx0Ref.current.stroke();\n        ctx0Ref.current.moveTo(0, 891*0.75);\n        ctx0Ref.current.lineTo(x, 891*0.75);\n        ctx0Ref.current.stroke();\n        // ctx1Ref.current.setLineDash([]);\n    }\n\n    function drawPipe(x, y, w, h, a){\n        ctx2Ref.current.strokestyle = \"brown\";\n        ctx2Ref.current.lineWidth= 3;    \n        ctx2Ref.current.fillStyle=`rgba(182, 112, 37, ${a})`;\n        ctx2Ref.current.fillRect(x, y, w, h, a);\n        ctx2Ref.current.moveTo(x,y);\n        ctx2Ref.current.lineTo(x,y+h);\n        ctx2Ref.current.lineTo(x+30, y+h);\n        ctx2Ref.current.moveTo(x+w, y);\n        ctx2Ref.current.lineTo(x+w,y+h);\n        ctx2Ref.current.lineTo(x+w-30, y+h)\n        ctx2Ref.current.stroke();\n    }\n    \n    function drawCasingSet(x, y, w){\n        ctx2Ref.current.fillStyle=\"black\";\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x,y);\n        ctx2Ref.current.lineTo(x-30,y);\n        ctx2Ref.current.lineTo(x,y-30);\n        ctx2Ref.current.fill();\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x+w,y);\n        ctx2Ref.current.lineTo(x+w+30, y);\n        ctx2Ref.current.lineTo(x+w,y-30);\n        ctx2Ref.current.fill();\n    }\n\n    // function drawPerforations(x, y, w){\n    //     drawEachPerf(x, y);\n    //     drawEachPerf(x, y+15);\n    //     drawEachPerf(x, y+30);\n    //     drawEachPerf(x+w, y);\n    //     drawEachPerf(x+w, y+15);\n    //     drawEachPerf(x+w, y+30);\n    // }\n\n    function drawPerfPair(x, y, w){\n        drawEachPerf(x, y);\n        drawEachPerf(x+w, y);\n    }\n\n    function drawEachPerf(x2,y2) {\n        ctx2Ref.current.fillStyle = \"black\";\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x2, y2);\n        ctx2Ref.current.lineTo(x2-30, y2+5);\n        ctx2Ref.current.lineTo(x2, y2+10);\n        ctx2Ref.current.lineTo(x2+30, y2+5);\n        ctx2Ref.current.fill();\n    }\n\n    function drawPlug(x,y,w,h){\n        // ctx2Ref.current.fillStyle=\"gray\";\n        ctx2Ref.current.fillRect(x, y, w, h);\n        // ctx2Ref.current.clearRect(x+5, y+5, w-10, h*0.6);\n        // ctx2Ref.current.fillRect(x+10, y+10, w-20, h*0.3);\n    }\n\n    //CenterX 222px\n    //height 891px\n    // Ending_depth is to total_depth as X is to 891\n    //ED/TD = X/891\n    //X = ED/TD * 891\n    //console.log(props.wellCasings);\n    // console.log(props.well.total_depth);\n\n    function drawCasings(casings){\n        casings.forEach(casing => {\n            if (casing.gauge === 'lrg' && casing.ending_depth > 0){\n                const casingX=222-90;\n                const casingY=casing.starting_depth*891/props.well.total_depth;\n                const casingW=180;\n                const casingH=(casing.ending_depth*891/props.well.total_depth)-casingY;\n                const casingA=1;\n                const lrgEnd = casingY+casingH;\n                lrgEndRef.current = lrgEnd; \n                drawPipe(casingX, casingY, casingW, casingH, casingA);\n                drawCasingSet(casingX, casingY+casingH, casingW);\n            }\n        })\n        casings.forEach(casing => {\n            if (casing.gauge === 'med' && casing.ending_depth > 0){\n                const casingX=222-60;\n                const casingY=casing.starting_depth*891/props.well.total_depth;\n                const casingW=120;\n                const casingH=(casing.ending_depth*891/props.well.total_depth)-casingY;\n                const casingA=1;\n                const medEnd = casingY+casingH;\n                medEndRef.current = medEnd; \n                drawPipe(casingX, casingY, casingW, casingH, casingA);\n                drawCasingSet(casingX, casingY+casingH, casingW);\n            }\n        })\n        casings.forEach(casing => {\n            if (casing.gauge === 'sml' && casing.ending_depth > 0){\n                const casingX=222-30;\n                const casingY=casing.starting_depth*891/props.well.total_depth;\n                const casingW=60;\n                const casingH=(casing.ending_depth*891/props.well.total_depth)-casingY;\n                const casingA=1;\n                const smlEnd = casingY+casingH;\n                smlEndRef.current = smlEnd; \n                drawPipe(casingX, casingY, casingW, casingH, casingA);\n                drawCasingSet(casingX, casingY+casingH, casingW);\n            }\n        });\n    }\n\n    function drawCements(cements){\n        cements.forEach(cement => {\n            const cementY=cement.starting_depth*891/props.well.total_depth;\n            const cementH=(cement.ending_depth*891/props.well.total_depth)-cementY;\n            if (cementY+cementH <= lrgEndRef.current){\n                const cementX=222-120;\n                const cementW=240;\n                drawCement(cementX, cementY, cementW, cementH);\n            } else if (cementY+cementH <= medEndRef.current){\n                const cementX=222-90;\n                const cementW=180;\n                drawCement(cementX, cementY, cementW, cementH);\n            } else {\n                const cementX=222-45;\n                const cementW=90;\n                drawCement(cementX, cementY, cementW, cementH);\n            }             \n        })\n    }\n\n    function placePerforations(perfs){\n       perfs.forEach(perf => {\n            const perfY=perf.starting_depth*891/props.well.total_depth;\n            const perfH=(perf.ending_depth*891/props.well.total_depth)-perfY;\n            // let result = perfH*100/props.well.total_depth;\n            if (perfY+perfH <= lrgEndRef.current){\n                const perfX=222-90;\n                const perfW=180;\n                drawPerfPair(perfX, perfY, perfW);\n            } else if (perfY+perfH <= medEndRef.current){\n                const perfX=222-60;\n                const perfW=120;\n                drawPerfPair(perfX, perfY, perfW);\n            } else {\n                const perfX=222-30;\n                const perfW=60;\n                drawPerfPair(perfX, perfY, perfW);\n            } \n        })\n    }\n\n    function placePlugs(plugs){\n        plugs.forEach(plug => {\n             const plugY=plug.starting_depth*891/props.well.total_depth;\n             const plugH=(plug.ending_depth*891/props.well.total_depth)-plugY;\n            //  let result = Math.floor(plugH/20);\n             if (plugY+plugH <= lrgEndRef.current){\n                 const plugX=222-90;\n                 const plugW=180;\n                 drawPlug(plugX, plugY, plugW, plugH);\n             } else if (plugY+plugH <= medEndRef.current){\n                 const plugX=222-60;\n                 const plugW=120;\n                 drawPlug(plugX, plugY, plugW, plugH);\n             } else {\n                 const plugX=222-30;\n                 const plugW=60;\n                 drawPlug(plugX, plugY, plugW, plugH);\n             } \n         })\n     }\n\n    return (\n        <>\n            <canvas id=\"canvas0\" width=\"444\" height=\"900\" ref={canvas0Ref}></canvas>\n            <canvas id=\"canvas1\" width=\"444\" height=\"900\" ref={canvas1Ref}></canvas>\n            <canvas id=\"canvas2\" width=\"444\" height=\"900\" ref={canvas2Ref}></canvas>\n        </>\n    )\n}\n\nexport default Diagram;\n\n// TO DO\n// ------\n// * Put in error checking to make sure that ending depth is greater than starting \n// depth before rendering.\n// * Figure out how to get diagram to refresh on element deletion.","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport WellHoles from './WellHoles';\nimport WellCasings from './WellCasings';\nimport WellCements from './WellCements';\nimport WellPerfs from './WellPerfs';\nimport WellPlugs from './WellPlugs';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\nimport DeleteWellModal from './DeleteWellModal';\nimport PlatImageModal from './PlatImageModal';\nimport Diagram from './Diagram';\n\nfunction WellView(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} />\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight2\" size=\"2x\"/>\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    const [deleteTarget, setDeleteTarget] = useState({});\n    const [showDelete, setShowDelete] = useState(false);\n    const [isClicked, setIsClicked] = useState(false);\n    const [refresh, setRefresh] = useState(0);\n    const [showWellDel, setShowWellDel] = useState(false);\n    const [showImage, setShowImage] = useState(false);\n    let wellHolesHTML;\n    let wellCasingsHTML;\n    let wellCementsHTML;\n    let wellPerfsHTML;\n    let wellPlugsHTML;\n    /*\n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    */\n    \n    console.log(props);\n    function displayPopup() {\n        setShowImage(true);\n        // const $popup = document.getElementById('popup');\n        // if ($popup.style.display === 'none'){\n        //     $popup.style.display = 'block';\n        // } else {\n        //     $popup.style.display = 'none';\n        // }\n    }\n    \n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        props.setWell({...props.well, [name]: value});\n    }\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    useEffect(() => {\n          \n        const fetchWell = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well');\n            } else {\n                const data = await response.json();                \n                props.setWell(data);               \n            }\n          }\n\n\n        const fetchWellFeatures = async () => {\n                      \n            const response = await fetch(`/api/wells/${props.match.params.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n            }\n        }\n        \n        fetchWell();\n        fetchWellFeatures();\n        setShowDelete(false);        \n    }, [refresh]);\n\n    useEffect(() => {\n        if (showDelete === false && isClicked === true) {\n            setShowDelete(true);\n        } else {\n            setShowDelete(false)\n        }\n    },[isClicked]);\n\n    async function handleBlur(event){\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        // const {propertyName, value} = event.target;\n        console.log(event.target);\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/${props.match.params.id}/`, options);\n        const data = await response.json();\n        console.log(propertyName, value);\n    }\n\n    const handleHoleChange = (event) => {\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        let index = wellHoles.findIndex((hole) => hole.id == id);\n        let test = [...wellHoles]\n        test[index][propertyName] = value;\n        setWellHoles(test);\n    }\n\n    async function handleHoleBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        console.log(event.target);\n        console.log(event.target.id);\n        console.log(id)\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/holes/${id}/`, options);\n        const data = await response.json();\n    }\n    \n    if (wellHoles === []){\n        wellHolesHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    } else {\n        wellHolesHTML = wellHoles.map(hole => <WellHoles key={hole.id+1000} {...hole} setWellHoles={setWellHoles} handleHoleChange={handleHoleChange} handleHoleBlur={handleHoleBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)        \n    }\n\n    const handleCasingChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCasings.findIndex(casing => casing.id == id);\n        let test = [...wellCasings]\n        test[index][name] = value;\n        setWellCasings(test);\n    }\n\n    async function handleCasingBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/casings/${id}/`, options);\n        const data = await response.json();\n    }\n\n    if (wellCasings !== []){\n        wellCasingsHTML = wellCasings.map(casing => <WellCasings key={casing.id+2000} {...casing} handleCasingChange={handleCasingChange} handleCasingBlur={handleCasingBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)\n    } else {\n        wellCasingsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handleCementChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCements.findIndex(cement => cement.id == id);\n        let test = [...wellCements]\n        test[index][name] = value;\n        setWellCements(test);\n    }\n\n    async function handleCementBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/cements/${id}/`, options);\n        const data = await response.json();\n    }\n\n    if (wellCements !== []){\n        wellCementsHTML = wellCements.map(cement => <WellCements key={cement.id+3000} {...cement} handleCementChange={handleCementChange} handleCementBlur={handleCementBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)\n    } else {\n        wellCementsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePerforationChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPerfs.findIndex(perf => perf.id == id);\n        let test = [...wellPerfs]\n        test[index][name] = value;\n        setWellPerfs(test);\n    }\n\n    async function handlePerforationBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/perforations/${id}/`, options);\n        const data = await response.json();\n    }\n\n    if (wellPerfs !== []){\n        wellPerfsHTML = wellPerfs.map(perf => <WellPerfs key={perf.id+4000} {...perf} handlePerforationChange={handlePerforationChange} handlePerforationBlur={handlePerforationBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)\n    } else {\n        wellPerfsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePlugChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPlugs.findIndex(plug => plug.id == id);\n        let test = [...wellPlugs]\n        test[index][name] = value;\n        setWellPlugs(test);\n    }\n\n    async function handlePlugBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/plugs/${id}/`, options);\n        const data = await response.json();\n    }\n\n\n    if (wellPlugs !== []){\n        wellPlugsHTML = wellPlugs.map(plug => <WellPlugs key={plug.id+5000} {...plug} handlePlugChange={handlePlugChange} handlePlugBlur={handlePlugBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)\n    } else {\n        wellPlugsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const createNewHole = async () => {\n        const newHole = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            hole_size: ''\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newHole)\n        };\n        const response = await fetch('/api/wells/holes/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellHoles([...wellHoles, newHole]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCasing = async () => {\n        const newCasing = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            casing_weight: '',\n            casing_grading: '',\n            gauge: 'sml',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCasing)\n        };\n        const response = await fetch('/api/wells/casings/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellCasings([...wellCasings, newCasing]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCement = async () => {\n        const newCement = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCement)\n        };\n        const response = await fetch('/api/wells/cements/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellCements([...wellCements, newCement]);\n            setRefresh(Math.random())\n        }\n    };\n    \n    const createNewPerforation = async () => {\n        const newPerforation = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            perforation_interval: '',\n            perforation_total_holes: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPerforation)\n        };\n        const response = await fetch('/api/wells/perforations/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellPerfs([...wellPerfs, newPerforation]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewPlug = async () => {\n        const newPlug = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPlug)\n        };\n        const response = await fetch('/api/wells/plugs/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellPlugs([...wellPlugs, newPlug]);\n            setRefresh(Math.random())\n        }\n    };\n\n    function handleDeleteWell(event){\n        setShowWellDel(true);\n    }\n\n    let wellInfoHTML;\n    if (props.well !== null) {\n        wellInfoHTML = \n        <div className=\"well-info\">\n                <div className=\"well-table-top row\">\n                    <div className=\"col-lg-8\"> \n                        <h2>{props.well.lease} {props.well.well_number} <span className=\"icon\" onClick={displayPopup}>{$faImage}</span> </h2>\n                    </div>\n                    \n                    <div className=\"col-lg-4 text-right\">\n                        <span className=\"icon-trash-lrg\" onClick={handleDeleteWell}>{$faTrashAlt}</span>\n                        <span className=\"bold-span\">Last Updated: </span>{formatDate()}\n                    </div>                    \n                </div>\n                <div className=\"well-table-id row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">API Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"API_number\" className=\"input-hidden\" value={props.well.API_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Company: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"company\" className=\"input-hidden\" value={props.well.company} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Permit Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"permit_number\"className=\"input-hidden\" value={props.well.permit_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Current Status: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"current_status\" className=\"input-hidden\" value={props.well.current_status} />\n                    </div>\n                </div>\n                <div className=\"well-table-location row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Location: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"location\" className=\"input-hidden\" value={props.well.location} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Section: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"section\" className=\"input-hidden\" value={props.well.section} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Survey: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"survey\" className=\"input-hidden\" value={props.well.survey} />\n                    </div>\n                    <div className=\"col-lg-3 county-state\">\n                        <div>\n                            <span className=\"bold-span\">County: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"county\" className=\"input-hidden county\" value={props.well.county} />\n                        </div>\n                        <div>\n                            <span className=\"bold-span\">State: </span> <input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"state\" className=\"input-hidden state\" value={props.well.state} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"well-table-field row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Field: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"field\" className=\"input-hidden\" value={props.well.field} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Initial Formation: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"initial_formation\" className=\"input-hidden\" value={props.well.initial_formation} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Spud Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"spud_date\" className=\"input-hidden\" value={props.well.spud_date} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Comp Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"completion_date\" className=\"input-hidden\" value={props.well.completion_date} />\n                    </div>\n                </div>\n                <div className=\"well-table-depths row mb-3\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Ground Level: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"ground_level\" className=\"input-hidden\" value={props.well.ground_level} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Kelley Bushing: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"kelley_bushing\" className=\"input-hidden\" value={props.well.kelley_bushing} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Derrick Floor: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"derrick_floor\" className=\"input-hidden\" value={props.well.derrick_floor} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Total Depth: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"total_depth\" className=\"input-hidden\" value={props.well.total_depth} />\n                    </div>\n                </div>\n                <div className=\"labels row\">\n                    <div className=\"hole-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label1\"> HOLE</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellHolesHTML}\n                            <button className=\"new-feature-button\" onClick={createNewHole}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"casing-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label2\">CASING</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCasingsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCasing}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"cement-col col\">\n                        <div className=\"showme\" >\n                            <p className=\"label3\">CEMENT</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCementsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCement}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"perf-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label4\">PERFORATIONS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPerfsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPerforation}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"plug-col col\">\n                        <div className=\"col showme\">\n                            <p className=\"label5\">PLUGS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPlugsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPlug}> Add New</button>\n                        </div>\n                    </div>\n                </div>\n            </div>;\n    } else {\n        wellInfoHTML = <div>Loading...<br />If this screen does not go away, you may not have permission to view this well.</div>;\n    }\n        \n    return (\n        <div className=\"well-container\">\n            {wellInfoHTML}\n            <DeleteConfirmationModal deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} showDelete={showDelete} setShowDelete={setShowDelete} history={props.history} setRefresh={setRefresh}/>\n            <DeleteWellModal history={props.history} setRefresh={setRefresh} showWellDel={showWellDel} setShowWellDel={setShowWellDel} setRefresh={setRefresh}/>\n            <PlatImageModal well={props.well} setWell={props.setWell} showImage={showImage} setShowImage={setShowImage}/>\n            <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh}/>\n        </div>\n    );\n};\n\nexport default withRouter(WellView)\n\n\n\n/*\n\n<div className=\"well-info\">\n    <h2>{props.well.lease} {props.well.well_number}</h2>\n    <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    I'm a well! \n</div>\n\n\n\nlet currentTarget;\n\n\n\n\n// add when widget loads\n\n... and finally some housekeeping\n\n// remove listener when destroying the widget\nwindow.removeEventListener(\"click\", clickOut);\n\n\n\n\n    // useEffect(() => {\n    //     // setWellHoles(wellFeatures.holes);\n    //     // setWellCasings(wellFeatures.casings);\n    //     // setWellCements(wellFeatures.cements);\n    //     // setWellPerfs(wellFeatures.perforations);\n    //     // setWellPlugs(wellFeatures.plugs);\n    // }, [wellFeatures]);\n\n    //CHANGE TO NOT USE INNERHTML!\n    // function editField(event){\n    //     if (!selected){\n    //         console.log(event);\n    //         id = event.target.id;\n    //         currentTarget = id;\n    //         value = event.target.attributes.value.value;\n    //         $active = document.getElementById(id)\n    //         console.log(value);\n    //         $active.innerHTML = `<input type='text' value=${value} />`;\n    //         window.addEventListener(\"click\", clickOut);\n    //         console.log($active);\n    //         selected = true;\n    //     }\n    // }\n\n    // const clickOut = (event) => {\n    //     if (!event.target.id.includes(currentTarget)) {\n    //         selected = false;\n    //         window.removeEventListener(\"click\", clickOut);\n    //         $active.innerHTML = `<span id=${id} value=${value} onClick={editField}>${value}</span>`\n    //     }\n    // };\n\nfetch(‘https://jsonplaceholder.typicode.com/todos/1', {\nmethod: ‘PATCH’,\nbody: JSON.stringify({\ncompleted: true\n}),\nheaders: {\n“Content-type”: “application/json; charset=UTF-8”\n}\n})\n.then(response => response.json())\n.then(json => console.log(json))\n\n\n\nasync function handleBlur(event){\n    event.preventDefault();\n    const options = {\n        method: 'PATCH',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(name: value)\n    };\n    const response = await fetch(``/api/wells/${props.match.params.id}/`, options);\n    const data = await response.json();\n    console.log('data', data);\n}\n\n\n\nconst newHole = async () => {\n    const newHole = {\n        well: props.match.params.id,\n        starting_depth: 0,\n        ending_depth: 0,\n        hole_size: ''\n    }\n    const options = {\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(newHole)\n    };\n    const response = await fetch('/api/wells/holes/', options);\n    if(!response){\n        console.log(response);\n    } else {\n        const data = await response.json();\n        setWellHoles([...wellHoles, newHole]);\n    }\n};\n\n\n\n*/","import Modal from 'react-bootstrap/Modal'\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\n\nfunction NewWellModal(props) {\n       \n    const handleClose = () => props.setShowNew(false);\n\n    const handleSave = async () => {\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newWell)\n        };\n        const response = await fetch('/api/wells/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            props.setShowNew(false);\n            console.log(data);\n            props.setWell(data);\n            props.history.push(`/wellinfo/${data.id}`);\n        }\n    }\n\n    const [newWell, setNewWell] = useState({\n        lease: '',\n        well_number: '',\n        API_number: '',\n        total_depth: 0,\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setNewWell(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showNew} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add New Well</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"form-container\">\n            <form className=\"mt-3 col-6 register-form\" >\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='lease'>Lease Name:</label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"lease\"\n                        placeholder=\"Enter lease\"\n                        onChange={handleInput}\n                        required\n                        name='lease'\n                        value={newWell.lease}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='well_number'>Well Number: </label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"well_number\"\n                        placeholder=\"Enter well number\"\n                        onChange={handleInput}\n                        required\n                        name='well_number'\n                        value={newWell.well_number}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='API_number'>API Number:</label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"API_number\"\n                        placeholder=\"Enter API number\"\n                        onChange={handleInput}\n                        required\n                        name='API_number'\n                        value={newWell.API_number}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='total_depth'>Total Depth:</label>\n                    <input type=\"number\" \n                        className=\"form-control\"\n                        id=\"total_depth\"\n                        placeholder=\"Enter total depth\"\n                        onChange={handleInput}\n                        required\n                        name='total_depth'\n                        value={newWell.total_depth}\n                    />\n                </div>\n            </form>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Discard\n            </Button>\n            <Button variant=\"primary\" onClick={handleSave}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default NewWellModal;","import { useState, useEffect } from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport './App.css';\nimport WelcomePage from './components/WelcomePage';\nimport WellView from './components/WellView';\nimport NewWellModal from './components/NewWellModal';\n//FOR TESTING, BELOW\n// import Diagram from './components/Diagram';\n\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [isAuth, setIsAuth] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const history = useHistory();\n  const [well, setWell] = useState(null);\n  const [showNew, setShowNew] = useState(false);\n\n  useEffect(()=> {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        setIsAuth(false);\n        if (history.location.pathname !== '/register') {\n          history.push('/login');\n        }\n      } else {\n        const data = await response.json();\n        const ID=data.pk;\n        const username=data.username;\n        setIsAuth(true);\n        setUserID(ID);\n        setUserName(username);\n      }\n    }\n    checkAuth();\n  }, [isAuth]) //history, \n\n  if (isAuth === null){\n    return <Spinner animation=\"grow\" variant='primary' />\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/register' >\n          <RegistrationForm isAuth={isAuth} setIsAuth={setIsAuth}/>\n        </Route>\n        <Route path='/login'>\n            <LoginForm  isAuth={isAuth} setIsAuth={setIsAuth} history={history}/>\n        </Route>       \n        <Route path='/wellinfo/:id'>\n            <WellView well={well} setWell={setWell} userID={userID} setUserID={setUserID} history={history}/>\n        </Route>\n        {/* <Route path='/diagram'>\n            <Diagram />\n        </Route>               */}\n        {/* <Route path='/wellslist'>\n            <WellList isAuth={isAuth} history={history} well={well} setWell={setWell}/>\n        </Route>        */}\n        <Route path=''>\n          <WelcomePage isAuth={isAuth} setIsAuth={setIsAuth} userID={userID} history={history} userName={userName} well={well} setWell={setWell} setShowNew={setShowNew} showNew={showNew}/>\n          <NewWellModal setShowNew={setShowNew} showNew={showNew} history={history} userID={userID} setUserID={setUserID} setWell={setWell}/>\n        </Route>        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
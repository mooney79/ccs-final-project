{"version":3,"sources":["components/LoginForm.js","components/RegistrationForm.js","components/WellItem.js","components/WellList.js","components/Chart.js","components/WelcomePage.js","components/WellHoles.js","components/WellCasings.js","components/WellCements.js","components/WellPerfs.js","components/WellPlugs.js","components/DeleteDetails.js","components/DeleteConfirmationModal.js","components/DeleteWellModal.js","components/PlatImageModal.js","StaticImages/cement-texture.jpeg","components/Diagram.js","components/WellView.js","components/NewWellModal.js","StaticImages/CMlogo.png","components/SplashModal.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","username","password","userLog","setUserLog","handleInput","event","target","name","value","prevState","handleError","err","console","warn","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","log","json","data","set","key","setIsAuth","isAuth","to","className","onSubmit","htmlFor","type","id","placeholder","onChange","required","password1","href","onClick","history","push","RegistrationForm","email","password2","userReg","setUserReg","error","setError","WellItem","idString","useHistory","fetchWell","ok","setWell","lease","well_number","API_number","parentElement","WellList","list","wellList","setWellList","useEffect","fetchWells","map","well","Spinner","animation","variant","setShowNew","showNew","Chart","results","choice","setChoice","chartData","setChartData","prices","forEach","row","x","created_at","y","price","year","slice","month","parseInt","toString","day","Date","fetchPricePeriod","config","line","caps","size","end_type","start_type","defaultPoint_marker_visible","series","points","mutable","Button","WelcomePage","logHTML","handleLogout","user","remove","userID","WellHoles","$faTrashAlt","icon","faTrashAlt","inverse","pull","handleHoleChange","onBlur","handleHoleBlur","hole_size","starting_depth","ending_depth","$delTarget","currentTarget","getClass","attributes","class","length","getID","children","setDeleteTarget","element","setIsClicked","WellCasings","gaugeHTML","handleCasingChange","handleCasingBlur","defaultValue","gauge","casing_weight","casing_grading","WellCements","handleCementChange","handleCementBlur","cement_type","sacks_pumped","WellPerfs","handlePerforationChange","handlePerforationBlur","perforation_interval","perforation_total_holes","WellPlugs","plugHTML","plugChoiceHTML","handleDelete","plug_type","handlePlugChange","handlePlugBlur","set_depth","DeleteDetails","DeleteConfirmationModal","deleteDetails","setDeleteDetails","handleClose","setShowDelete","deleteTarget","delHTML","urlPicker","setRefresh","Math","random","fetchDeleteDetails","showDelete","detailPairs","Object","entries","pair","Modal","show","onHide","Header","closeButton","Title","Body","Footer","DeleteWellModal","setShowWellDel","urlId","location","pathname","showWellDel","PlatImageModal","imageHTML","setPreview","plat_image","src","alt","file","files","reader","FileReader","onloadend","result","readAsDataURL","showImage","setShowImage","formData","FormData","append","Diagram","canvas0Ref","useRef","canvas1Ref","canvas2Ref","canvas3Ref","ctx0Ref","ctx1Ref","ctx2Ref","ctx3Ref","xlgEndRef","lrgEndRef","medEndRef","regEndRef","smlEndRef","xsmEndRef","table","setTable","setActiveTable","drawPipe","w","h","next","current","beginPath","lineWidth","strokestyle","fillStyle","fillRect","moveTo","lineTo","stroke","closePath","drawCasingSet","fill","drawEachPerf","x2","y2","strokeStyle","drawCementPlug","drawMechPlug","findPipeXAtY","findPipeWAtY","canvas0","ctx0","getContext","width","window","innerWidth","height","innerHeight","addEventListener","canvas1","ctx1","ptrn","img","Image","dirt","canvas2","ctx2","ctx3","clearRect","casings","aIndex","cements","casingArray","cementArray","casing","xlgEnd","round","total_depth","depth","undefined","lrgEnd","medEnd","regEnd","smlEnd","xsmEnd","cement","cementXTop","cementXBottom","cementY","cementBottom","cementW","TopY","BottomY","TopX","BottomX","W","idArray","i","indexOf","pop","findA","wellCasings","wellCements","casingA","casingX","casingY","casingW","casingH","includes","drawCasings","onload","createPattern","deltaX","cementH","cementX","cementX2","xArray","sort","b","findNextPipeXAtY","wellPlugs","plug","plugY","plugX","plugW","plugH","wellPerfs","perf","perfY","perfH","perfX","perfW","topLine","font","fillText","midLine","botLine","setLineDash","drawDepthGuides","refresh","ref","wellHolesHTML","wellCasingsHTML","wellCementsHTML","wellPerfsHTML","wellPlugsHTML","$faImage","faImage","wellFeatures","setWellFeatures","wellHoles","setWellHoles","setWellCasings","setWellCements","setWellPerfs","setWellPlugs","isClicked","handleChange","handleBlur","propertyName","match","params","fetchWellFeatures","holes","perforations","plugs","index","findIndex","hole","test","wellInfoHTML","createNewHole","newHole","createNewCasing","newCasing","createNewCement","newCement","createNewPerforation","newPerforation","createNewPlug","newPlug","rawDate","updated_at","formatDate","company","permit_number","current_status","section","survey","county","state","field","initial_formation","spud_date","completion_date","ground_level","kelley_bushing","derrick_floor","NewWellModal","handleSave","newWell","setNewWell","SplashModal","welcomeHTML","setShowSplash","setPrice","showCollapse","setShowCollapse","fetchPrice","formatted","userName","showSplash","CMlogo","Collapse","in","App","setUserName","setUserID","checkAuth","ID","pk","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2f9cd79.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props){\n    const [userLog, setUserLog] = useState({\n        username: '',\n        password: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserLog(prevState => ({   //prevState is a variable name for the previous\n            ...prevState,         //value of the state\n            [name]:value,\n        }))\n    }\n\n    function handleError(err){\n        console.warn(err);\n    }\n    \n    async function handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(userLog)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`); // This is bad mang.\n            props.setIsAuth(true);\n            // props.history.push('/profile');  // This pushes the browser to the next area\n        }\n    \n    }\n    if (props.isAuth){  //Example of a redirect, but kind of balls user-friendly-wise.  Instead, replace login button with logout button\n        return <Redirect to=\"/\" />\n    } //Could flip it to protect \"profileForm\" and redirect them to login\n\n    function directToRegister(){\n        props.history.push('/register');\n    }\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 login-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userLog.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={userLog.password1}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Log in</button>            \n            <p className=\"text-center\">Not  a member?  Click <a href=\"\" onClick={directToRegister}>here</a> to register.</p>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { useState } from 'react'\nimport Cookies from 'js-cookie'\n\nfunction RegistrationForm(props){\n    const [userReg, setUserReg] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserReg(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n\n    const [error, setError] = useState(null);\n\n    function handleError(err){\n        console.warn(err);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(userReg.password1 !== userReg.password2){\n            setError('Passwords do not match!');\n        } else {\n            //fire off registration process\n            const options = {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                },\n                body: JSON.stringify(userReg)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response){\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setIsAuth(true);\n            }\n        }\n    }\n\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 register-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userReg.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='email'>Email address</label>\n                <input type=\"email\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter E-mail\"\n                    onChange={handleInput}\n                    required\n                    name='email'\n                    value={userReg.email}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password1'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password1\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password1'\n                    value={userReg.password1}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password2'>Confirm Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password2\"\n                    placeholder=\"Re-enter password\"\n                    onChange={handleInput}\n                    required\n                    name='password2'\n                    value={userReg.password2}\n                />\n                {error &&<span className=\"text-danger\"> {error}</span>}\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Register</button>\n        </form>\n        </div>\n    )\n\n}\n\nexport default RegistrationForm","import { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction WellItem(props) {\n    const id = props.id;\n    const idString = `${id}`;\n    const history = useHistory();\n\n    const fetchWell = async () => {\n      const response = await fetch(`/api/wells/${id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n    function handleClick(event){\n      const wellID = event.target.parentElement.id;\n      fetchWell();\n    }\n\n  return(\n    <li className=\"ListItem\" id={idString}>\n        <p className=\"list-p\">{props.lease} {props.well_number}</p> <p><span className=\"bold-span\">API:</span> {props.API_number} </p> <button onClick={handleClick}className=\"li-button\">Select</button>\n    </li>\n  )\n  }\n\nexport default WellItem;\n","import { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport WellItem from './WellItem';\nimport Spinner from 'react-bootstrap/esm/Spinner';\n\nfunction WellList(props){\n\n    const [wellList, setWellList] = useState([]);\n    \n\n    useEffect(()=> {\n        const fetchWells = async () => {\n        const response = await fetch('/api/wells/user/', \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                }\n        });\n        if (!response.ok) {\n            console.log('Error fetching wells');\n        } else {\n            const data = await response.json();\n            setWellList(data);\n        }\n        }\n        fetchWells();\n    }, []);\n\n    let list;\n    if (wellList !== []){\n        list = wellList.map(well => <WellItem key={well.id+9000} {...well} wellList={wellList} setWellList={setWellList} setWell={props.setWell} />)\n    } else {\n        list = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n    return (\n        <div className=\"well-list-container\">\n            <p><span className=\"bold-span\"> Your wells: </span></p>\n            <ul className=\"well-ul\">\n                {list}\n                <li className=\"ListItem\" id=\"new-well\">\n                    <button className=\"list-p li-button\" onClick={() => {console.log(\"I fired!\"); props.setShowNew(true);console.log(props.showNew)}}> Add New Well</button>\n                </li>\n            </ul>\n        </div>\n    )    \n}\n\nexport default WellList","import React from 'react';\nimport { JSCharting } from 'jscharting-react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie';\n\nfunction Chart() {\n    let results=[];\n    const [choice, setChoice] = useState('month');\n    const [chartData, setChartData] = useState([]);\n\n    async function fetchPricePeriod(){        \n        const response = await fetch(`/api/prices/past_${choice}/`, \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n        });if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.prices.forEach(row => {\n                results.push({x: row.created_at, y: row.price});\n            });\n            results.forEach(row => {\n                let year = row.x.slice(0,4);\n                let month = row.x.slice(5,7);\n                month = parseInt(month);\n                month--;\n                month = month.toString();\n                let day = row.x.slice(8,10);\n                row.x = new Date(year, month, day);\n            })\n            console.log(results);\n            setChartData(results);    \n        }\n    }\n\n\n    \n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n        fetchPricePeriod();\n    }, [choice]);\n    \n    const config = {\n        type: 'line',\n\n        line: {\n            caps: {\n              size: \"200%\",\n              end_type: \"arrow\",\n              start_type: \"circle\"\n            }\n          },\n\n        defaultPoint_marker_visible: false,\n\n        series: [\n            {\n                points: chartData                \n            }\n        ]\n    };\n\n    \n    function handleMonth(){\n        setChoice('month');\n    };\n\n    function handleWeek(){\n        setChoice('week');\n    };\n\n\n\n    return (\n        <>\n        <h3>WTI Oil Prices:</h3> \n        <div className=\"chart\"><JSCharting options={config} mutable={false} /></div>\n        <div className=\"chart-buttons\">\n            <Button className=\"chart-button\" onClick={handleMonth} variant=\"warning\">Past Month</Button>\n            <Button className=\"chart-button\" onClick={handleWeek} variant=\"warning\">Past Week</Button>\n        </div>\n        </>\n    );\n}\n\nexport default Chart;","import { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport WellList from './WellList';\nimport Chart from './Chart';\n\nfunction WelcomePage(props){\n\n    const handleLogout = async () => {\n        const options = {\n          method: 'POST',\n          headers:{\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(props.user)\n        };\n    const response = await fetch('/rest-auth/logout/', options)\n      if(!response){\n          console.log(response);\n      } else {\n        Cookies.remove('Authorization');\n        Cookies.remove('SessionID');\n        props.setIsAuth(false);\n      }\n    };\n\n    let logHTML;\n    let IDtestHTML;\n    if(props.isAuth){\n        IDtestHTML = <p>User ID: {props.userID}</p>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={handleLogout}>Logout</div>\n    } else {\n        IDtestHTML = <></>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={() => props.history.push('/login')}>Login</div>\n    }\n\n\n    return (\n        <div className=\"welcome-container\">           \n            <WellList setWell={props.setWell} well={props.well} setShowNew={props.setShowNew} showNew={props.showNew}/> \n            {logHTML}            \n        </div>\n    )\n}\n\nexport default WelcomePage","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellHoles(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-hole\">\n            <p>Hole Size:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"hole_size\" className=\"input-hidden\" value={props.hole_size} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellHoles;\n//<i class=\"far fa-trash-alt\"></i>\n//So... \n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellCasings(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n    \n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    \n    let gaugeHTML;\n\n    gaugeHTML = \n    <select id={props.id} onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"gauge\" className=\"input-hidden\" defaultValue={props.gauge} >\n        <option value=\"xlg\" >13 3/8\"</option>\n        <option value=\"lrg\" >9 5/8\"</option>\n        <option value=\"med\" >8 5/8\"</option>\n        <option value=\"reg\" >7\"</option>\n        <option value=\"sml\" >5 1/2\"</option>\n        <option value=\"xsm\" >4 1/2\"</option>\n    </select>\n\n    return(\n        <div className=\"well-casing\">\n            <p>Casing Gauge:</p> {gaugeHTML}\n            <p>Casing Weight:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"casing_weight\" className=\"input-hidden\" value={props.casing_weight} />\n            <p>Casing Grading:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"casing_grading\" className=\"input-hidden\" value={props.casing_grading} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellCasings;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellCements(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\" />\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-cement\">\n        <p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />\n        <p>Sacks Pumped: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Top of Cement: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Bottom of Cement: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellCements;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nfunction WellPerfs(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\" />\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    return(\n        <div className=\"well-perfs\">\n            <p>Perforation Interval:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"perforation_interval\" className=\"input-hidden\" value={props.perforation_interval} />\n            <p>Total Holes:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"perforation_total_holes\" className=\"input-hidden\" value={props.perforation_total_holes} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellPerfs;\n\n/*\n<input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n\nending_depth: 8404\nid: 1\nperforation_interval: \"15'\"\nperforation_total_holes: \"250\"\nstarting_depth: 8076\nwell: 1\n\n\n*/","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellPlugs(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    let plugHTML;\n    let plugChoiceHTML;  \n    \n    if(props.plug_type === 'CP') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Sacks Pumped:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    } else if (props.plug_type === 'MP') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    } else if (props.plug_type === 'DV') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Set Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"set_depth\" className=\"input-hidden\" value={props.set_depth} />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    }\n\n    return(\n        <>\n        <select id={props.id} onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"plug_type\" className=\"input-hidden\" defaultValue={props.plug_type} >\n            <option value=\"CP\" >Cement Plug</option>\n            <option value=\"MP\" >Mechanical Plug</option>\n            <option value=\"DV\" >Diverter Valve</option>\n        </select>\n        {plugHTML}\n        </>\n    )\n}\n\nexport default WellPlugs;\n\n//<p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />","function DeleteDetails(props){\n\n    return (\n        <>\n            <p><span className=\"bold-span\">{props[0]}:</span> {props[1]} </p>\n        </>\n    )\n}\n\nexport default DeleteDetails;","import Modal from 'react-bootstrap/Modal'\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\nimport DeleteDetails from './DeleteDetails';\n\nfunction DeleteConfirmationModal(props) {\n    const [deleteDetails, setDeleteDetails] = useState({});\n    const handleClose = () => props.setShowDelete(false);\n    const {id, element} = props.deleteTarget;\n    let delHTML='';\n    let urlPicker='';\n\n    const handleDelete = async () => {\n       \n        const options = {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        console.log(urlPicker);\n        const response = await fetch(urlPicker, options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            // console.log(data);\n            // props.setShowDelete(false);\n            handleClose();\n            props.setDeleteTarget({});\n            props.setRefresh(Math.random());\n            \n            // handleClose();\n            // props.history.push(props.history.location.pathname);\n            // props.history.push(`/wellinfo/${data.id}`);\n        }\n    }\n\n    useEffect(() => {\n        const fetchDeleteDetails = async () => {\n            const response = await fetch(urlPicker, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well feature');\n            } else {\n                const data = await response.json();\n                setDeleteDetails(data);\n            }\n        }\n        fetchDeleteDetails();        \n    }, [props.showDelete]);\n\n    // console.log(props);\n    if (props.showDelete === true) {\n    \n    switch(element) {\n        case 'hole':\n            urlPicker = `/api/wells/holes/${id}/`;\n            break;\n        case 'casing':\n            urlPicker = `/api/wells/casings/${id}/`;\n            break;\n        case 'cement':\n            urlPicker = `/api/wells/cements/${id}/`;\n            break;\n        case 'perfs':\n            urlPicker = `/api/wells/perforations/${id}/`;\n            break;\n        case 'plug':\n            urlPicker = `/api/wells/plugs/${id}/`;\n            break;\n        default:\n            console.log('Error: no urlPicker defined for delete feature');\n    }\n    // console.log(element, id);\n    // console.log(urlPicker);\n    // useEffect(() => {\n    //     const fetchDeleteDetails = async () => {\n    //         const response = await fetch(urlPicker, \n    //         {headers: {\n    //                 'Content-Type': 'application/json',\n    //                 'X-CSRFToken': Cookies.get('csrftoken'),\n    //                 }\n    //         });\n    //         if (!response.ok) {\n    //             console.log('Error fetching well feature');\n    //         } else {\n    //             const data = await response.json();\n    //             setDeleteDetails(data);\n    //             // console.log(data);\n    //             // if (data !== {}) {\n    //                 // for (const [key, value] of Object.entries(data)){\n    //                 //     delHTML += `<p>${key}: ${value}</p>`;\n    //                     // delHTML += `<p><span className=\"bold-span\">${key}: ${value}</span></p> <br />`;\n    //                 // }\n    //             // }\n    //         }\n    //     }\n    //     fetchDeleteDetails();\n        \n        \n    // }, [/*props.deleteTarget*/]);\n\n    \n    \n    // console.log(deleteDetails);\n    // if (deleteDetails !== {}) {\n    //     for (const [key, value] of Object.entries(deleteDetails)){\n    //         delHTML = <><p><span className=\"bold-span\">{key}:</span> {value} </p><br/></>\n    //     }\n    // }\n    if (deleteDetails !== {}) {\n        const detailPairs = Object.entries(deleteDetails);\n        console.log(detailPairs);\n        delHTML = detailPairs.map(pair => <DeleteDetails key={Math.random()*450} {...pair} />);\n    }\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showDelete} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Entry</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Are you sure you want to delete this entry? This action cannot be undone.</p>\n            <br />\n            <div>\n                {delHTML}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Keep Data\n            </Button>\n            <Button variant=\"primary\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default DeleteConfirmationModal;\n\n/*\nTO DO:\n------\nFigure out where to put this, and what props are needed.\nRewrite this to pop up when a delete button is pressed.\nRewrite the fetch to delete the entry.\nCan I figure out how to call it without cloning 5 times for each feature?\nWrite the detai views/urls needed for the fetch.\n*/","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\n// import DeleteDetails from './DeleteDetails';\n\nfunction DeleteWellModal(props) {\n    const handleClose = () => props.setShowWellDel(false);\n    const urlId=props.history.location.pathname.slice(10);\n    const urlPicker=`/api/wells/${urlId}`;\n\n\n    const handleDelete = async () => {\n       \n        const options = {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(urlPicker, options);\n        if(!response){\n            console.log(response);\n        } else {\n            props.setRefresh(Math.random())\n            props.history.push('');\n        }\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showWellDel} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Well</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Are you sure you want to delete this Well? This action cannot be undone.</p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Keep Well\n            </Button>\n            <Button variant=\"primary\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default DeleteWellModal;","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport { useState } from 'react';\nimport Cookies from 'js-cookie'\n// import DeleteDetails from './DeleteDetails';\n\nfunction PlatImageModal(props) {\n  const handleClose = () => props.setShowImage(false);\n\n  const [preview, setPreview] = useState('');\n\n  const handleImage = (event) => {\n    const file = event.target.files[0];\n    props.setWell({\n      ...props.well,\n      plat_image: file,\n    })\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreview(reader.result);\n    }\n    reader.readAsDataURL(file); //returns URL\n  }\n\n    // const urlId=props.history.location.pathname.slice(10);\n    // const urlPicker=`/api/wells/${urlId}`;\n\n\n    // const handleDelete = async () => {\n       \n    //     const options = {\n    //         method: 'DELETE',\n    //         headers:{\n    //             'Content-Type': 'application/json',\n    //             'X-CSRFToken': Cookies.get('csrftoken'),\n    //         },\n    //     };\n    //     const response = await fetch(urlPicker, options);\n    //     if(!response){\n    //         console.log(response);\n    //     } else {\n    //         props.history.push('');\n    //     }\n    // }\n\n    function handleUpload(){\n      const formData = new FormData(); //Constructing key value pairs below VVV\n      formData.append('plat_image', props.well.plat_image);\n\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'X-CSRFToken': Cookies.get('csrftoken'), \n        },\n        body: formData,\n        // body: JSON.stringify({[propertyName]: value})\n      }\n      fetch(`/api/wells/${props.well.id}/`, options); \n      // fetch(`/media/`, options); \n    }\n\n    let imageHTML;\n    if(props.well){      \n      imageHTML=\n      <div className=\"ImageForm\">\n        {/* if (props.well.plat_image) {\n          <img src={props.well.plat_image} alt=\"plat_image\" />\n        } else {*/}\n        {props.well.plat_image && <img className=\"prev\" src={props.well.plat_image} alt =\"\" />}\n        <input type=\"file\" name=\"plat_image\" onChange={handleImage}/>\n      </div>\n    } else {\n      imageHTML=<></>\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showImage} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Plat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {imageHTML}\n          </Modal.Body>\n          <Modal.Footer>           \n            <Button variant=\"primary\" onClick={handleUpload}>\n              Upload Photo\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default PlatImageModal;\n\n/*\n\n<Button variant=\"secondary\" onClick={handleClose}>\n  Keep Well\n</Button>\n\n\n\n\n  \n  const handleUpload = (event) => {\n    // event.preventDefault();\n    const formData = new FormData(); //Constructing key value pairs below VVV\n    formData.append('plat_image', well.plat_image);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'), \n      },\n      body: formData,\n      // body: JSON.stringify({[propertyName]: value})\n    }\n    // fetch(`/api/wells/${props.well.id}/`, options); \n    fetch(`/media/`, options); \n  }\n\n  return (\n    <div className=\"ImageForm\">\n        <input type=\"file\" name=\"plat_image\" onChange={handleImage}/>\n        {props.well.plat_image && <img src={preview} alt =\"\" />}\n    </div>\n  );\n}\n\n\nconst fetchWell = async () => {\n      const response = await fetch(`/api/wells/${props.well.id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n\n\n\n\n*/","export default __webpack_public_path__ + \"static/media/cement-texture.0f27d432.jpeg\";","import { useEffect, useRef, useState } from \"react\";\nimport dirt from '../StaticImages/cement-texture.jpeg';\n\nfunction Diagram(props){\n    const canvas0Ref = useRef(null);\n    const canvas1Ref = useRef(null);\n    const canvas2Ref = useRef(null);\n    const canvas3Ref = useRef(null);\n    const ctx0Ref = useRef(null);\n    const ctx1Ref = useRef(null);\n    const ctx2Ref = useRef(null);\n    const ctx3Ref = useRef(null);\n    const xlgEndRef = useRef(null);\n    const lrgEndRef = useRef(null);\n    const medEndRef = useRef(null);\n    const regEndRef = useRef(null);\n    const smlEndRef = useRef(null);\n    const xsmEndRef = useRef(null);\n    const [table, setTable] = useState({\n        'xlg': xlgEndRef,\n        'lrg': lrgEndRef,\n        'med': medEndRef,\n        'reg': regEndRef,\n        'sml':smlEndRef,\n        'xsm': xsmEndRef,\n    });\n    const [activeTable, setActiveTable] = useState('');\n    const [cArray, setCArray] = useState([]);\n\n    useEffect(() => {\n        const canvas0 = canvas0Ref.current;\n        const ctx0 = canvas0.getContext('2d');\n        ctx0Ref.current = ctx0;\n\n        ctx0.width = window.innerWidth;\n        ctx0.height = window.innerHeight;\n\n        canvas0.addEventListener('resize', function() {\n        ctx0.width = window.innerWidth;\n        ctx0.height = window.innerHeight;\n        });\n\n        const canvas1 = canvas1Ref.current;\n        const ctx1 = canvas1.getContext('2d');\n        ctx1Ref.current = ctx1;\n\n        ctx1.width = window.innerWidth;\n        ctx1.height = window.innerHeight;\n\n        canvas1.addEventListener('resize', function() {\n        ctx1.width = window.innerWidth;\n        ctx1.height = window.innerHeight;\n        });\n\n        let img = new Image();\n        let ptrn;\n        img.src = dirt;        \n\n        const canvas2 = canvas2Ref.current;\n        const ctx2 = canvas2.getContext('2d');\n        ctx2Ref.current = ctx2;\n\n        canvas2.addEventListener('resize', function() {\n            ctx2.width = window.innerWidth;\n            ctx2.height = window.innerHeight;\n        });\n\n        const canvas3 = canvas3Ref.current;\n        const ctx3 = canvas3.getContext('2d');\n        ctx3Ref.current = ctx3;\n\n        canvas2.addEventListener('resize', function() {\n            ctx2.width = window.innerWidth;\n            ctx2.height = window.innerHeight;\n        });\n\n\n        ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n        \n        drawCasings(props.wellCasings);\n\n        img.onload = () => {\n            ptrn = ctx1.createPattern(img, 'repeat');\n            ctx1.fillStyle = ptrn;\n            ctx2.fillStyle = ptrn;\n            drawCements(props.wellCements);\n            placePlugs(props.wellPlugs);\n        }\n\n        placePerforations(props.wellPerfs);\n\n        if (props.well){\n            drawDepthGuides(props.well.total_depth);\n        }\n\n    }, [props.wellCasings, props.wellCements, props.wellPerfs, props.wellPlugs, props.refresh]);//[]\n\n\n\n\n    function drawCement(x, y, w, h, x2){\n        ctx1Ref.current.fillRect(x-x2, y, x2, h);\n        ctx1Ref.current.fillRect(x+w, y, x2, h);\n    }\n\n    function drawDepthGuides(depth){\n        ctx0Ref.current.strokeStyle = \"white\";\n        ctx0Ref.current.lineWidth=2;\n        const x = canvas0Ref.current.width;\n        const topLine = Math.round(depth*0.25);\n        ctx0Ref.current.fillStyle = \"white\";\n        ctx0Ref.current.font = '16px Oxygen';\n        ctx0Ref.current.fillText(topLine, 10, 891*0.25-10);\n        const midLine = Math.round(depth*0.5);\n        ctx0Ref.current.fillText(midLine, 10, 891*0.5-10);\n        const botLine = Math.round(depth*0.75);\n        ctx0Ref.current.fillText(botLine, 10, 891*0.75-10);\n        ctx0Ref.current.beginPath();\n        ctx0Ref.current.setLineDash([5, 15]);\n        ctx0Ref.current.moveTo(0, 891*0.25);\n        ctx0Ref.current.lineTo(x,891*0.25);\n        ctx0Ref.current.stroke();\n        ctx0Ref.current.moveTo(0, 891*0.5);\n        ctx0Ref.current.lineTo(x,  891*0.5);\n        ctx0Ref.current.stroke();\n        ctx0Ref.current.moveTo(0, 891*0.75);\n        ctx0Ref.current.lineTo(x, 891*0.75);\n        ctx0Ref.current.stroke();\n    }\n\n    function drawPipe(x, y, w, h, a, size){\n        ctx2Ref.current.beginPath();\n        let next;\n        switch (size){\n            case 'xlg': ctx2Ref.current.lineWidth= 6;\n                if (table['lrg']['current'] !== null ){\n                    next = 15;\n                } else if (table['med']['current']  !== null ){\n                    next = 30;\n                } else if (table['reg']['current']  !== null ){\n                    next = 45;\n                } else if (table['sml']['current']  !== null ){\n                    next = 60;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 75;\n                } else {next = 90}\n                break;\n            case 'lrg': ctx2Ref.current.lineWidth= 5;\n                if (table['med']['current']  !== null ){\n                    next = 15;\n                } else if (table['reg']['current']  !== null ){\n                    next = 30;\n                } else if (table['sml']['current']  !== null ){\n                    next = 45;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 60;\n                } else {next = 75}\n                break;\n            case 'med': ctx2Ref.current.lineWidth= 4;\n                if (table['reg']['current']  !== null ){\n                    next = 15;\n                } else if (table['sml']['current'] !== null ){\n                    next = 30;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 45;\n                } else {next = 60}\n                break;\n            case 'reg': ctx2Ref.current.lineWidth= 3;\n                if (table['sml']  !== null ){\n                    next = 15;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 30;\n                } else {\n                    next = 45;\n                }\n                break;\n            case 'sml': ctx2Ref.current.lineWidth= 2;\n                if (table['xsm']['current']  !== null ){\n                    next = 15;\n                } else {\n                    next = 30;\n                }\n                break;\n            case 'xsm': ctx2Ref.current.lineWidth= 1;\n                next = 15;\n                break;\n        }\n        ctx2Ref.current.strokestyle = \"black\";\n        ctx2Ref.current.fillStyle=`rgba(182, 112, 37, ${a})`;\n        ctx2Ref.current.fillRect(x, y, w, h, a);\n        ctx2Ref.current.moveTo(x,y);\n        ctx2Ref.current.lineTo(x,y+h);\n        ctx2Ref.current.lineTo(x+next, y+h); //Change to get next pipe?\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x+w, y);\n        ctx2Ref.current.lineTo(x+w,y+h);\n        ctx2Ref.current.lineTo(x+w-next, y+h)\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n    }\n    \n    function drawCasingSet(x, y, w, size){\n        ctx2Ref.current.fillStyle=\"black\";\n        let lineWidth;\n        switch (size){\n            case 'xlg': lineWidth = 3;\n                break;\n            case 'lrg': lineWidth = 2.5;\n                break;\n            case 'med': lineWidth = 2;\n                break;\n            case 'reg': lineWidth = 1.5;\n                break;\n            case 'sml': lineWidth = 1;\n                break;\n            case 'xsm': lineWidth = 0.5;\n                break;\n        }\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x,y+lineWidth);\n        ctx2Ref.current.lineTo(x-30,y+lineWidth);\n        ctx2Ref.current.lineTo(x,y-30+lineWidth);\n        ctx2Ref.current.fill();\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x+w,y+lineWidth);\n        ctx2Ref.current.lineTo(x+w+30, y+lineWidth);\n        ctx2Ref.current.lineTo(x+w,y-30+lineWidth);\n        ctx2Ref.current.fill();\n    }\n\n    // function drawPerforations(x, y, w){\n    //     drawEachPerf(x, y);\n    //     drawEachPerf(x, y+15);\n    //     drawEachPerf(x, y+30);\n    //     drawEachPerf(x+w, y);\n    //     drawEachPerf(x+w, y+15);\n    //     drawEachPerf(x+w, y+30);\n    // }\n\n    function drawPerfPair(x, y, w){\n        drawEachPerf(x, y);\n        drawEachPerf(x+w, y);\n    }\n\n    function drawEachPerf(x2,y2) {\n        ctx2Ref.current.fillStyle = \"black\";\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.strokeStyle = \"white\";\n        ctx2Ref.current.moveTo(x2, y2-5);\n        ctx2Ref.current.lineTo(x2-30, y2);\n        ctx2Ref.current.lineTo(x2, y2+5);\n        ctx2Ref.current.lineTo(x2+30, y2);\n        ctx2Ref.current.lineTo(x2, y2-5);\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n        ctx2Ref.current.fill();\n        ctx2Ref.current.strokeStyle = \"black\";\n    }\n\n    function drawCementPlug(x,y,w,h){\n        ctx2Ref.current.fillRect(x, y, w, h);\n    }\n\n    function drawMechPlug(x,y,w,h){\n        ctx3Ref.current.fillStyle=\"black\";\n        ctx3Ref.current.fillRect(x, y, w, h);\n    }\n\n    function drawDVPlug(x, y, w){\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.lineWidth = 6;\n        ctx2Ref.current.moveTo(x, y);\n        ctx2Ref.current.lineTo(x-15, y+15);\n        ctx2Ref.current.moveTo(x+w, y);\n        ctx2Ref.current.lineTo(x+w+15, y+15);\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n    }\n\n    //CenterX 222px\n    //height 891px\n    // Ending_depth is to total_depth as X is to 891\n    //ED/TD = X/891\n    //X = ED/TD * 891\n\n    function findA(casings, cements){\n        let casingArray={};\n        let cementArray=[];\n        casings.forEach(casing => {\n            if (casing.gauge === 'xlg'){  \n                const xlgEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                xlgEndRef.current = xlgEnd;\n                casingArray['xlg'] = {\n                    id: casing.id,\n                    x: 132,\n                    depth: xlgEndRef.current}; \n            } else if (casingArray['xlg'] === undefined){\n                casingArray['xlg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'lrg'){\n                const lrgEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                lrgEndRef.current = lrgEnd;\n                casingArray['lrg'] = {\n                    id: casing.id,\n                    x: 147,\n                    depth: lrgEndRef.current};\n            } else if (casingArray['lrg'] === undefined){\n                casingArray['lrg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'med'){\n                const medEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                medEndRef.current = medEnd;\n                casingArray['med'] = {\n                    id: casing.id,\n                    x: 162,\n                    depth: medEndRef.current};\n            } else if (casingArray['med'] === undefined){\n                casingArray['med'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'reg'){\n                const regEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                regEndRef.current = regEnd;\n                casingArray['reg'] = {\n                    id: casing.id,\n                    x: 177,\n                    depth: regEndRef.current};\n            } else if (casingArray['reg'] === undefined){\n                casingArray['reg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'sml'){\n                const smlEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                smlEndRef.current = smlEnd;\n                casingArray['sml'] = {\n                    id: casing.id,\n                    x: 192,\n                    depth: smlEndRef.current};\n            } else if (casingArray['sml'] === undefined) {\n                casingArray['sml'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'xsm'){\n                const xsmEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                xsmEndRef.current = xsmEnd;\n                casingArray['xsm'] = {\n                    id: casing.id,\n                    x: 207,\n                    depth: xsmEndRef.current};\n            }\n            else if (casingArray['xsm'] === undefined){\n                casingArray['xsm'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n        });\n\n        cements.forEach(cement => {\n            const cementY=Math.round(cement.starting_depth*891/props.well.total_depth);\n            const cementBottom = Math.round(cement.ending_depth*891/props.well.total_depth);\n            let cementXTop;\n            let cementXBottom;\n            if (cementY < casingArray['xlg']['depth']){\n                cementXTop = 132;\n            } else if (cementY < casingArray['lrg']['depth']){\n                cementXTop = 147;\n            } else if (cementY < casingArray['med']['depth']){\n                cementXTop = 162;\n            } else if (cementY < casingArray['reg']['depth']){\n                cementXTop = 177;\n            } else if (cementY < casingArray['sml']['depth']){\n                cementXTop = 192;\n            } else if (cementY < casingArray['xsm']['depth']){\n                cementXTop = 207; \n            }\n            if (cementBottom <= casingArray['xlg']['depth'] +1){\n                cementXBottom = 132;\n            } else if (cementBottom <= casingArray['lrg']['depth'] +1){\n                cementXBottom = 147;\n            } else if (cementBottom <= casingArray['med']['depth'] +1){\n                cementXBottom = 162;\n            } else if (cementBottom <= casingArray['reg']['depth'] +1){\n                cementXBottom = 177;\n            } else if (cementBottom <= casingArray['sml']['depth'] +1){\n                cementXBottom = 192;\n            } else if (cementBottom <= casingArray['xsm']['depth'] +1){\n                cementXBottom = 207; \n            }\n\n            let cementW = cementXTop = cementXBottom;\n            if (cementW === 0){\n                cementW = 15;\n            }\n\n            cementArray.push({TopY: cementY, BottomY: cementBottom, TopX: cementXTop, BottomX: cementXBottom, W: cementW});\n        });                        \n        \n        let idArray=[];\n        for (let i = 0; i < cementArray.length; i++){\n            if (cementArray[i]['TopX']-cementArray[i]['W'] <= casingArray['xlg']['x'] && cementArray[i]['TopY'] < casingArray['xlg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['xlg']['id']) === -1)){\n                idArray.push(casingArray['xlg']['id']);\n            } else if (cementArray[i]['TopX'] - cementArray[i]['W'] <= casingArray['lrg']['x'] && cementArray[i]['TopY'] < casingArray['lrg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['lrg']['id']) === -1)){\n                idArray.push(casingArray['lrg']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['med']['x'] && cementArray[i]['TopY'] < casingArray['med']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['med']['id']) === -1)){\n                idArray.push(casingArray['med']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['reg']['x'] && cementArray[i]['TopY'] < casingArray['reg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['reg']['id']) === -1)){\n                idArray.push(casingArray['reg']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['sml']['x'] && cementArray[i]['TopY'] < casingArray['sml']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['sml']['id']) === -1)){\n                idArray.push(casingArray['sml']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['xsm']['x'] && cementArray[i]['TopY'] < casingArray['xsm']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['xsm']['id']) === -1)){\n                idArray.push(casingArray['xsm']['id']);\n            }\n        }\n        idArray.pop();\n        return idArray;\n    }\n\n\n    \n    function drawCasings(casings){\n        const aIndex = findA(props.wellCasings, props.wellCements);\n        let casingArray=[];\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'xlg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-90;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=180;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                \n                // let casingA;\n                // if (casingX in cArray){\n                //     casingA = 0;\n                // } else {\n                //     casingA = 1\n                // }\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n\n                // console.log(cArray);\n                \n                const xlgEnd = casingY+casingH;\n                xlgEndRef.current = xlgEnd;\n                \n                drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                \n                drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n            }\n            setTable(prevState => ({  \n                ...prevState,        \n                'xlg': xlgEndRef.current\n            }));      \n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'lrg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-75;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=150;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const lrgEnd = casingY+casingH;\n                lrgEndRef.current = lrgEnd; \n                drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'lrg': lrgEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'med' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-60;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=120;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const medEnd = casingY+casingH;\n                medEndRef.current = medEnd; \n                drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'med': medEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'reg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-45;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=90;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const regEnd = casingY+casingH;\n                regEndRef.current = regEnd; \n                drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'reg': regEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'sml' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-30;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=60;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const smlEnd = casingY+casingH;\n                smlEndRef.current = smlEnd; \n                drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'sml': smlEndRef.current\n                }));\n            }\n        });\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'xsm' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-15;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=30;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const xsmEnd = casingY+casingH;\n                xsmEndRef.current = xsmEnd; \n                drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'xsm': xsmEndRef.current\n                }));\n            }\n        });\n    }\n\n    function drawCements(cements){\n        cements.forEach(cement => {\n            const cementY=Math.round(cement.starting_depth*891/props.well.total_depth);\n            const cementH=Math.round(cement.ending_depth*891/props.well.total_depth)-cementY;\n            const cementBottom = Math.round(cement.ending_depth*891/props.well.total_depth);\n    \n            // console.log(cement.id)\n            const cementX = findPipeXAtY(cementBottom, table);\n            const cementXtop = findPipeXAtY(cementY, table);\n            const cementX2 = findNextPipeXAtY(cementX, cementXtop, cementY, table);\n            let deltaX;\n            // findA(cementXtop, cementX);\n            // console.log(cArray);\n            // console.log(cement.id, cementX, cementX2, cementXtop);\n            if (cementX2 === 0){  \n                deltaX = 15;\n            } else {\n                deltaX = cementX2;\n            }\n            const cementW = findPipeWAtY(cementBottom, table);\n            drawCement(cementX, cementY, cementW, cementH, deltaX);\n        })\n    }\n\n    function findPipeXAtY(y, table){\n        // console.log(table);\n        if (y < table['xlg']){\n            setActiveTable('xlg');\n            return 222-90\n        } else if (y < table['lrg']){\n            setActiveTable('xlg');\n            return 222-75\n        } else if (y < table['med']){\n            setActiveTable('lrg');\n            return 222-60\n        } else if (y < table['reg']){\n            setActiveTable('med');\n            return 222-45\n        } else if (y <= table['sml']){\n            setActiveTable('reg');\n            return 222-30\n        } else if (y <= table['xsm']){\n            setActiveTable('sml');\n            return 222-15\n        }\n    };\n\n    function findPipeWAtY(y, table){\n        if (y <= table['xlg']){\n            return 180\n        } else if (y < table['lrg']){\n            return 150\n        } else if (y < table['med']){\n            return 120\n        } else if (y < table['reg']){\n            return 90\n        } else if (y <= table['sml']){\n            return 60\n        } else if (y <= table['xsm']){\n            return 30\n        }\n    };\n\n    function findNextPipeXAtY(x, x2, y, table){\n        //Y is already set for x, x2.\n        let xArray = [];\n        if (xlgEndRef.current !== null){\n            xArray.push(findPipeXAtY(xlgEndRef.current-1, table));\n        }\n        if (lrgEndRef.current !== null){\n            xArray.push(findPipeXAtY(lrgEndRef.current-1, table));\n        } \n        if (medEndRef.current !== null){\n            xArray.push(findPipeXAtY(medEndRef.current-1, table));\n        }\n        if (regEndRef.current !== null){\n            xArray.push(findPipeXAtY(regEndRef.current-1, table));\n        }\n        if (smlEndRef.current !== null){\n            xArray.push(findPipeXAtY(smlEndRef.current-1, table));\n        }\n        if (xsmEndRef.current !== null){\n            xArray.push(findPipeXAtY(xsmEndRef.current-1, table));\n        }\n        \n        xArray.sort(function(a, b){return a-b});\n        \n        if (x2 === x){\n            return 15\n        } else {\n            return x - xArray[xArray.indexOf(x)-1];\n        }\n    }\n\n    function placePerforations(perfs){\n       perfs.forEach(perf => {\n            const perfY=Math.round(perf.starting_depth*891/props.well.total_depth);\n            const perfH=Math.round(perf.ending_depth*891/props.well.total_depth)-perfY;\n            const perfX = findPipeXAtY(perfY+perfH, table);\n            const perfW = findPipeWAtY(perfY+perfH, table);\n            drawPerfPair(perfX, perfY, perfW);\n        })\n    }\n\n    function placePlugs(plugs){\n        plugs.forEach(plug => {\n            if (plug.plug_type === \"DV\"){\n                const plugY=plug.set_depth*891/props.well.total_depth;\n                const plugX = findPipeXAtY(plugY, table);\n                const plugW = findPipeWAtY(plugY, table);\n                drawDVPlug(plugX, plugY, plugW);\n            } else {\n                const plugY=plug.starting_depth*891/props.well.total_depth;\n                const plugH=(plug.ending_depth*891/props.well.total_depth)-plugY;\n                if (plugY+plugH <= xlgEndRef.current){\n                    const plugX=222-90;\n                    const plugW=180;\n                    if (plug.plug_type === \"CP\"){\n                        drawCementPlug(plugX, plugY, plugW, plugH);\n                    } else {\n                        drawMechPlug(plugX, plugY, plugW, plugH);\n                    }\n                } else if (plugY+plugH <= lrgEndRef.current){\n                    const plugX=222-75;\n                    const plugW=150;\n                    if (plug.plug_type === \"CP\"){\n                        drawCementPlug(plugX, plugY, plugW, plugH);\n                    } else {\n                        drawMechPlug(plugX, plugY, plugW, plugH);\n                    }                    \n                } else if (plugY+plugH <= medEndRef.current){\n                    const plugX=222-60;\n                    const plugW=120;\n                    if (plug.plug_type === \"CP\"){\n                        drawCementPlug(plugX, plugY, plugW, plugH);\n                    } else {\n                        drawMechPlug(plugX, plugY, plugW, plugH);\n                    }    \n                } else if (plugY+plugH <= regEndRef.current){\n                    const plugX=222-45;\n                    const plugW=90;\n                    if (plug.plug_type === \"CP\"){\n                        drawCementPlug(plugX, plugY, plugW, plugH);\n                    } else {\n                        drawMechPlug(plugX, plugY, plugW, plugH);\n                    }    \n                } else if (plugY+plugH <= smlEndRef.current){\n                    const plugX=222-30;\n                    const plugW=60;\n                    if (plug.plug_type === \"CP\"){\n                        drawCementPlug(plugX, plugY, plugW, plugH);\n                    } else {\n                        drawMechPlug(plugX, plugY, plugW, plugH);\n                    }    \n                } else {\n                    const plugX=222-15;\n                    const plugW=30;\n                    if (plug.plug_type === \"CP\"){\n                        drawCementPlug(plugX, plugY, plugW, plugH);\n                    } else {\n                        drawMechPlug(plugX, plugY, plugW, plugH);\n                    }    \n                }\n            }\n        })\n    }\n\n    return (\n        <div className=\"bg-pseudo\">\n            <canvas id=\"canvas0\" width=\"444\" height=\"900\" ref={canvas0Ref}></canvas>\n            <canvas id=\"canvas1\" width=\"444\" height=\"900\" ref={canvas1Ref}></canvas>\n            <canvas id=\"canvas2\" width=\"444\" height=\"900\" ref={canvas2Ref}></canvas>\n            <canvas id=\"canvas3\" width=\"444\" height=\"900\" ref={canvas3Ref}></canvas>\n        </div>\n    )\n}\n\nexport default Diagram;","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport WellHoles from './WellHoles';\nimport WellCasings from './WellCasings';\nimport WellCements from './WellCements';\nimport WellPerfs from './WellPerfs';\nimport WellPlugs from './WellPlugs';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\nimport DeleteWellModal from './DeleteWellModal';\nimport PlatImageModal from './PlatImageModal';\nimport Diagram from './Diagram';\n\nfunction WellView(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} />\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight2\" size=\"2x\"/>\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    const [deleteTarget, setDeleteTarget] = useState({});\n    const [showDelete, setShowDelete] = useState(false);\n    const [isClicked, setIsClicked] = useState(false);\n    const [refresh, setRefresh] = useState(0);\n    const [showWellDel, setShowWellDel] = useState(false);\n    const [showImage, setShowImage] = useState(false);\n    let wellHolesHTML;\n    let wellCasingsHTML;\n    let wellCementsHTML;\n    let wellPerfsHTML;\n    let wellPlugsHTML;\n    /*\n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    */\n    \n    // console.log(props);\n    function displayPopup() {\n        setShowImage(true);\n        // const $popup = document.getElementById('popup');\n        // if ($popup.style.display === 'none'){\n        //     $popup.style.display = 'block';\n        // } else {\n        //     $popup.style.display = 'none';\n        // }\n    }\n    \n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        props.setWell({...props.well, [name]: value});\n    }\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    useEffect(() => {\n          \n        const fetchWell = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well');\n            } else {\n                const data = await response.json();                \n                props.setWell(data);               \n            }\n          }\n\n\n        const fetchWellFeatures = async () => {\n                      \n            const response = await fetch(`/api/wells/${props.match.params.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n            }\n        }\n        \n        fetchWell();\n        fetchWellFeatures();\n        setShowDelete(false);        \n    }, [refresh]);\n\n    useEffect(() => {\n        if (showDelete === false && isClicked === true) {\n            setShowDelete(true);\n        } else {\n            setShowDelete(false)\n        }\n    },[isClicked]);\n\n    async function handleBlur(event){\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        // const {propertyName, value} = event.target;\n        console.log(event.target);\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/${props.match.params.id}/`, options);\n        const data = await response.json();\n        console.log(propertyName, value);\n    }\n\n    const handleHoleChange = (event) => {\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        let index = wellHoles.findIndex((hole) => hole.id == id);\n        let test = [...wellHoles]\n        test[index][propertyName] = value;\n        setWellHoles(test);\n    }\n\n    async function handleHoleBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        console.log(event.target);\n        console.log(event.target.id);\n        console.log(id)\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/holes/${id}/`, options);\n        const data = await response.json();\n    }\n    \n    if (wellHoles === []){\n        wellHolesHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    } else {\n        wellHolesHTML = wellHoles.map(hole => <WellHoles key={hole.id+1000} {...hole} setWellHoles={setWellHoles} handleHoleChange={handleHoleChange} handleHoleBlur={handleHoleBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)        \n    }\n\n    const handleCasingChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCasings.findIndex(casing => casing.id == id);\n        let test = [...wellCasings]\n        test[index][name] = value;\n        setWellCasings(test);\n    }\n\n    async function handleCasingBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/casings/${id}/`, options);\n        const data = await response.json();\n    }\n\n    if (wellCasings !== []){\n        wellCasingsHTML = wellCasings.map(casing => <WellCasings key={casing.id+2000} {...casing} handleCasingChange={handleCasingChange} handleCasingBlur={handleCasingBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)\n    } else {\n        wellCasingsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handleCementChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCements.findIndex(cement => cement.id == id);\n        let test = [...wellCements]\n        test[index][name] = value;\n        setWellCements(test);\n    }\n\n    async function handleCementBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/cements/${id}/`, options);\n        const data = await response.json();\n    }\n\n    if (wellCements !== []){\n        wellCementsHTML = wellCements.map(cement => <WellCements key={cement.id+3000} {...cement} handleCementChange={handleCementChange} handleCementBlur={handleCementBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)\n    } else {\n        wellCementsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePerforationChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPerfs.findIndex(perf => perf.id == id);\n        let test = [...wellPerfs]\n        test[index][name] = value;\n        setWellPerfs(test);\n    }\n\n    async function handlePerforationBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/perforations/${id}/`, options);\n        const data = await response.json();\n    }\n\n    if (wellPerfs !== []){\n        wellPerfsHTML = wellPerfs.map(perf => <WellPerfs key={perf.id+4000} {...perf} handlePerforationChange={handlePerforationChange} handlePerforationBlur={handlePerforationBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)\n    } else {\n        wellPerfsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePlugChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPlugs.findIndex(plug => plug.id == id);\n        let test = [...wellPlugs]\n        test[index][name] = value;\n        setWellPlugs(test);\n    }\n\n    async function handlePlugBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/plugs/${id}/`, options);\n        const data = await response.json();\n    }\n\n\n    if (wellPlugs !== []){\n        wellPlugsHTML = wellPlugs.map(plug => <WellPlugs key={plug.id+5000} {...plug} handlePlugChange={handlePlugChange} handlePlugBlur={handlePlugBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh}/>)\n    } else {\n        wellPlugsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const createNewHole = async () => {\n        const newHole = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            hole_size: ''\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newHole)\n        };\n        const response = await fetch('/api/wells/holes/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellHoles([...wellHoles, newHole]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCasing = async () => {\n        const newCasing = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            casing_weight: '',\n            casing_grading: '',\n            gauge: 'sml',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCasing)\n        };\n        const response = await fetch('/api/wells/casings/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellCasings([...wellCasings, newCasing]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCement = async () => {\n        const newCement = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCement)\n        };\n        const response = await fetch('/api/wells/cements/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellCements([...wellCements, newCement]);\n            setRefresh(Math.random())\n        }\n    };\n    \n    const createNewPerforation = async () => {\n        const newPerforation = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            perforation_interval: '',\n            perforation_total_holes: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPerforation)\n        };\n        const response = await fetch('/api/wells/perforations/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellPerfs([...wellPerfs, newPerforation]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewPlug = async () => {\n        const newPlug = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPlug)\n        };\n        const response = await fetch('/api/wells/plugs/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            setWellPlugs([...wellPlugs, newPlug]);\n            setRefresh(Math.random())\n        }\n    };\n\n    function handleDeleteWell(event){\n        setShowWellDel(true);\n    }\n\n    let wellInfoHTML;\n    if (props.well !== null) {\n        wellInfoHTML = \n        <div className=\"well-info\">\n                <div className=\"well-table-top row\">\n                    <div className=\"col-lg-8\"> \n                        <h2>{props.well.lease} {props.well.well_number} <span className=\"icon\" onClick={displayPopup}>{$faImage}</span> </h2>\n                    </div>\n                    \n                    <div className=\"col-lg-4 text-right\">\n                        <span className=\"icon-trash-lrg\" onClick={handleDeleteWell}>{$faTrashAlt}</span>\n                        <span className=\"bold-span\">Last Updated: </span>{formatDate()}\n                    </div>                    \n                </div>\n                <div className=\"well-table-id row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">API Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"API_number\" className=\"input-hidden\" value={props.well.API_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Company: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"company\" className=\"input-hidden\" value={props.well.company} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Permit Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"permit_number\"className=\"input-hidden\" value={props.well.permit_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Current Status: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"current_status\" className=\"input-hidden\" value={props.well.current_status} />\n                    </div>\n                </div>\n                <div className=\"well-table-location row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Location: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"location\" className=\"input-hidden\" value={props.well.location} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Section: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"section\" className=\"input-hidden\" value={props.well.section} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Survey: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"survey\" className=\"input-hidden\" value={props.well.survey} />\n                    </div>\n                    <div className=\"col-lg-3 county-state\">\n                        <div>\n                            <span className=\"bold-span\">County: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"county\" className=\"input-hidden county\" value={props.well.county} />\n                        </div>\n                        <div>\n                            <span className=\"bold-span\">State: </span> <input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"state\" className=\"input-hidden state\" value={props.well.state} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"well-table-field row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Field: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"field\" className=\"input-hidden\" value={props.well.field} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Initial Formation: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"initial_formation\" className=\"input-hidden\" value={props.well.initial_formation} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Spud Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"spud_date\" className=\"input-hidden\" value={props.well.spud_date} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Comp Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"completion_date\" className=\"input-hidden\" value={props.well.completion_date} />\n                    </div>\n                </div>\n                <div className=\"well-table-depths row mb-3\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Ground Level: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"ground_level\" className=\"input-hidden\" value={props.well.ground_level} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Kelley Bushing: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"kelley_bushing\" className=\"input-hidden\" value={props.well.kelley_bushing} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Derrick Floor: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"derrick_floor\" className=\"input-hidden\" value={props.well.derrick_floor} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Total Depth: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"total_depth\" className=\"input-hidden\" value={props.well.total_depth} />\n                    </div>\n                </div>\n                <div className=\"labels row\">\n                    <div className=\"hole-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label1\"> HOLE</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellHolesHTML}\n                            <button className=\"new-feature-button\" onClick={createNewHole}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"casing-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label2\">CASING</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCasingsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCasing}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"cement-col col\">\n                        <div className=\"showme\" >\n                            <p className=\"label3\">CEMENT</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCementsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCement}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"perf-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label4\">PERFORATIONS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPerfsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPerforation}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"plug-col col\">\n                        <div className=\"col showme\">\n                            <p className=\"label5\">PLUGS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPlugsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPlug}> Add New</button>\n                        </div>\n                    </div>\n                </div>\n            </div>;\n    } else {\n        wellInfoHTML = <div>Loading...<br />If this screen does not go away, you may not have permission to view this well.</div>;\n    }\n        \n    return (\n        <div className=\"well-container\">\n            {wellInfoHTML}\n            <DeleteConfirmationModal deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} showDelete={showDelete} setShowDelete={setShowDelete} history={props.history} setRefresh={setRefresh}/>\n            <DeleteWellModal history={props.history} setRefresh={setRefresh} showWellDel={showWellDel} setShowWellDel={setShowWellDel} setRefresh={setRefresh}/>\n            <PlatImageModal well={props.well} setWell={props.setWell} showImage={showImage} setShowImage={setShowImage}/>\n            <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh}/>\n        </div>\n    );\n};\n\nexport default withRouter(WellView)\n\n\n\n/*\n\n<div className=\"well-info\">\n    <h2>{props.well.lease} {props.well.well_number}</h2>\n    <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    I'm a well! \n</div>\n\n\n\nlet currentTarget;\n\n\n\n\n// add when widget loads\n\n... and finally some housekeeping\n\n// remove listener when destroying the widget\nwindow.removeEventListener(\"click\", clickOut);\n\n\n\n\n    // useEffect(() => {\n    //     // setWellHoles(wellFeatures.holes);\n    //     // setWellCasings(wellFeatures.casings);\n    //     // setWellCements(wellFeatures.cements);\n    //     // setWellPerfs(wellFeatures.perforations);\n    //     // setWellPlugs(wellFeatures.plugs);\n    // }, [wellFeatures]);\n\n    //CHANGE TO NOT USE INNERHTML!\n    // function editField(event){\n    //     if (!selected){\n    //         console.log(event);\n    //         id = event.target.id;\n    //         currentTarget = id;\n    //         value = event.target.attributes.value.value;\n    //         $active = document.getElementById(id)\n    //         console.log(value);\n    //         $active.innerHTML = `<input type='text' value=${value} />`;\n    //         window.addEventListener(\"click\", clickOut);\n    //         console.log($active);\n    //         selected = true;\n    //     }\n    // }\n\n    // const clickOut = (event) => {\n    //     if (!event.target.id.includes(currentTarget)) {\n    //         selected = false;\n    //         window.removeEventListener(\"click\", clickOut);\n    //         $active.innerHTML = `<span id=${id} value=${value} onClick={editField}>${value}</span>`\n    //     }\n    // };\n\nfetch(‘https://jsonplaceholder.typicode.com/todos/1', {\nmethod: ‘PATCH’,\nbody: JSON.stringify({\ncompleted: true\n}),\nheaders: {\n“Content-type”: “application/json; charset=UTF-8”\n}\n})\n.then(response => response.json())\n.then(json => console.log(json))\n\n\n\nasync function handleBlur(event){\n    event.preventDefault();\n    const options = {\n        method: 'PATCH',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(name: value)\n    };\n    const response = await fetch(``/api/wells/${props.match.params.id}/`, options);\n    const data = await response.json();\n    console.log('data', data);\n}\n\n\n\nconst newHole = async () => {\n    const newHole = {\n        well: props.match.params.id,\n        starting_depth: 0,\n        ending_depth: 0,\n        hole_size: ''\n    }\n    const options = {\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(newHole)\n    };\n    const response = await fetch('/api/wells/holes/', options);\n    if(!response){\n        console.log(response);\n    } else {\n        const data = await response.json();\n        setWellHoles([...wellHoles, newHole]);\n    }\n};\n\n\n\n*/","import Modal from 'react-bootstrap/Modal'\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\n\nfunction NewWellModal(props) {\n       \n    const handleClose = () => props.setShowNew(false);\n\n    const handleSave = async () => {\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newWell)\n        };\n        const response = await fetch('/api/wells/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            props.setShowNew(false);\n            console.log(data);\n            props.setWell(data);\n            props.history.push(`/wellinfo/${data.id}`);\n        }\n    }\n\n    const [newWell, setNewWell] = useState({\n        lease: '',\n        well_number: '',\n        API_number: '',\n        total_depth: 0,\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setNewWell(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showNew} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add New Well</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"form-container\">\n            <form className=\"mt-3 col-6 register-form\" >\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='lease'>Lease Name:</label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"lease\"\n                        placeholder=\"Enter lease\"\n                        onChange={handleInput}\n                        required\n                        name='lease'\n                        value={newWell.lease}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='well_number'>Well Number: </label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"well_number\"\n                        placeholder=\"Enter well number\"\n                        onChange={handleInput}\n                        required\n                        name='well_number'\n                        value={newWell.well_number}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='API_number'>API Number:</label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"API_number\"\n                        placeholder=\"Enter API number\"\n                        onChange={handleInput}\n                        required\n                        name='API_number'\n                        value={newWell.API_number}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='total_depth'>Total Depth:</label>\n                    <input type=\"number\" \n                        className=\"form-control\"\n                        id=\"total_depth\"\n                        placeholder=\"Enter total depth\"\n                        onChange={handleInput}\n                        required\n                        name='total_depth'\n                        value={newWell.total_depth}\n                    />\n                </div>\n            </form>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Discard\n            </Button>\n            <Button variant=\"primary\" onClick={handleSave}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default NewWellModal;","export default __webpack_public_path__ + \"static/media/CMlogo.2c75626a.png\";","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\nimport CMlogo from '../StaticImages/CMlogo.png';\nimport Chart from './Chart';\nimport { useEffect, useState } from 'react';\nimport Collapse from 'react-bootstrap/Collapse'\nimport { NavLink } from 'react-router-dom';\n\n\n\nfunction SplashModal(props) {\n    const handleClose = () => props.setShowSplash(false);\n    const [price, setPrice] = useState(\"$0.00\");\n    const [showCollapse, setShowCollapse] = useState(false);\n    \n    const fetchPrice = async () => {\n      const response = await fetch('/api/prices/latest/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        console.log('Oops, I did it again.');\n      } else {\n        const data = await response.json();\n        setPrice(data.formatted);\n      }\n    }\n    \n    useEffect(() => {\n      fetchPrice();\n    }, []);\n\n    let welcomeHTML;\n    if (props.userName){\n      welcomeHTML=<h2 className=\"fp-h1 text-center\"> Welcome back, {props.userName}! </h2>\n    } else {\n      welcomeHTML=<h2 className=\"fp-h1 text-center\"> Welcome! Please <NavLink onClick={handleClose} to='/login'>log in</NavLink></h2>\n    }\n           \n    return (\n      <>  \n        <Modal id=\"splash-modal\" size=\"lg\" show={props.showSplash} onHide={handleClose}>\n          <Modal.Header  className=\"splash\" closeButton>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            <img className=\"logo\" src={CMlogo} alt=\"Case Manager logo\" />\n            <p className=\"text-center WTI-prompt\"  \n                onClick={() => setShowCollapse(!showCollapse)} \n                aria-controls=\"price-chart\"\n                aria-expanded={showCollapse}> \n                <span className=\"bold-span\">Current WTI Price:</span> {price}\n            </p>\n            <Collapse in={showCollapse}>\n              <div id=\"price-chart\">\n                <Chart />\n              </div>\n            </Collapse>\n            {welcomeHTML}\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">\n            <Button variant=\"warning\" onClick={handleClose}>\n              OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default SplashModal;","import { useState, useEffect } from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport './App.css';\nimport WelcomePage from './components/WelcomePage';\nimport WellView from './components/WellView';\nimport NewWellModal from './components/NewWellModal';\n//FOR TESTING, BELOW\n// import Diagram from './components/Diagram';\n// import Test from './components/Test';\nimport SplashModal from './components/SplashModal';\n\n\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [isAuth, setIsAuth] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const history = useHistory();\n  const [well, setWell] = useState(null);\n  const [showNew, setShowNew] = useState(false);\n  const [showSplash, setShowSplash] = useState(true);\n\n  useEffect(()=> {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        setIsAuth(false);\n        if (history.location.pathname !== '/register') {\n          history.push('/login');\n        }\n      } else {\n        const data = await response.json();\n        const ID=data.pk;\n        const username=data.username;\n        setIsAuth(true);\n        setUserID(ID);\n        setUserName(username);\n      }\n    }\n    checkAuth();\n  }, [isAuth]) //history, \n\n  if (isAuth === null){\n    return <Spinner animation=\"grow\" variant='primary' />\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/register' >\n          <RegistrationForm isAuth={isAuth} setIsAuth={setIsAuth}/>\n        </Route>\n        <Route path='/login'>\n            <LoginForm  isAuth={isAuth} setIsAuth={setIsAuth} history={history}/>\n            <SplashModal userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/>\n        </Route>       \n        <Route path='/wellinfo/:id'>\n            <WellView well={well} setWell={setWell} userID={userID} setUserID={setUserID} history={history}/>\n        </Route>\n        \n\n        {/* <Route path='/test'>\n            <Test userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/>\n        </Route>           */}\n\n        {/* <Route path='/chart'>\n            <Chart />\n        </Route>           \n        \n        */}\n       \n        {/* <Route path='/wellslist'>\n            <WellList isAuth={isAuth} history={history} well={well} setWell={setWell}/>\n        </Route>        */}\n        <Route path=''>\n          <WelcomePage isAuth={isAuth} setIsAuth={setIsAuth} userID={userID} history={history} userName={userName} well={well} setWell={setWell} setShowNew={setShowNew} showNew={showNew}/>\n          <SplashModal userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/>\n          <NewWellModal setShowNew={setShowNew} showNew={showNew} history={history} userID={userID} setUserID={setUserID} setWell={setWell}/>\n        </Route>        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/LoginForm.js","components/RegistrationForm.js","components/WellItem.js","components/WellList.js","components/WelcomePage.js","components/WellHoles.js","components/WellCasings.js","components/WellCements.js","components/WellPerfs.js","components/WellPlugs.js","components/WellView.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","username","password","userLog","setUserLog","handleInput","event","target","name","value","prevState","handleError","err","console","warn","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","log","json","data","set","key","setIsAuth","isAuth","to","className","onSubmit","htmlFor","type","id","placeholder","onChange","required","password1","href","RegistrationForm","email","password2","userReg","setUserReg","error","setError","WellItem","idString","history","useHistory","fetchWell","ok","setWell","push","lease","well_number","API_number","onClick","parentElement","WellList","list","wellList","setWellList","useEffect","fetchWells","map","well","Spinner","animation","variant","WelcomePage","logHTML","handleLogout","user","remove","userID","userName","WellHoles","handleHoleChange","onBlur","handleHoleBlur","hole_size","starting_depth","ending_depth","WellCasings","gaugeSize","gauge","handleCasingChange","handleCasingBlur","casing_weight","casing_grading","WellCements","handleCementChange","handleCementBlur","cement_type","sacks_pumped","WellPerfs","handlePerforationChange","handlePerforationBlur","perforation_interval","perforation_total_holes","WellPlugs","handlePlugChange","handlePlugBlur","wellHolesHTML","wellCasingsHTML","wellCementsHTML","wellPerfsHTML","wellPlugsHTML","$faImage","icon","faImage","size","setWellFeatures","wellHoles","setWellHoles","wellCasings","setWellCasings","wellCements","setWellCements","wellPerfs","setWellPerfs","wellPlugs","setWellPlugs","handleChange","handleBlur","propertyName","match","params","fetchWellFeatures","holes","casings","cements","perforations","plugs","index","findIndex","hole","test","casing","cement","perf","wellInfoHTML","plug","$popup","document","getElementById","style","display","rawDate","updated_at","year","slice","formatDate","company","permit_number","current_status","location","section","survey","county","state","field","initial_formation","spud_date","completion_date","ground_level","kelley_bushing","derrick_floor","total_depth","width","height","App","setUserName","setUserID","checkAuth","ID","pk","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0e9d0ea2.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props){\n    const [userLog, setUserLog] = useState({\n        username: '',\n        password: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserLog(prevState => ({   //prevState is a variable name for the previous\n            ...prevState,         //value of the state\n            [name]:value,\n        }))\n    }\n\n    function handleError(err){\n        console.warn(err);\n    }\n    \n    async function handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(userLog)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`); // This is bad mang.\n            props.setIsAuth(true);\n            // props.history.push('/profile');  // This pushes the browser to the next area\n        }\n    \n    }\n    if (props.isAuth){  //Example of a redirect, but kind of balls user-friendly-wise.  Instead, replace login button with logout button\n        return <Redirect to=\"/\" />\n    } //Could flip it to protect \"profileForm\" and redirect them to login\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 login-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userLog.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={userLog.password1}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Log in</button>            \n            <p className=\"text-center\">Not  a member?  Click <a href=\"/register\">here</a> to register.</p>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { useState } from 'react'\nimport Cookies from 'js-cookie'\n\nfunction RegistrationForm(props){\n    const [userReg, setUserReg] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserReg(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n\n    const [error, setError] = useState(null);\n\n    function handleError(err){\n        console.warn(err);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(userReg.password1 !== userReg.password2){\n            setError('Passwords do not match!');\n        } else {\n            //fire off registration process\n            const options = {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                },\n                body: JSON.stringify(userReg)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response){\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setIsAuth(true);\n            }\n        }\n    }\n\n\n    return(\n        <div className=\"form-container\">\n        <form className=\"mt-3 col-6 register-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userReg.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='email'>Email address</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter E-mail\"\n                    onChange={handleInput}\n                    required\n                    name='email'\n                    value={userReg.email}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password1'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password1\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password1'\n                    value={userReg.password1}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password2'>Confirm Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password2\"\n                    placeholder=\"Re-enter password\"\n                    onChange={handleInput}\n                    required\n                    name='password2'\n                    value={userReg.password2}\n                />\n                {error &&<span className=\"text-danger\"> {error}</span>}\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mt-3\" >Register</button>\n        </form>\n        </div>\n    )\n\n}\n\nexport default RegistrationForm","import { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction WellItem(props) {\n    const id = props.id;\n    const idString = `${id}`;\n    const history = useHistory();\n\n    const fetchWell = async () => {\n      const response = await fetch(`/api/wells/${id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n    function handleClick(event){\n      const wellID = event.target.parentElement.id;\n      fetchWell();\n    }\n\n  return(\n    <li className=\"ListItem\" id={idString}>\n        <p className=\"list-p\">{props.lease} {props.well_number}</p> <p><span className=\"bold-span\">API:</span> {props.API_number} </p> <button onClick={handleClick}className=\"li-button\">Select</button>\n    </li>\n  )\n  }\n\nexport default WellItem;\n","import { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport WellItem from './WellItem';\nimport Spinner from 'react-bootstrap/esm/Spinner';\n\nfunction WellList(props){\n\n    const [wellList, setWellList] = useState([])\n\n    useEffect(()=> {\n        const fetchWells = async () => {\n        const response = await fetch('/api/wells/user/', \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                }\n        });\n        if (!response.ok) {\n            console.log('Error fetching wells');\n        } else {\n            const data = await response.json();\n            setWellList(data);\n        }\n        }\n        fetchWells();\n    }, []);\n\n    let list;\n    if (wellList !== []){\n        list = wellList.map(well => <WellItem key={well.id+9000} {...well} wellList={wellList} setWellList={setWellList} setWell={props.setWell} />)\n    } else {\n        list = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    return (\n        <div className=\"well-list-container\">\n            <p><span className=\"bold-span\"> Your wells: </span></p>\n            <ul className=\"well-ul\">\n                {list}\n                <li className=\"ListItem\" id=\"new-well\">\n                    <button className=\"list-p li-button\" onClick={() => {console.log('create a new Well!')}}> Add New Well</button>\n                </li>\n            </ul>\n        </div>\n    )    \n}\n\nexport default WellList","import { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport WellList from './WellList';\n\nfunction WelcomePage(props){\n\n    const handleLogout = async () => {\n        const options = {\n          method: 'POST',\n          headers:{\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(props.user)\n        };\n    const response = await fetch('/rest-auth/logout/', options)\n      if(!response){\n          console.log(response);\n      } else {\n        Cookies.remove('Authorization');\n        Cookies.remove('SessionID');\n        props.setIsAuth(false);\n      }\n    };\n\n    let logHTML;\n    let IDtestHTML;\n    if(props.isAuth){\n        IDtestHTML = <p>User ID: {props.userID}</p>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={handleLogout}>Logout</div>\n    } else {\n        IDtestHTML = <></>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={() => props.history.push('/login')}>Login</div>\n    }\n\n\n    return (\n        <div className=\"welcome-container\">\n            <h1 className=\"fp-h1 text-center\"> Welcome back, {props.userName}! </h1>\n            <WellList setWell={props.setWell} well={props.well}/> \n            {logHTML}            \n        </div>\n    )\n}\n\nexport default WelcomePage\n\n/*\n<p className=\"fp-p\"> Blank(ish) Landing Page </p>\n{IDtestHTML}\n\n*/","function WellHoles(props){\n\n    return(\n        <div className=\"well-hole\">\n            <p>Hole Size:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"hole_size\" className=\"input-hidden\" value={props.hole_size} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellHoles;\n","function WellCasings(props){\n    let gaugeSize;\n    if (props.gauge === 'lrg'){\n        gaugeSize = '13 3/8\"';\n    } else if (props.gauge === 'med'){\n        gaugeSize = '9 5/8\"';\n    } else if (props.gauge === 'sml'){\n        gaugeSize = '5 1/2\"';\n    }\n\n    return(\n        <div className=\"well-casing\">\n            <p>Casing Gauge:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"gauge\" className=\"input-hidden\" value={gaugeSize} />\n            <p>Casing Weight:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"casing_weight\" className=\"input-hidden\" value={props.casing_weight} />\n            <p>Casing Grading:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"casing_grading\" className=\"input-hidden\" value={props.casing_grading} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellCasings;","function WellCements(props){\n    return(\n        <div className=\"well-cement\">\n        <p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />\n        <p>Sacks Pumped: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Starting Depth: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellCements;","function WellPerfs(props){\n    return(\n        <div className=\"well-perfs\">\n            <p>Perforation Interval:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"perforation_interval\" className=\"input-hidden\" value={props.perforation_interval} />\n            <p>Total Holes:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"perforation_total_holes\" className=\"input-hidden\" value={props.perforation_total_holes} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellPerfs;\n\n/*\n<input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n\nending_depth: 8404\nid: 1\nperforation_interval: \"15'\"\nperforation_total_holes: \"250\"\nstarting_depth: 8076\nwell: 1\n\n\n*/","function WellPlugs(props){\n    return(\n        <div className=\"well-plug\">\n        <p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />\n        <p>Sacks Pumped:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellPlugs;","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport WellHoles from './WellHoles';\nimport WellCasings from './WellCasings';\nimport WellCements from './WellCements';\nimport WellPerfs from './WellPerfs';\nimport WellPlugs from './WellPlugs';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { withRouter } from 'react-router-dom';\n\nfunction WellView(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} size=\"2x\" />\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    let wellHolesHTML;\n    let wellCasingsHTML;\n    let wellCementsHTML;\n    let wellPerfsHTML;\n    let wellPlugsHTML;\n    let currentTarget;\n    let selected;\n    let $active;\n    let id;\n    let value;\n    \n    function displayPopup() {\n        const $popup = document.getElementById('popup');\n        if ($popup.style.display === 'none'){\n            $popup.style.display = 'block';\n        } else {\n            $popup.style.display = 'none';\n        }\n    }\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        props.setWell({...props.well, [name]: value});\n    }\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    useEffect(() => {\n        const fetchWell = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well');\n            } else {\n                const data = await response.json();\n                props.setWell(data);\n            }\n          }\n\n\n        const fetchWellFeatures = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n                console.log(props)\n            }\n        }\n        fetchWell();\n        fetchWellFeatures();\n    }, []);\n\n    async function handleBlur(event){\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        // const {propertyName, value} = event.target;\n        console.log(event.target);\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/${props.match.params.id}/`, options);\n        const data = await response.json();\n        console.log(propertyName, value);\n    }\n\n    const handleHoleChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellHoles.findIndex(hole => hole.id === id);\n        index++;\n        let test = [...wellHoles]\n        test[index][name] = value;\n        console.log(test);\n        setWellHoles(test);\n        console.log(wellHoles);\n    }\n\n    async function handleHoleBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        console.log(event.target);\n        console.log(event.target.id);\n        console.log(id)\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/holes/${id}/`, options);\n        const data = await response.json();\n    }\n    \n    if (wellHoles === []){\n        wellHolesHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    } else {\n        wellHolesHTML = wellHoles.map(hole => <WellHoles key={hole.id+1000} {...hole} setWellHoles={setWellHoles} handleHoleChange={handleHoleChange} handleHoleBlur={handleHoleBlur}/>)        \n    }\n\n    const handleCasingChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCasings.findIndex(casing => casing.id === id);\n        index++;\n        let test = [...wellCasings]\n        test[index][name] = value;\n        setWellCasings(test);\n    }\n\n    async function handleCasingBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/casings/${id}/`, options);\n        const data = await response.json();\n    }\n\n    if (wellCasings !== []){\n        wellCasingsHTML = wellCasings.map(casing => <WellCasings key={casing.id+2000} {...casing} handleCasingChange={handleCasingChange} handleCasingBlur={handleCasingBlur}/>)\n    } else {\n        wellCasingsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handleCementChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCements.findIndex(cement => cement.id === id);\n        index++;\n        let test = [...wellCements]\n        test[index][name] = value;\n        setWellCements(test);\n    }\n\n    async function handleCementBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/cements/${id}/`, options);\n        const data = await response.json();\n    }\n\n\n\n    if (wellCements !== []){\n        wellCementsHTML = wellCements.map(cement => <WellCements key={cement.id+3000} {...cement} handleCementChange={handleCementChange} handleCementBlur={handleCementBlur}/>)\n    } else {\n        wellCementsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePerforationChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPerfs.findIndex(perf => perf.id === id);\n        index++;\n        let test = [...wellPerfs]\n        test[index][name] = value;\n        setWellPerfs(test);\n    }\n\n    async function handlePerforationBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/perforations/${id}/`, options);\n        const data = await response.json();\n    }\n\n\n\n    if (wellPerfs !== []){\n        wellPerfsHTML = wellPerfs.map(perf => <WellPerfs key={perf.id+4000} {...perf} handlePerforationChange={handlePerforationChange} handlePerforationBlur={handlePerforationBlur}/>)\n    } else {\n        wellPerfsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePlugChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPlugs.findIndex(plug => plug.id === id);\n        index++;\n        let test = [...wellPlugs]\n        test[index][name] = value;\n        setWellPlugs(test);\n    }\n\n    async function handlePlugBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/plugs/${id}/`, options);\n        const data = await response.json();\n    }\n\n\n    if (wellPlugs !== []){\n        wellPlugsHTML = wellPlugs.map(plug => <WellPlugs key={plug.id+5000} {...plug} handlePlugChange={handlePlugChange} handlePlugBlur={handlePlugBlur}/>)\n    } else {\n        wellPlugsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n\n    let wellInfoHTML;\n    if (props.well !== null) {\n        wellInfoHTML = \n        <div className=\"well-info\">\n                <div className=\"well-table-top row\">\n                    <div className=\"col-lg-8\"> \n                        <h2>{props.well.lease} {props.well.well_number} <span className=\"icon\" onClick={displayPopup}>{$faImage}</span></h2>\n                    </div>\n                    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n                    <div className=\"col-lg-4 text-right\">\n                        <span className=\"bold-span\">Last Updated: </span>{formatDate()}\n                    </div>                    \n                </div>\n                <div className=\"well-table-id row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">API Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"API_number\" className=\"input-hidden\" value={props.well.API_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Company: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"company\" className=\"input-hidden\" value={props.well.company} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Permit Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"permit_number\"className=\"input-hidden\" value={props.well.permit_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Current Status: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"current_status\" className=\"input-hidden\" value={props.well.current_status} />\n                    </div>\n                </div>\n                <div className=\"well-table-location row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Location: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"location\" className=\"input-hidden\" value={props.well.location} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Section: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"section\" className=\"input-hidden\" value={props.well.section} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Survey: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"survey\" className=\"input-hidden\" value={props.well.survey} />\n                    </div>\n                    <div className=\"col-lg-3 county-state\">\n                        <div>\n                            <span className=\"bold-span\">County: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"county\" className=\"input-hidden county\" value={props.well.county} />\n                        </div>\n                        <div>\n                            <span className=\"bold-span\">State: </span> <input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"state\" className=\"input-hidden state\" value={props.well.state} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"well-table-field row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Field: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"field\" className=\"input-hidden\" value={props.well.field} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Initial Formation: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"initial_formation\" className=\"input-hidden\" value={props.well.initial_formation} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Spud Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"spud_date\" className=\"input-hidden\" value={props.well.spud_date} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Comp Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"completion_date\" className=\"input-hidden\" value={props.well.completion_date} />\n                    </div>\n                </div>\n                <div className=\"well-table-depths row mb-3\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Ground Level: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"ground_level\" className=\"input-hidden\" value={props.well.ground_level} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Kelley Bushing: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"kelley_bushing\" className=\"input-hidden\" value={props.well.kelley_bushing} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Derrick Floor: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"derrick_floor\" className=\"input-hidden\" value={props.well.derrick_floor} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Total Depth: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} name=\"total_depth\" className=\"input-hidden\" value={props.well.total_depth} />\n                    </div>\n                </div>\n                <div className=\"labels row\">\n                    <div className=\"hole-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label1\"> HOLE</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellHolesHTML}\n                            <button className=\"new-feature-button\" onClick={() => {console.log('create a new Hole!')}}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"casing-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label2\">CASING</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCasingsHTML}\n                            <button className=\"new-feature-button\" onClick={() => {console.log('create a new Casing!')}}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"cement-col col\">\n                        <div className=\"showme\" >\n                            <p className=\"label3\">CEMENT</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCementsHTML}\n                            <button className=\"new-feature-button\" onClick={() => {console.log('create a new Cement!')}}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"perf-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label4\">PERFORATIONS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPerfsHTML}\n                            <button className=\"new-feature-button\" onClick={() => {console.log('create a new Perf!')}}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"plug-col col\">\n                        <div className=\"col showme\">\n                            <p className=\"label5\">PLUGS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPlugsHTML}\n                            <button className=\"new-feature-button\" onClick={() => {console.log('create a new Plug!')}}> Add New</button>\n                        </div>\n                    </div>\n                </div>\n            </div>;\n    } else {\n        wellInfoHTML = <div>Loading...</div>;\n    }\n        \n        \n        \n        \n        \n\n\n\n    return (\n        <div className=\"well-container\">\n            {wellInfoHTML}\n            <div className=\"canvas-frame\">\n                <canvas id=\"canvas\" width=\"25vw\" height=\"90vh\"></canvas>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(WellView)\n\n\n\n/*\n\n<div className=\"well-info\">\n    <h2>{props.well.lease} {props.well.well_number}</h2>\n    <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    I'm a well! \n</div>\n\n\n\nlet currentTarget;\n\n\n\n\n// add when widget loads\n\n... and finally some housekeeping\n\n// remove listener when destroying the widget\nwindow.removeEventListener(\"click\", clickOut);\n\n\n\n\n    // useEffect(() => {\n    //     // setWellHoles(wellFeatures.holes);\n    //     // setWellCasings(wellFeatures.casings);\n    //     // setWellCements(wellFeatures.cements);\n    //     // setWellPerfs(wellFeatures.perforations);\n    //     // setWellPlugs(wellFeatures.plugs);\n    // }, [wellFeatures]);\n\n    //CHANGE TO NOT USE INNERHTML!\n    // function editField(event){\n    //     if (!selected){\n    //         console.log(event);\n    //         id = event.target.id;\n    //         currentTarget = id;\n    //         value = event.target.attributes.value.value;\n    //         $active = document.getElementById(id)\n    //         console.log(value);\n    //         $active.innerHTML = `<input type='text' value=${value} />`;\n    //         window.addEventListener(\"click\", clickOut);\n    //         console.log($active);\n    //         selected = true;\n    //     }\n    // }\n\n    // const clickOut = (event) => {\n    //     if (!event.target.id.includes(currentTarget)) {\n    //         selected = false;\n    //         window.removeEventListener(\"click\", clickOut);\n    //         $active.innerHTML = `<span id=${id} value=${value} onClick={editField}>${value}</span>`\n    //     }\n    // };\n\nfetch(‘https://jsonplaceholder.typicode.com/todos/1', {\nmethod: ‘PATCH’,\nbody: JSON.stringify({\ncompleted: true\n}),\nheaders: {\n“Content-type”: “application/json; charset=UTF-8”\n}\n})\n.then(response => response.json())\n.then(json => console.log(json))\n\n\n\nasync function handleBlur(event){\n    event.preventDefault();\n    const options = {\n        method: 'PATCH',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(name: value)\n    };\n    const response = await fetch(``/api/wells/${props.match.params.id}/`, options);\n    const data = await response.json();\n    console.log('data', data);\n}\n\n\n\n*/","import { useState, useEffect } from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport './App.css';\nimport WelcomePage from './components/WelcomePage';\nimport WellView from './components/WellView';\n// import WellList from './components/WellList';\n\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [isAuth, setIsAuth] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const history = useHistory();\n  const [well, setWell] = useState(null);\n\n  useEffect(()=> {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        setIsAuth(false);\n        history.push('/login'); // THIS LINE IS PUSHING FROM REGISTRATION BACK TO LOGIN.  DISABLE?\n      } else {\n        const data = await response.json();\n        const ID=data.pk;\n        const username=data.username;\n        setIsAuth(true);\n        setUserID(ID);\n        setUserName(username);\n        // history.push('');\n      }\n    }\n    checkAuth();\n  }, [history, isAuth])\n\n  if (isAuth === null){\n    return <Spinner animation=\"grow\" variant='primary' />\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/register' >\n          <RegistrationForm isAuth={isAuth} setIsAuth={setIsAuth}/>\n        </Route>\n        <Route path='/login'>\n            <LoginForm  isAuth={isAuth} setIsAuth={setIsAuth}/>\n        </Route>       \n        <Route path='/wellinfo/:id'>\n            <WellView well={well} setWell={setWell}/>\n        </Route>       \n        {/* <Route path='/wellslist'>\n            <WellList isAuth={isAuth} history={history} well={well} setWell={setWell}/>\n        </Route>        */}\n        <Route path=''>\n          <WelcomePage isAuth={isAuth} setIsAuth={setIsAuth} userID={userID} history={history} userName={userName} well={well} setWell={setWell}/>\n        </Route>        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
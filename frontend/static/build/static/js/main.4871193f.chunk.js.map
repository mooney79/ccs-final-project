{"version":3,"sources":["components/LoginForm.js","components/RegistrationForm.js","components/WellItem.js","components/WellList.js","StaticImages/CMlogo.png","components/WelcomePage.js","components/WellHoles.js","components/WellCasings.js","components/WellCements.js","components/WellPerfs.js","components/WellPlugs.js","components/DeleteDetails.js","components/DeleteConfirmationModal.js","components/DeleteWellModal.js","components/PlatImageModal.js","StaticImages/cement-texture.jpeg","components/Diagram.js","components/WellView.js","components/NewWellModal.js","components/PDFDiagram.js","components/PDFView.js","components/Chart.js","components/SplashModal.js","components/WellViewToo.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","username","password","userLog","setUserLog","handleInput","event","target","name","value","prevState","handleError","err","console","warn","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","log","json","data","set","key","setIsAuth","isAuth","to","className","onSubmit","htmlFor","type","id","placeholder","onChange","required","password1","style","color","textDecoration","cursor","onClick","history","push","RegistrationForm","email","password2","userReg","setUserReg","error","setError","WellItem","idString","useHistory","fetchWell","ok","setWell","lease","well_number","API_number","WellList","list","wellList","setWellList","useEffect","fetchWells","map","well","Spinner","animation","variant","setShowNew","showNew","WelcomePage","logHTML","handleLogout","user","remove","src","CMlogo","alt","WellHoles","$faTrashAlt","icon","faTrashAlt","inverse","pull","handleHoleChange","onBlur","handleHoleBlur","onKeyPress","e","handleHoleKeyPress","hole_size","starting_depth","ending_depth","$delTarget","currentTarget","parentElement","getClass","attributes","class","slice","length","getID","children","setDeleteTarget","element","setIsClicked","WellCasings","gaugeHTML","handleCasingChange","handleCasingBlur","defaultValue","gauge","handleCasingKeyPress","casing_weight","casing_grading","WellCements","handleCementChange","handleCementBlur","handleCementKeyPress","cement_type","sacks_pumped","WellPerfs","handlePerforationChange","handlePerforationBlur","handlePerfKeyPress","perforation_interval","perforation_total_holes","WellPlugs","plugHTML","plugChoiceHTML","handleDelete","plug_type","handlePlugChange","handlePlugBlur","handlePlugKeyPress","set_depth","DeleteDetails","DeleteConfirmationModal","deleteDetails","setDeleteDetails","handleClose","setShowDelete","deleteTarget","delHTML","urlPicker","setRefresh","Math","random","fetchDeleteDetails","showDelete","Object","entries","pair","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","DeleteWellModal","setShowWellDel","urlId","location","pathname","showWellDel","imageHTML","source","setShowImage","preview","setPreview","plat_image","file","files","reader","FileReader","onloadend","result","readAsDataURL","showImage","formData","FormData","append","Diagram","canvas0Ref","useRef","canvas1Ref","canvas2Ref","canvas3Ref","ctx0Ref","ctx1Ref","ctx2Ref","ctx3Ref","xlgEndRef","lrgEndRef","medEndRef","regEndRef","smlEndRef","xsmEndRef","table","setTable","drawPipe","x","y","w","h","size","next","current","beginPath","lineWidth","strokestyle","fillStyle","fillRect","moveTo","lineTo","stroke","closePath","drawCasingSet","fill","drawEachPerf","x2","y2","strokeStyle","drawCementPlug","drawMechPlug","findPipeXAtY","findPipeWAtY","canvas0","ctx0","getContext","width","window","innerWidth","height","innerHeight","addEventListener","canvas1","ctx1","ptrn","img","Image","dirt","canvas2","ctx2","canvas3","ctx3","clearRect","casings","aIndex","cements","casingArray","cementArray","forEach","casing","xlgEnd","round","total_depth","depth","undefined","lrgEnd","medEnd","regEnd","smlEnd","xsmEnd","cement","cementXTop","cementXBottom","cementY","cementBottom","cementW","TopY","BottomY","TopX","BottomX","W","idArray","i","indexOf","pop","findA","wellCasings","wellCements","casingA","casingX","casingY","casingW","casingH","includes","drawCasings","onload","createPattern","deltaX","cementH","cementX","cementX2","xArray","sort","b","findNextPipeXAtY","wellPlugs","plug","plugY","plugX","plugW","plugH","wellPerfs","perf","perfY","perfH","perfX","perfW","topLine","font","fillText","midLine","botLine","setLineDash","drawDepthGuides","refresh","ref","wellHolesHTML","wellCasingsHTML","wellCementsHTML","wellPerfsHTML","wellPlugsHTML","$faImage","faImage","wellFeatures","setWellFeatures","wellHoles","setWellHoles","setWellCasings","setWellCements","setWellPerfs","setWellPlugs","isClicked","handleChange","handleBlur","propertyName","match","params","fetchWellFeatures","holes","perforations","plugs","index","findIndex","hole","parseInt","test","handleKeyPress","blur","wellInfoHTML","createNewHole","newHole","createNewCasing","newCasing","createNewCement","newCement","createNewPerforation","newPerforation","createNewPlug","newPlug","setShowSplash","goBack","rawDate","updated_at","year","formatDate","company","permit_number","current_status","section","survey","county","state","field","initial_formation","spud_date","completion_date","ground_level","kelley_bushing","derrick_floor","NewWellModal","handleSave","newWell","setNewWell","PDFDiagram","pdfcanvas0Ref","pdfcanvas1Ref","pdfcanvas2Ref","pdfcanvas3Ref","pdfctx0Ref","pdfctx1Ref","pdfctx2Ref","pdfctx3Ref","pdfcanvas0","pdfctx0","pdfcanvas1","pdfctx1","pdfcanvas2","pdfctx2","pdfcanvas3","pdfctx3","setTimeout","print","holeHTML","casingHTML","cementHTML","perfsHTML","plugsHTML","onafterprint","setShowPDF","Chart","choice","setChoice","chartData","setChartData","results","prices","row","created_at","price","month","toString","day","Date","fetchPricePeriod","config","palette","axisToZoom","legend_visible","title","position","padding","opacity","boxVisible","radius","outline","label","text","fontSize","fontFamily","fontStyle","fontWeight","align","yAxis","scale_minorInterval","formatString","defaultPoint","marker","defaultPoint_marker_visible","xAxis","scale_type","defaultPoint_tooltip","series","points","maxWidth","margin","mutable","SplashModal","welcomeHTML","setPrice","showCollapse","setShowCollapse","fetchPrice","formatted","userName","showSplash","Collapse","in","$faCaret","faCaretUp","showPDF","DropdownButton","autoclose","Dropdown","Item","href","App","setUserName","userID","setUserID","checkAuth","ID","pk","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4871193f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props){\n    const [userLog, setUserLog] = useState({\n        username: '',\n        password: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserLog(prevState => ({   //prevState is a variable name for the previous\n            ...prevState,         //value of the state\n            [name]:value,\n        }))\n    }\n\n    function handleError(err){\n        console.warn(err);\n    }\n    \n    async function handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(userLog)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`); // This is bad mang.\n            props.setIsAuth(true);\n            // props.history.push('/profile');  // This pushes the browser to the next area\n        }\n    \n    }\n    if (props.isAuth){  //Example of a redirect, but kind of balls user-friendly-wise.  Instead, replace login button with logout button\n        return <Redirect to=\"/\" />\n    } //Could flip it to protect \"profileForm\" and redirect them to login\n\n    function directToRegister(){\n        props.history.push('/register');\n    }\n\n    const buttonStyle = {\n        color: 'blue',\n        textDecoration: 'underline',\n        cursor: 'pointer',\n    }\n\n    return(\n        <div className=\"form-container login-page\">\n        <form className=\"mt-3 col-10 col-md-5 login-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userLog.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={userLog.password1}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-warning mt-1\" >Log in</button>            \n            <p className=\"text-center\">Not  a member?  Click <span className=\"link-button\" style={buttonStyle} onClick={directToRegister}>here</span> to register.</p>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { useState } from 'react'\nimport Cookies from 'js-cookie'\n\nfunction RegistrationForm(props){\n    const [userReg, setUserReg] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserReg(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n\n    const [error, setError] = useState(null);\n\n    function handleError(err){\n        console.warn(err);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(userReg.password1 !== userReg.password2){\n            setError('Passwords do not match!');\n        } else {\n            //fire off registration process\n            const options = {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                },\n                body: JSON.stringify(userReg)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response){\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setIsAuth(true);\n            }\n        }\n    }\n\n    const buttonStyle = {\n        color: 'blue',\n        textDecoration: 'underline',\n        cursor: 'pointer',\n    }\n    \n    function directToLogin(){\n        props.history.push('/login');\n    }\n\n\n    return(\n        <div className=\"form-container register-page\">\n        <form className=\"mt-3 col-10 col-md-5 register-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userReg.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='email'>Email address</label>\n                <input type=\"email\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter E-mail\"\n                    onChange={handleInput}\n                    required\n                    name='email'\n                    value={userReg.email}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password1'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password1\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password1'\n                    value={userReg.password1}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password2'>Confirm Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password2\"\n                    placeholder=\"Re-enter password\"\n                    onChange={handleInput}\n                    required\n                    name='password2'\n                    value={userReg.password2}\n                />\n                {error &&<span className=\"text-danger\"> {error}</span>}\n            </div>\n            <div className='split-register'>\n            <p>Already have an account? <span className=\"link-button\" style={buttonStyle} onClick={directToLogin}>Log in!</span> </p>\n            <button type=\"submit\" className=\"btn btn-warning mt-3\" >Register</button>\n            </div>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default RegistrationForm","import { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction WellItem(props) {\n    const id = props.id;\n    const idString = `${id}`;\n    const history = useHistory();\n\n    const fetchWell = async () => {\n      const response = await fetch(`/api/wells/${id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n    function handleClick(event){\n      // const wellID = event.target.parentElement.id;\n      fetchWell();\n    }\n\n  return(\n    <li className=\"ListItem\" id={idString}>\n        <div className=\"list-group-left\"> <p className=\"list-p\">{props.lease} {props.well_number}</p></div> <p className=\"li-center\"><span className=\"bold-span\">API:</span> {props.API_number} </p> <button onClick={handleClick}className=\"li-button\">Select</button>\n    </li>\n  )\n  }\n\nexport default WellItem;\n","import { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport WellItem from './WellItem';\nimport Spinner from 'react-bootstrap/esm/Spinner';\n\n\nfunction WellList(props){\n\n    const [wellList, setWellList] = useState([]);\n    \n\n    useEffect(()=> {\n        const fetchWells = async () => {\n        const response = await fetch('/api/wells/user/', \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                }\n        });\n        if (!response.ok) {\n            console.log('Error fetching wells');\n        } else {\n            const data = await response.json();\n            setWellList(data);\n        }\n        }\n        fetchWells();\n    }, []);\n\n    let list;\n    if (wellList !== []){\n        list = wellList.map(well => <WellItem key={well.id+9000} {...well} wellList={wellList} setWellList={setWellList} setWell={props.setWell} />)\n    } else {\n        list = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n    return (\n        <div className=\"well-list-container\">\n            <p><span className=\"bold-span\"> Your wells: </span></p>\n            <ul className=\"well-ul\">\n                {list}\n                <li className=\"ListItem\" id=\"new-well\">\n                    <button className=\"list-p li-button\" onClick={() => {console.log(\"I fired!\"); props.setShowNew(true);console.log(props.showNew)}}> Add New Well</button>\n                </li>\n            </ul>\n        </div>\n    )    \n}\n\nexport default WellList","export default __webpack_public_path__ + \"static/media/CMlogo.2c75626a.png\";","// import { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport WellList from './WellList';\nimport CMlogo from '../StaticImages/CMlogo.png';\n// import Chart from './Chart';\n\nfunction WelcomePage(props){\n\n    const handleLogout = async () => {\n        const options = {\n          method: 'POST',\n          headers:{\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(props.user)\n        };\n    const response = await fetch('/rest-auth/logout/', options)\n      if(!response){\n          console.log(response);\n      } else {\n        Cookies.remove('Authorization');\n        Cookies.remove('SessionID');\n        props.setIsAuth(false);\n      }\n    };\n\n    let logHTML;\n    // let IDtestHTML;\n    if(props.isAuth){\n        // IDtestHTML = <p>User ID: {props.userID}</p>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={handleLogout}>Logout</div>\n    } else {\n        // IDtestHTML = <></>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={() => props.history.push('/login')}>Login</div>\n    }\n\n\n    return (\n        <>\n        <img className=\"wp-logo\" src={CMlogo} alt=\"Case Manager logo\" />\n        <div className=\"welcome-container col-10 col-md-5\">           \n            <WellList setWell={props.setWell} well={props.well} setShowNew={props.setShowNew} showNew={props.showNew}/> \n            {logHTML}            \n        </div>\n        </>\n    )\n}\n\nexport default WelcomePage\n\n//","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellHoles(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-hole\">\n            <p>Hole Size:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} onKeyPress={(e) => props.handleHoleKeyPress(e)} name=\"hole_size\" className=\"input-hidden\" value={props.hole_size} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} onKeyPress={(e) => props.handleHoleKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} onKeyPress={(e) => props.handleHoleKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <br />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellHoles;\n//<i class=\"far fa-trash-alt\"></i>\n//So... \n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellCasings(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n    \n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    \n    let gaugeHTML;\n\n    gaugeHTML = \n    <select id={props.id} onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"gauge\" className=\"input-hidden\" defaultValue={props.gauge} >\n        <option value=\"xlg\" >13 3/8\"</option>\n        <option value=\"lrg\" >9 5/8\"</option>\n        <option value=\"med\" >8 5/8\"</option>\n        <option value=\"reg\" >7\"</option>\n        <option value=\"sml\" >5 1/2\"</option>\n        <option value=\"xsm\" >4 1/2\"</option>\n    </select>\n\n    return(\n        <div className=\"well-casing\">\n            <p>Casing Gauge:</p> {gaugeHTML}\n            <p>Casing Weight:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} onKeyPress={(e) => props.handleCasingKeyPress(e)} name=\"casing_weight\" className=\"input-hidden\" value={props.casing_weight} />\n            <p>Casing Grading:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} onKeyPress={(e) => props.handleCasingKeyPress(e)} name=\"casing_grading\" className=\"input-hidden\" value={props.casing_grading} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} onKeyPress={(e) => props.handleCasingKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} onKeyPress={(e) => props.handleCasingKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            \n            <br />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellCasings;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellCements(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\" />\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-cement\">\n        <p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} onKeyPress={(e) => props.handleCementKeyPress(e)} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />\n        <p>Sacks Pumped: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} onKeyPress={(e) => props.handleCementKeyPress(e)} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Top of Cement: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} onKeyPress={(e) => props.handleCementKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Bottom of Cement: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} onKeyPress={(e) => props.handleCementKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <br />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellCements;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nfunction WellPerfs(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\" />\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    return(\n        <div className=\"well-perfs\">\n            <p>Perforation Interval:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} onKeyPress={(e) => props.handlePerfKeyPress(e)} name=\"perforation_interval\" className=\"input-hidden\" value={props.perforation_interval} />\n            <p>Total Holes:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} onKeyPress={(e) => props.handlePerfKeyPress(e)} name=\"perforation_total_holes\" className=\"input-hidden\" value={props.perforation_total_holes} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} onKeyPress={(e) => props.handlePerfKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} onKeyPress={(e) => props.handlePerfKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <br />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellPerfs;\n\n/*\n<input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n\nending_depth: 8404\nid: 1\nperforation_interval: \"15'\"\nperforation_total_holes: \"250\"\nstarting_depth: 8076\nwell: 1\n\n\n*/","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellPlugs(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    let plugHTML;\n    let plugChoiceHTML;  \n    \n    if(props.plug_type === 'CP') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Sacks Pumped:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <br />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    } else if (props.plug_type === 'MP') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <br />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    } else if (props.plug_type === 'DV') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Set Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"set_depth\" className=\"input-hidden\" value={props.set_depth} />\n        <br />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    }\n\n    return(\n        <>\n        <select id={props.id} onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"plug_type\" className=\"input-hidden\" defaultValue={props.plug_type} >\n            <option value=\"CP\" >Cement Plug</option>\n            <option value=\"MP\" >Mechanical Plug</option>\n            <option value=\"DV\" >Diverter Valve</option>\n        </select>\n        {plugHTML}\n        </>\n    )\n}\n\nexport default WellPlugs;\n\n//<p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />","function DeleteDetails(props){\n\n    return (\n        <>\n            <p><span className=\"bold-span\">{props[0]}:</span> {props[1]} </p>\n        </>\n    )\n}\n\nexport default DeleteDetails;","import Modal from 'react-bootstrap/Modal'\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\nimport DeleteDetails from './DeleteDetails';\n\nfunction DeleteConfirmationModal(props) {\n    const [deleteDetails, setDeleteDetails] = useState({});\n    const handleClose = () => props.setShowDelete(false);\n    const {id, element} = props.deleteTarget;\n    let delHTML='';\n    let urlPicker='';\n\n    const handleDelete = async () => {\n       \n        const options = {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        console.log(urlPicker);\n        const response = await fetch(urlPicker, options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            // console.log(data);\n            // props.setShowDelete(false);\n            handleClose();\n            props.setDeleteTarget({});\n            props.setIsClicked(false);\n            props.setRefresh(Math.random()*237);\n            \n            // handleClose();\n            // props.history.push(props.history.location.pathname);\n            // props.history.push(`/wellinfo/${data.id}`);\n        }\n    }\n\n    useEffect(() => {\n        const fetchDeleteDetails = async () => {\n            const response = await fetch(urlPicker, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well feature');\n            } else {\n                const data = await response.json();\n                setDeleteDetails(data);\n            }\n        }\n        fetchDeleteDetails();        \n    }, [props.showDelete]); //urlPicker\n\n    // console.log(props);\n    if (props.showDelete === true) {\n    \n    switch(element) {\n        case 'hole':\n            urlPicker = `/api/wells/holes/${id}/`;\n            break;\n        case 'casing':\n            urlPicker = `/api/wells/casings/${id}/`;\n            break;\n        case 'cement':\n            urlPicker = `/api/wells/cements/${id}/`;\n            break;\n        case 'perfs':\n            urlPicker = `/api/wells/perforations/${id}/`;\n            break;\n        case 'plug':\n            urlPicker = `/api/wells/plugs/${id}/`;\n            break;\n        default:\n            console.log('Error: no urlPicker defined for delete feature');\n    }\n    // console.log(element, id);\n    // console.log(urlPicker);\n    // useEffect(() => {\n    //     const fetchDeleteDetails = async () => {\n    //         const response = await fetch(urlPicker, \n    //         {headers: {\n    //                 'Content-Type': 'application/json',\n    //                 'X-CSRFToken': Cookies.get('csrftoken'),\n    //                 }\n    //         });\n    //         if (!response.ok) {\n    //             console.log('Error fetching well feature');\n    //         } else {\n    //             const data = await response.json();\n    //             setDeleteDetails(data);\n    //             // console.log(data);\n    //             // if (data !== {}) {\n    //                 // for (const [key, value] of Object.entries(data)){\n    //                 //     delHTML += `<p>${key}: ${value}</p>`;\n    //                     // delHTML += `<p><span className=\"bold-span\">${key}: ${value}</span></p> <br />`;\n    //                 // }\n    //             // }\n    //         }\n    //     }\n    //     fetchDeleteDetails();\n        \n        \n    // }, [/*props.deleteTarget*/]);\n\n    \n    \n    // console.log(deleteDetails);\n    // if (deleteDetails !== {}) {\n    //     for (const [key, value] of Object.entries(deleteDetails)){\n    //         delHTML = <><p><span className=\"bold-span\">{key}:</span> {value} </p><br/></>\n    //     }\n    // }\n    if (deleteDetails !== {}) {\n        const detailPairs = Object.entries(deleteDetails);\n        // console.log(detailPairs);\n        delHTML = detailPairs.map(pair => <DeleteDetails key={Math.random()*450} {...pair} />);\n    }\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showDelete} onHide={handleClose}>\n          <Modal.Header  className=\"splash\" closeButton>\n            <Modal.Title>Delete Entry</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            <p>Are you sure you want to delete this entry? This action cannot be undone.</p>\n            <br />\n            <div>\n                {delHTML}\n            </div>\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Keep Data\n            </Button>\n            <Button variant=\"warning\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default DeleteConfirmationModal;\n\n/*\nTO DO:\n------\nFigure out where to put this, and what props are needed.\nRewrite this to pop up when a delete button is pressed.\nRewrite the fetch to delete the entry.\nCan I figure out how to call it without cloning 5 times for each feature?\nWrite the detai views/urls needed for the fetch.\n*/","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\n// import DeleteDetails from './DeleteDetails';\n\nfunction DeleteWellModal(props) {\n    const handleClose = () => props.setShowWellDel(false);\n    const urlId=props.history.location.pathname.slice(10);\n    const urlPicker=`/api/wells/${urlId}`;\n\n\n    const handleDelete = async () => {\n       \n        const options = {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(urlPicker, options);\n        if(!response){\n            console.log(response);\n        } else {\n            props.setRefresh(Math.random())\n            props.history.push('');\n        }\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showWellDel} onHide={handleClose}>\n          <Modal.Header className=\"splash\" closeButton>\n            <Modal.Title>Delete Well</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            <p>Are you sure you want to delete this Well? This action cannot be undone.</p>\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Keep Well\n            </Button>\n            <Button variant=\"warning\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default DeleteWellModal;","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport { useState } from 'react'; //useState, useEffect\nimport Cookies from 'js-cookie'\nimport { withRouter } from 'react-router-dom';\n// import { useEffect } from 'react';\n// import DeleteDetails from './DeleteDetails';\n\nfunction PlatImageModal(props) {\n  const handleClose = () => props.setShowImage(false);\n  // const [imageHTML, setImageHTML] = useState('');\n  const [preview, setPreview] = useState('');\n  let imageHTML;\n\n  const handleImage = (event) => {\n    const file = event.target.files[0];\n    props.setWell({\n      ...props.well,\n      plat_image: file,\n    })\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreview(reader.result);\n    }\n    reader.readAsDataURL(file); //returns URL\n  }\n\n  // const [source, setSource] = useState('');\n\n  // useEffect(() => {    \n  //   // if (!props.well){\n  //   //   const fetchWell = async () => {\n  //   //     const response = await fetch(`/api/wells/${props.match.params.id}/`, \n  //   //     {headers: {\n  //   //             'Content-Type': 'application/json',\n  //   //             'X-CSRFToken': Cookies.get('csrftoken'),\n  //   //             }\n  //   //     });\n  //   //     if (!response.ok) {\n  //   //         console.log('Error fetching well');\n  //   //     } else {\n  //   //         const data = await response.json();                \n  //   //         props.setWell(data);                                 \n  //   //     }\n  //   //   }\n  //   //   fetchWell();\n  //   // }\n  // }, [preview])\n\n   \n\n\n  // console.log(props);\n  // if (preview) {\n  //   setSource(preview);\n  // } else if (props.well){\n  //   setSource(props.well.plat_image);\n  // }\n\n    if(props.well){  \n      let source;\n      if (preview) {\n         source = preview;\n      } else if (props.well.plat_image){\n        source = props.well.plat_image;\n      }    \n      imageHTML=\n     <div className=\"ImageForm\">\n       {/* if (props.well.plat_image) {\n         <img src={props.well.plat_image} alt=\"plat_image\" />\n       } else {*/}\n       {props.well.plat_image && <img className=\"prev\" src={source} alt =\"\" />}\n       <input type=\"file\" name=\"plat_image\" onChange={handleImage}/>\n     </div>\n   } else {\n      imageHTML=<></>\n   }\n\n\n//\n// src={source}\n    // const urlId=props.history.location.pathname.slice(10);\n    // const urlPicker=`/api/wells/${urlId}`;\n\n\n    // const handleDelete = async () => {\n       \n    //     const options = {\n    //         method: 'DELETE',\n    //         headers:{\n    //             'Content-Type': 'application/json',\n    //             'X-CSRFToken': Cookies.get('csrftoken'),\n    //         },\n    //     };\n    //     const response = await fetch(urlPicker, options);\n    //     if(!response){\n    //         console.log(response);\n    //     } else {\n    //         props.history.push('');\n    //     }\n    // }\n\n    function handleUpload(){\n      const formData = new FormData(); //Constructing key value pairs below VVV\n      formData.append('plat_image', props.well.plat_image);\n\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'X-CSRFToken': Cookies.get('csrftoken'), \n        },\n        body: formData,\n        // body: JSON.stringify({[propertyName]: value})\n      }\n      fetch(`/api/wells/${props.well.id}/`, options); \n      // fetch(`/media/`, options); \n      setPreview('');\n      props.setRefresh(Math.random());\n      handleClose();\n    }\n\n    // let imageHTML;\n  \n  \n    return (\n      <>  \n        <Modal show={props.showImage} onHide={handleClose}>\n          <Modal.Header className=\"splash\" closeButton>\n            <Modal.Title>Plat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            {imageHTML}\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">           \n            <Button variant=\"warning\" onClick={handleUpload}>\n              Upload Photo\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default withRouter(PlatImageModal);\n\n/*\n\n<Button variant=\"secondary\" onClick={handleClose}>\n  Keep Well\n</Button>\n\n\n\n\n  \n  const handleUpload = (event) => {\n    // event.preventDefault();\n    const formData = new FormData(); //Constructing key value pairs below VVV\n    formData.append('plat_image', well.plat_image);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'), \n      },\n      body: formData,\n      // body: JSON.stringify({[propertyName]: value})\n    }\n    // fetch(`/api/wells/${props.well.id}/`, options); \n    fetch(`/media/`, options); \n  }\n\n  return (\n    <div className=\"ImageForm\">\n        <input type=\"file\" name=\"plat_image\" onChange={handleImage}/>\n        {props.well.plat_image && <img src={preview} alt =\"\" />}\n    </div>\n  );\n}\n\n\nconst fetchWell = async () => {\n      const response = await fetch(`/api/wells/${props.well.id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n\n\n\n\n*/","export default __webpack_public_path__ + \"static/media/cement-texture.0f27d432.jpeg\";","import { useEffect, useRef, useState } from \"react\";\nimport dirt from '../StaticImages/cement-texture.jpeg';\n\nfunction Diagram(props){\n    const canvas0Ref = useRef(null);\n    const canvas1Ref = useRef(null);\n    const canvas2Ref = useRef(null);\n    const canvas3Ref = useRef(null);\n    const ctx0Ref = useRef(null);\n    const ctx1Ref = useRef(null);\n    const ctx2Ref = useRef(null);\n    const ctx3Ref = useRef(null);\n    const xlgEndRef = useRef(null);\n    const lrgEndRef = useRef(null);\n    const medEndRef = useRef(null);\n    const regEndRef = useRef(null);\n    const smlEndRef = useRef(null);\n    const xsmEndRef = useRef(null);\n    const [table, setTable] = useState({\n        'xlg': xlgEndRef,\n        'lrg': lrgEndRef,\n        'med': medEndRef,\n        'reg': regEndRef,\n        'sml':smlEndRef,\n        'xsm': xsmEndRef,\n    });\n    // const [activeTable, setActiveTable] = useState('');\n    // const [cArray, setCArray] = useState([]);\n\n    useEffect(() => {\n        const canvas0 = canvas0Ref.current;\n        const ctx0 = canvas0.getContext('2d');\n        ctx0Ref.current = ctx0;\n\n        ctx0.width = window.innerWidth;\n        ctx0.height = window.innerHeight;\n\n        canvas0.addEventListener('resize', function() {\n        ctx0.width = window.innerWidth;\n        ctx0.height = window.innerHeight;\n        });\n\n        const canvas1 = canvas1Ref.current;\n        const ctx1 = canvas1.getContext('2d');\n        ctx1Ref.current = ctx1;\n\n        ctx1.width = window.innerWidth;\n        ctx1.height = window.innerHeight;\n\n        canvas1.addEventListener('resize', function() {\n        ctx1.width = window.innerWidth;\n        ctx1.height = window.innerHeight;\n        });\n\n        let img = new Image();\n        let ptrn;\n        img.src = dirt;        \n\n        const canvas2 = canvas2Ref.current;\n        const ctx2 = canvas2.getContext('2d');\n        ctx2Ref.current = ctx2;\n\n        canvas2.addEventListener('resize', function() {\n            ctx2.width = window.innerWidth;\n            ctx2.height = window.innerHeight;\n        });\n\n        const canvas3 = canvas3Ref.current;\n        const ctx3 = canvas3.getContext('2d');\n        ctx3Ref.current = ctx3;\n\n        canvas3.addEventListener('resize', function() {\n            ctx3.width = window.innerWidth;\n            ctx3.height = window.innerHeight;\n        });\n\n        ctx0.clearRect(0, 0, canvas0.width, canvas0.height);\n        ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n        ctx3.clearRect(0, 0, canvas3.width, canvas3.height);\n        \n        drawCasings(props.wellCasings);\n\n        img.onload = () => {\n            ptrn = ctx1.createPattern(img, 'repeat');\n            ctx1.fillStyle = ptrn;\n            ctx2.fillStyle = ptrn;\n            drawCements(props.wellCements);\n            placePlugs(props.wellPlugs);\n        }\n\n        placePerforations(props.wellPerfs);\n\n        if (props.well){\n            drawDepthGuides(props.well.total_depth);\n        }\n\n    }, [props.wellCasings, props.wellCements, props.wellPerfs, props.wellPlugs, props.refresh]);\n        // drawCasings, drawCements, placePerforations, placePlugs, props.well]);//[]\n\n\n\n\n    function drawCement(x, y, w, h, x2){\n        ctx1Ref.current.fillRect(x-x2, y, x2, h);\n        ctx1Ref.current.fillRect(x+w, y, x2, h);\n    }\n\n    function drawDepthGuides(depth){\n        ctx0Ref.current.strokeStyle = \"white\";\n        ctx0Ref.current.lineWidth=2;\n        const x = canvas0Ref.current.width;\n        const topLine = Math.round(depth*0.25);\n        ctx0Ref.current.fillStyle = \"white\";\n        ctx0Ref.current.font = '16px Oxygen';\n        ctx0Ref.current.fillText(topLine, 10, 891*0.25-10);\n        const midLine = Math.round(depth*0.5);\n        ctx0Ref.current.fillText(midLine, 10, 891*0.5-10);\n        const botLine = Math.round(depth*0.75);\n        ctx0Ref.current.fillText(botLine, 10, 891*0.75-10);\n        ctx0Ref.current.beginPath();\n        ctx0Ref.current.setLineDash([5, 15]);\n        ctx0Ref.current.moveTo(0, 891*0.25);\n        ctx0Ref.current.lineTo(x,891*0.25);\n        ctx0Ref.current.stroke();\n        ctx0Ref.current.moveTo(0, 891*0.5);\n        ctx0Ref.current.lineTo(x,  891*0.5);\n        ctx0Ref.current.stroke();\n        ctx0Ref.current.moveTo(0, 891*0.75);\n        ctx0Ref.current.lineTo(x, 891*0.75);\n        ctx0Ref.current.stroke();\n    }\n\n    function drawPipe(x, y, w, h, a, size){\n        ctx2Ref.current.beginPath();\n        let next;\n        switch (size){\n            case 'xlg': ctx2Ref.current.lineWidth= 6;\n                if (table['lrg']['current'] !== null ){\n                    next = 15;\n                } else if (table['med']['current']  !== null ){\n                    next = 30;\n                } else if (table['reg']['current']  !== null ){\n                    next = 45;\n                } else if (table['sml']['current']  !== null ){\n                    next = 60;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 75;\n                } else {next = 90}\n                break;\n            case 'lrg': ctx2Ref.current.lineWidth= 5;\n                if (table['med']['current']  !== null ){\n                    next = 15;\n                } else if (table['reg']['current']  !== null ){\n                    next = 30;\n                } else if (table['sml']['current']  !== null ){\n                    next = 45;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 60;\n                } else {next = 75}\n                break;\n            case 'med': ctx2Ref.current.lineWidth= 4;\n                if (table['reg']['current']  !== null ){\n                    next = 15;\n                } else if (table['sml']['current'] !== null ){\n                    next = 30;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 45;\n                } else {next = 60}\n                break;\n            case 'reg': ctx2Ref.current.lineWidth= 3;\n                if (table['sml']  !== null ){\n                    next = 15;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 30;\n                } else {\n                    next = 45;\n                }\n                break;\n            case 'sml': ctx2Ref.current.lineWidth= 2;\n                if (table['xsm']['current']  !== null ){\n                    next = 15;\n                } else {\n                    next = 30;\n                }\n                break;\n            case 'xsm': ctx2Ref.current.lineWidth= 1;\n                next = 15;\n                break;\n            default: \n                console.log('Error setting casing width');\n                break;\n        }\n        ctx2Ref.current.strokestyle = \"black\";\n        ctx2Ref.current.fillStyle=`rgba(182, 112, 37, ${a})`;\n        ctx2Ref.current.fillRect(x, y, w, h, a);\n        ctx2Ref.current.moveTo(x,y);\n        ctx2Ref.current.lineTo(x,y+h);\n        ctx2Ref.current.lineTo(x+next, y+h); //Change to get next pipe?\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x+w, y);\n        ctx2Ref.current.lineTo(x+w,y+h);\n        ctx2Ref.current.lineTo(x+w-next, y+h)\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n    }\n    \n    function drawCasingSet(x, y, w, size){\n        ctx2Ref.current.fillStyle=\"black\";\n        let lineWidth;\n        switch (size){\n            case 'xlg': lineWidth = 3;\n                break;\n            case 'lrg': lineWidth = 2.5;\n                break;\n            case 'med': lineWidth = 2;\n                break;\n            case 'reg': lineWidth = 1.5;\n                break;\n            case 'sml': lineWidth = 1;\n                break;\n            case 'xsm': lineWidth = 0.5;\n                break;\n            default: \n                console.log('Error setting casing width');\n                break;\n        }\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x,y+lineWidth);\n        ctx2Ref.current.lineTo(x-30,y+lineWidth);\n        ctx2Ref.current.lineTo(x,y-30+lineWidth);\n        ctx2Ref.current.fill();\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x+w,y+lineWidth);\n        ctx2Ref.current.lineTo(x+w+30, y+lineWidth);\n        ctx2Ref.current.lineTo(x+w,y-30+lineWidth);\n        ctx2Ref.current.fill();\n    }\n\n    // function drawPerforations(x, y, w){\n    //     drawEachPerf(x, y);\n    //     drawEachPerf(x, y+15);\n    //     drawEachPerf(x, y+30);\n    //     drawEachPerf(x+w, y);\n    //     drawEachPerf(x+w, y+15);\n    //     drawEachPerf(x+w, y+30);\n    // }\n\n    function drawPerfPair(x, y, w){\n        drawEachPerf(x, y);\n        drawEachPerf(x+w, y);\n    }\n\n    function drawEachPerf(x2,y2) {\n        ctx2Ref.current.fillStyle = \"black\";\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.strokeStyle = \"white\";\n        ctx2Ref.current.moveTo(x2, y2-5);\n        ctx2Ref.current.lineTo(x2-30, y2);\n        ctx2Ref.current.lineTo(x2, y2+5);\n        ctx2Ref.current.lineTo(x2+30, y2);\n        ctx2Ref.current.lineTo(x2, y2-5);\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n        ctx2Ref.current.fill();\n        ctx2Ref.current.strokeStyle = \"black\";\n    }\n\n    function drawCementPlug(x,y,w,h){\n        ctx2Ref.current.fillRect(x, y, w, h);\n    }\n\n    function drawMechPlug(x,y,w,h){\n        ctx3Ref.current.fillStyle=\"black\";\n        ctx3Ref.current.fillRect(x, y, w, h);\n    }\n\n    function drawDVPlug(x, y, w){\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.lineWidth = 6;\n        ctx2Ref.current.moveTo(x, y);\n        ctx2Ref.current.lineTo(x-15, y+15);\n        ctx2Ref.current.moveTo(x+w, y);\n        ctx2Ref.current.lineTo(x+w+15, y+15);\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n    }\n\n    //CenterX 222px\n    //height 891px\n    // Ending_depth is to total_depth as X is to 891\n    //ED/TD = X/891\n    //X = ED/TD * 891\n\n    function findA(casings, cements){\n        let casingArray={};\n        let cementArray=[];\n        casings.forEach(casing => {\n            if (casing.gauge === 'xlg'){  \n                const xlgEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                xlgEndRef.current = xlgEnd;\n                casingArray['xlg'] = {\n                    id: casing.id,\n                    x: 132,\n                    depth: xlgEndRef.current}; \n            } else if (casingArray['xlg'] === undefined){\n                casingArray['xlg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'lrg'){\n                const lrgEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                lrgEndRef.current = lrgEnd;\n                casingArray['lrg'] = {\n                    id: casing.id,\n                    x: 147,\n                    depth: lrgEndRef.current};\n            } else if (casingArray['lrg'] === undefined){\n                casingArray['lrg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'med'){\n                const medEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                medEndRef.current = medEnd;\n                casingArray['med'] = {\n                    id: casing.id,\n                    x: 162,\n                    depth: medEndRef.current};\n            } else if (casingArray['med'] === undefined){\n                casingArray['med'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'reg'){\n                const regEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                regEndRef.current = regEnd;\n                casingArray['reg'] = {\n                    id: casing.id,\n                    x: 177,\n                    depth: regEndRef.current};\n            } else if (casingArray['reg'] === undefined){\n                casingArray['reg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'sml'){\n                const smlEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                smlEndRef.current = smlEnd;\n                casingArray['sml'] = {\n                    id: casing.id,\n                    x: 192,\n                    depth: smlEndRef.current};\n            } else if (casingArray['sml'] === undefined) {\n                casingArray['sml'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'xsm'){\n                const xsmEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                xsmEndRef.current = xsmEnd;\n                casingArray['xsm'] = {\n                    id: casing.id,\n                    x: 207,\n                    depth: xsmEndRef.current};\n            }\n            else if (casingArray['xsm'] === undefined){\n                casingArray['xsm'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n        });\n\n        cements.forEach(cement => {\n            const cementY=Math.round(cement.starting_depth*891/props.well.total_depth);\n            const cementBottom = Math.round(cement.ending_depth*891/props.well.total_depth);\n            let cementXTop;\n            let cementXBottom;\n            if (cementY < casingArray['xlg']['depth']){\n                cementXTop = 132;\n            } else if (cementY < casingArray['lrg']['depth']){\n                cementXTop = 147;\n            } else if (cementY < casingArray['med']['depth']){\n                cementXTop = 162;\n            } else if (cementY < casingArray['reg']['depth']){\n                cementXTop = 177;\n            } else if (cementY < casingArray['sml']['depth']){\n                cementXTop = 192;\n            } else if (cementY < casingArray['xsm']['depth']){\n                cementXTop = 207; \n            }\n            if (cementBottom <= casingArray['xlg']['depth'] +1){\n                cementXBottom = 132;\n            } else if (cementBottom <= casingArray['lrg']['depth'] +1){\n                cementXBottom = 147;\n            } else if (cementBottom <= casingArray['med']['depth'] +1){\n                cementXBottom = 162;\n            } else if (cementBottom <= casingArray['reg']['depth'] +1){\n                cementXBottom = 177;\n            } else if (cementBottom <= casingArray['sml']['depth'] +1){\n                cementXBottom = 192;\n            } else if (cementBottom <= casingArray['xsm']['depth'] +1){\n                cementXBottom = 207; \n            }\n\n            let cementW = cementXTop = cementXBottom;\n            if (cementW === 0){\n                cementW = 15;\n            }\n\n            cementArray.push({TopY: cementY, BottomY: cementBottom, TopX: cementXTop, BottomX: cementXBottom, W: cementW});\n        });                        \n        \n        let idArray=[];\n        for (let i = 0; i < cementArray.length; i++){\n            if (cementArray[i]['TopX']-cementArray[i]['W'] <= casingArray['xlg']['x'] && cementArray[i]['TopY'] < casingArray['xlg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['xlg']['id']) === -1)){\n                idArray.push(casingArray['xlg']['id']);\n            } else if (cementArray[i]['TopX'] - cementArray[i]['W'] <= casingArray['lrg']['x'] && cementArray[i]['TopY'] < casingArray['lrg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['lrg']['id']) === -1)){\n                idArray.push(casingArray['lrg']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['med']['x'] && cementArray[i]['TopY'] < casingArray['med']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['med']['id']) === -1)){\n                idArray.push(casingArray['med']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['reg']['x'] && cementArray[i]['TopY'] < casingArray['reg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['reg']['id']) === -1)){\n                idArray.push(casingArray['reg']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['sml']['x'] && cementArray[i]['TopY'] < casingArray['sml']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['sml']['id']) === -1)){\n                idArray.push(casingArray['sml']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['xsm']['x'] && cementArray[i]['TopY'] < casingArray['xsm']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['xsm']['id']) === -1)){\n                idArray.push(casingArray['xsm']['id']);\n            }\n        }\n        idArray.pop();\n        return idArray;\n    }\n\n\n    \n    function drawCasings(casings){\n        const aIndex = findA(props.wellCasings, props.wellCements);\n        let casingArray=[];\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'xlg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-90;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=180;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                \n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                \n                const xlgEnd = casingY+casingH;\n                xlgEndRef.current = xlgEnd;\n\n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n            }\n            setTable(prevState => ({  \n                ...prevState,        \n                'xlg': xlgEndRef.current\n            }));      \n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'lrg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-75;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=150;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const lrgEnd = casingY+casingH;\n                lrgEndRef.current = lrgEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }                setTable(prevState => ({  \n                    ...prevState,        \n                    'lrg': lrgEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'med' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-60;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=120;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const medEnd = casingY+casingH;\n                medEndRef.current = medEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'med': medEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'reg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-45;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=90;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const regEnd = casingY+casingH;\n                regEndRef.current = regEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'reg': regEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'sml' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-30;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=60;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const smlEnd = casingY+casingH;\n                smlEndRef.current = smlEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'sml': smlEndRef.current\n                }));\n            }\n        });\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'xsm' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-15;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=30;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const xsmEnd = casingY+casingH;\n                xsmEndRef.current = xsmEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'xsm': xsmEndRef.current\n                }));\n            }\n        });\n    }\n\n    function drawCements(cements){\n        cements.forEach(cement => {\n            const cementY=Math.round(cement.starting_depth*891/props.well.total_depth);\n            const cementH=Math.round(cement.ending_depth*891/props.well.total_depth)-cementY;\n            const cementBottom = Math.round(cement.ending_depth*891/props.well.total_depth);\n    \n            // console.log(cement.id)\n            const cementX = findPipeXAtY(cementBottom, table);\n            const cementXtop = findPipeXAtY(cementY, table);\n            const cementX2 = findNextPipeXAtY(cementX, cementXtop, cementY, table);\n            let deltaX;\n            // findA(cementXtop, cementX);\n            // console.log(cArray);\n            // console.log(cement.id, cementX, cementX2, cementXtop);\n            if (cementX2 === 0){  \n                deltaX = 15;\n            } else {\n                deltaX = cementX2;\n            }\n            const cementW = findPipeWAtY(cementBottom, table);\n            if (cementH > 0){\n                drawCement(cementX, cementY, cementW, cementH, deltaX);\n            }\n        })\n    }\n\n    function findPipeXAtY(y, table){\n        // console.log(table);\n        if (y < table['xlg']){\n            // setActiveTable('xlg');\n            return 222-90\n        } else if (y < table['lrg']){\n            // setActiveTable('xlg');\n            return 222-75\n        } else if (y < table['med']){\n            // setActiveTable('lrg');\n            return 222-60\n        } else if (y < table['reg']){\n            // setActiveTable('med');\n            return 222-45\n        } else if (y <= table['sml']){\n            // setActiveTable('reg');\n            return 222-30\n        } else if (y <= table['xsm']){\n            // setActiveTable('sml');\n            return 222-15\n        }\n    };\n\n    function findPipeWAtY(y, table){\n        if (y <= table['xlg']){\n            return 180\n        } else if (y < table['lrg']){\n            return 150\n        } else if (y < table['med']){\n            return 120\n        } else if (y < table['reg']){\n            return 90\n        } else if (y <= table['sml']){\n            return 60\n        } else if (y <= table['xsm']){\n            return 30\n        }\n    };\n\n    function findNextPipeXAtY(x, x2, y, table){\n        //Y is already set for x, x2.\n        let xArray = [];\n        if (xlgEndRef.current !== null){\n            xArray.push(findPipeXAtY(xlgEndRef.current-1, table));\n        }\n        if (lrgEndRef.current !== null){\n            xArray.push(findPipeXAtY(lrgEndRef.current-1, table));\n        } \n        if (medEndRef.current !== null){\n            xArray.push(findPipeXAtY(medEndRef.current-1, table));\n        }\n        if (regEndRef.current !== null){\n            xArray.push(findPipeXAtY(regEndRef.current-1, table));\n        }\n        if (smlEndRef.current !== null){\n            xArray.push(findPipeXAtY(smlEndRef.current-1, table));\n        }\n        if (xsmEndRef.current !== null){\n            xArray.push(findPipeXAtY(xsmEndRef.current-1, table));\n        }\n        \n        xArray.sort(function(a, b){return a-b});\n        \n        if (x2 === x){\n            return 15\n        } else {\n            return x - xArray[xArray.indexOf(x)-1];\n        }\n    }\n\n    function placePerforations(perfs){\n       perfs.forEach(perf => {\n            const perfY=Math.round(perf.starting_depth*891/props.well.total_depth);\n            const perfH=Math.round(perf.ending_depth*891/props.well.total_depth)-perfY;\n            const perfX = findPipeXAtY(perfY+perfH, table);\n            const perfW = findPipeWAtY(perfY+perfH, table);\n            if (perfH > 0){\n                drawPerfPair(perfX, perfY, perfW);\n            }\n        })\n    }\n\n    function placePlugs(plugs){\n        plugs.forEach(plug => {\n            if (plug.plug_type === \"DV\"){\n                const plugY=plug.set_depth*891/props.well.total_depth;\n                const plugX = findPipeXAtY(plugY, table);\n                const plugW = findPipeWAtY(plugY, table);\n                drawDVPlug(plugX, plugY, plugW);\n            } else {\n                const plugY=plug.starting_depth*891/props.well.total_depth;\n                const plugH=(plug.ending_depth*891/props.well.total_depth)-plugY;\n                if (plugH > 0){\n                    if (plugY+plugH <= xlgEndRef.current){\n                        const plugX=222-90;\n                        const plugW=180;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }\n                    } else if (plugY+plugH <= lrgEndRef.current){\n                        const plugX=222-75;\n                        const plugW=150;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }                    \n                    } else if (plugY+plugH <= medEndRef.current){\n                        const plugX=222-60;\n                        const plugW=120;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else if (plugY+plugH <= regEndRef.current){\n                        const plugX=222-45;\n                        const plugW=90;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else if (plugY+plugH <= smlEndRef.current){\n                        const plugX=222-30;\n                        const plugW=60;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else {\n                        const plugX=222-15;\n                        const plugW=30;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    }\n                }\n            }\n        })\n    }\n\n    // function handleCollapse(){\n    //     props.setShowCollapse(!props.showCollapse);\n    //     console.log(props.showCollapse);\n    // };\n//onClick={handleCollapse}\n    return (\n        <div className=\"bg-pseudo\" >\n            <canvas id=\"canvas0\" width=\"444\" height=\"900\" ref={canvas0Ref}></canvas>\n            <canvas id=\"canvas1\" width=\"444\" height=\"900\" ref={canvas1Ref}></canvas>\n            <canvas id=\"canvas2\" width=\"444\" height=\"900\" ref={canvas2Ref}></canvas>\n            <canvas id=\"canvas3\" width=\"444\" height=\"900\" ref={canvas3Ref} ></canvas>\n        </div>\n    )\n}\n\nexport default Diagram;","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport WellHoles from './WellHoles';\nimport WellCasings from './WellCasings';\nimport WellCements from './WellCements';\nimport WellPerfs from './WellPerfs';\nimport WellPlugs from './WellPlugs';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\nimport DeleteWellModal from './DeleteWellModal';\nimport PlatImageModal from './PlatImageModal';\nimport Diagram from './Diagram';\nimport Button from 'react-bootstrap/esm/Button';\n\nfunction WellView(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} />\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight2\" size=\"2x\"/>\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    const [deleteTarget, setDeleteTarget] = useState({});\n    const [showDelete, setShowDelete] = useState(false);\n    const [isClicked, setIsClicked] = useState(false);\n    const [refresh, setRefresh] = useState(0);\n    const [showWellDel, setShowWellDel] = useState(false);\n    const [showImage, setShowImage] = useState(false);\n    let wellHolesHTML;\n    let wellCasingsHTML;\n    let wellCementsHTML;\n    let wellPerfsHTML;\n    let wellPlugsHTML;\n    /*\n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    */\n    \n    // console.log(props);\n    function displayPopup() {\n        setShowImage(true);\n        // const $popup = document.getElementById('popup');\n        // if ($popup.style.display === 'none'){\n        //     $popup.style.display = 'block';\n        // } else {\n        //     $popup.style.display = 'none';\n        // }\n    }\n    \n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        props.setWell({...props.well, [name]: value});\n    }\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    useEffect(() => {\n          \n        const fetchWell = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well');\n            } else {\n                const data = await response.json();                \n                props.setWell(data);               \n            }\n          }\n\n\n        const fetchWellFeatures = async () => {\n                      \n            const response = await fetch(`/api/wells/${props.match.params.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n            }\n        }\n        \n        fetchWell();\n        fetchWellFeatures();\n        setShowDelete(false);        \n    }, [refresh]);\n\n    useEffect(() => {\n        if (showDelete === false && isClicked === true) {\n            setShowDelete(true);\n        } else {\n            setShowDelete(false)\n        }\n    },[isClicked]);//showDelete\n\n    async function handleBlur(event){\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        // const {propertyName, value} = event.target;\n        // console.log(event.target);\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/${props.match.params.id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating well information');\n        }\n        // const data = await response.json();\n        // console.log(propertyName, value);\n        if (propertyName === \"total_depth\"){\n            setRefresh(Math.random());\n        }\n\n    }\n\n    const handleHoleChange = (event) => {\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        let index = wellHoles.findIndex((hole) => hole.id === parseInt(id));\n        let test = [...wellHoles]\n        test[index][propertyName] = value;\n        setWellHoles(test);\n    }\n\n    async function handleHoleBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        console.log(event.target);\n        console.log(event.target.id);\n        console.log(id)\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/holes/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating hole information');\n        }\n        // const data = await response.json();\n    }\n    \n    if (wellHoles === []){\n        wellHolesHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    } else {\n        wellHolesHTML = wellHoles.map(hole => <WellHoles key={hole.id+1000} {...hole} setWellHoles={setWellHoles} handleHoleChange={handleHoleChange} handleHoleBlur={handleHoleBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleHoleKeyPress={handleHoleKeyPress}/>)        \n    }\n\n    const handleCasingChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCasings.findIndex(casing => casing.id === parseInt(id));\n        let test = [...wellCasings]\n        test[index][name] = value;\n        setWellCasings(test);\n    }\n\n    async function handleCasingBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/casings/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating casing information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellCasings !== []){\n        wellCasingsHTML = wellCasings.map(casing => <WellCasings key={casing.id+2000} {...casing} handleCasingChange={handleCasingChange} handleCasingBlur={handleCasingBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleCasingKeyPress={handleCasingKeyPress}/>)\n    } else {\n        wellCasingsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handleCementChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCements.findIndex(cement => cement.id === parseInt(id));\n        let test = [...wellCements]\n        test[index][name] = value;\n        setWellCements(test);\n    }\n\n    async function handleCementBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/cements/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating cement information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellCements !== []){\n        wellCementsHTML = wellCements.map(cement => <WellCements key={cement.id+3000} {...cement} handleCementChange={handleCementChange} handleCementBlur={handleCementBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleCementKeyPress={handleCementKeyPress}/>)\n    } else {\n        wellCementsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePerforationChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPerfs.findIndex(perf => perf.id === parseInt(id));\n        let test = [...wellPerfs]\n        test[index][name] = value;\n        setWellPerfs(test);\n    }\n\n    async function handlePerforationBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/perforations/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating perforation information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellPerfs !== []){\n        wellPerfsHTML = wellPerfs.map(perf => <WellPerfs key={perf.id+4000} {...perf} handlePerforationChange={handlePerforationChange} handlePerforationBlur={handlePerforationBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handlePerfKeyPress={handlePerfKeyPress}/>)\n    } else {\n        wellPerfsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePlugChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPlugs.findIndex(plug => plug.id === parseInt(id));\n        let test = [...wellPlugs]\n        test[index][name] = value;\n        setWellPlugs(test);\n    }\n\n    async function handlePlugBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/plugs/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating plug information');\n        }\n        // const data = await response.json();\n    }\n\n\n    if (wellPlugs !== []){\n        wellPlugsHTML = wellPlugs.map(plug => <WellPlugs key={plug.id+5000} {...plug} handlePlugChange={handlePlugChange} handlePlugBlur={handlePlugBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handlePlugKeyPress={handlePlugKeyPress}/>)\n    } else {\n        wellPlugsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    function handleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleHoleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleHoleBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleCasingKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleCasingBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleCementKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleCementBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handlePerfKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handlePerforationBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handlePlugKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handlePlugBlur(e)\n            e.target.blur();\n\n        }\n    }\n\n\n    const createNewHole = async () => {\n        const newHole = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            hole_size: ''\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newHole)\n        };\n        const response = await fetch('/api/wells/holes/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellHoles([...wellHoles, newHole]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCasing = async () => {\n        const newCasing = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            casing_weight: '',\n            casing_grading: '',\n            gauge: 'sml',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCasing)\n        };\n        const response = await fetch('/api/wells/casings/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellCasings([...wellCasings, newCasing]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCement = async () => {\n        const newCement = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCement)\n        };\n        const response = await fetch('/api/wells/cements/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellCements([...wellCements, newCement]);\n            setRefresh(Math.random())\n        }\n    };\n    \n    const createNewPerforation = async () => {\n        const newPerforation = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            perforation_interval: '',\n            perforation_total_holes: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPerforation)\n        };\n        const response = await fetch('/api/wells/perforations/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellPerfs([...wellPerfs, newPerforation]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewPlug = async () => {\n        const newPlug = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPlug)\n        };\n        const response = await fetch('/api/wells/plugs/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellPlugs([...wellPlugs, newPlug]);\n            setRefresh(Math.random())\n        }\n    };\n\n    function handleDeleteWell(event){\n        setShowWellDel(true);\n    }\n\n    function handleBack(){\n        props.setShowSplash(false)\n        props.history.goBack();\n    }\n\n    let wellInfoHTML;\n    if (props.well !== null) {\n        wellInfoHTML = \n        <div className=\"well-info\">\n                <div className=\"well-table-top row\">\n                    <div className=\"col-lg-8\"> \n                        <h2>{props.well.lease} {props.well.well_number} <span className=\"icon\" onClick={displayPopup}>{$faImage}</span> </h2>\n                    </div>\n                    <div>\n                    <Button className=\"btn\" variant=\"warning\" onClick={handleBack}> well selection </Button>\n                    </div>\n                    <div className=\"col-lg-4 text-right\">\n                        <span className=\"icon-trash-lrg\" onClick={handleDeleteWell}>{$faTrashAlt}</span>\n                        <span className=\"bold-span\">Last Updated: </span>{formatDate()}\n                    </div>                    \n                </div>\n                <div className=\"well-table-id row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">API Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"API_number\" className=\"input-hidden\" value={props.well.API_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Company: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"company\" className=\"input-hidden\" value={props.well.company} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Permit Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"permit_number\"className=\"input-hidden\" value={props.well.permit_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Current Status: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"current_status\" className=\"input-hidden\" value={props.well.current_status} />\n                    </div>\n                </div>\n                <div className=\"well-table-location row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Location: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"location\" className=\"input-hidden\" value={props.well.location} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Section: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"section\" className=\"input-hidden\" value={props.well.section} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Survey: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"survey\" className=\"input-hidden\" value={props.well.survey} />\n                    </div>\n                    <div className=\"col-lg-3 county-state\">\n                        <div>\n                            <span className=\"bold-span\">County: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"county\" className=\"input-hidden county\" value={props.well.county} />\n                        </div>\n                        <div>\n                            <span className=\"bold-span\">State: </span> <input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"state\" className=\"input-hidden state\" value={props.well.state} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"well-table-field row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Field: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"field\" className=\"input-hidden\" value={props.well.field} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Initial Formation: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"initial_formation\" className=\"input-hidden\" value={props.well.initial_formation} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Spud Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"spud_date\" className=\"input-hidden\" value={props.well.spud_date} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Comp Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"completion_date\" className=\"input-hidden\" value={props.well.completion_date} />\n                    </div>\n                </div>\n                <div className=\"well-table-depths row mb-3\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Ground Level: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"ground_level\" className=\"input-hidden\" value={props.well.ground_level} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Kelley Bushing: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"kelley_bushing\" className=\"input-hidden\" value={props.well.kelley_bushing} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Derrick Floor: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"derrick_floor\" className=\"input-hidden\" value={props.well.derrick_floor} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Total Depth: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"total_depth\" className=\"input-hidden\" value={props.well.total_depth} />\n                    </div>\n                </div>\n                <div className=\"labels row\">\n                    <div className=\"hole-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label1\"> HOLE</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellHolesHTML}\n                            <button className=\"new-feature-button\" onClick={createNewHole}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"casing-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label2\">CASING</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCasingsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCasing}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"cement-col col\">\n                        <div className=\"showme\" >\n                            <p className=\"label3\">CEMENT</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCementsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCement}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"perf-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label4\">PERFORATIONS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPerfsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPerforation}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"plug-col col\">\n                        <div className=\"col showme\">\n                            <p className=\"label5\">PLUGS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPlugsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPlug}> Add New</button>\n                        </div>\n                    </div>\n                </div>\n            </div>;\n    } else {\n        wellInfoHTML = <div>Loading...<br />If this screen does not go away, you may not have permission to view this well.</div>;\n    }\n        \n    return (\n        <div className=\"well-container\">\n            {wellInfoHTML}\n            <DeleteConfirmationModal deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} showDelete={showDelete} setShowDelete={setShowDelete} history={props.history} setRefresh={setRefresh} setIsClicked={setIsClicked}/>\n            <DeleteWellModal history={props.history} setRefresh={setRefresh} showWellDel={showWellDel} setShowWellDel={setShowWellDel}/>\n            <PlatImageModal well={props.well} setWell={props.setWell} showImage={showImage} setShowImage={setShowImage} history={props.history} refresh={refresh} setRefresh={setRefresh}/>\n            <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh}/>\n        </div>\n    );\n};\n\nexport default withRouter(WellView)\n\n\n\n/*\n\n<div className=\"well-info\">\n    <h2>{props.well.lease} {props.well.well_number}</h2>\n    <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    I'm a well! \n</div>\n\n\n\nlet currentTarget;\n\n\n\n\n// add when widget loads\n\n... and finally some housekeeping\n\n// remove listener when destroying the widget\nwindow.removeEventListener(\"click\", clickOut);\n\n\n\n\n    // useEffect(() => {\n    //     // setWellHoles(wellFeatures.holes);\n    //     // setWellCasings(wellFeatures.casings);\n    //     // setWellCements(wellFeatures.cements);\n    //     // setWellPerfs(wellFeatures.perforations);\n    //     // setWellPlugs(wellFeatures.plugs);\n    // }, [wellFeatures]);\n\n    //CHANGE TO NOT USE INNERHTML!\n    // function editField(event){\n    //     if (!selected){\n    //         console.log(event);\n    //         id = event.target.id;\n    //         currentTarget = id;\n    //         value = event.target.attributes.value.value;\n    //         $active = document.getElementById(id)\n    //         console.log(value);\n    //         $active.innerHTML = `<input type='text' value=${value} />`;\n    //         window.addEventListener(\"click\", clickOut);\n    //         console.log($active);\n    //         selected = true;\n    //     }\n    // }\n\n    // const clickOut = (event) => {\n    //     if (!event.target.id.includes(currentTarget)) {\n    //         selected = false;\n    //         window.removeEventListener(\"click\", clickOut);\n    //         $active.innerHTML = `<span id=${id} value=${value} onClick={editField}>${value}</span>`\n    //     }\n    // };\n\nfetch(‘https://jsonplaceholder.typicode.com/todos/1', {\nmethod: ‘PATCH’,\nbody: JSON.stringify({\ncompleted: true\n}),\nheaders: {\n“Content-type”: “application/json; charset=UTF-8”\n}\n})\n.then(response => response.json())\n.then(json => console.log(json))\n\n\n\nasync function handleBlur(event){\n    event.preventDefault();\n    const options = {\n        method: 'PATCH',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(name: value)\n    };\n    const response = await fetch(``/api/wells/${props.match.params.id}/`, options);\n    const data = await response.json();\n    console.log('data', data);\n}\n\n\n\nconst newHole = async () => {\n    const newHole = {\n        well: props.match.params.id,\n        starting_depth: 0,\n        ending_depth: 0,\n        hole_size: ''\n    }\n    const options = {\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(newHole)\n    };\n    const response = await fetch('/api/wells/holes/', options);\n    if(!response){\n        console.log(response);\n    } else {\n        const data = await response.json();\n        setWellHoles([...wellHoles, newHole]);\n    }\n};\n\n\n\n*/","import Modal from 'react-bootstrap/Modal'\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\n\nfunction NewWellModal(props) {\n       \n    const handleClose = () => props.setShowNew(false);\n\n    const handleSave = async () => {\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newWell)\n        };\n        const response = await fetch('/api/wells/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            props.setShowNew(false);\n            console.log(data);\n            props.setWell(data);\n            props.history.push(`/wellinfo/${data.id}`);\n        }\n    }\n\n    const [newWell, setNewWell] = useState({\n        lease: '',\n        well_number: '',\n        API_number: '',\n        total_depth: 0,\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setNewWell(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n   \n    return (\n      <>  \n        <Modal show={props.showNew} onHide={handleClose} className=\"new-well-modal\">\n          <Modal.Header className=\"new-modal\" closeButton>\n            <Modal.Title>Add New Well</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"new-modal\">\n            <div className=\"form-container new-well\">\n            <form className=\"col-12 new-well-form\" >\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='lease'>Lease Name:</label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"lease\"\n                        placeholder=\"Enter lease\"\n                        onChange={handleInput}\n                        required\n                        name='lease'\n                        value={newWell.lease}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='well_number'>Well Number: </label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"well_number\"\n                        placeholder=\"Enter well number\"\n                        onChange={handleInput}\n                        required\n                        name='well_number'\n                        value={newWell.well_number}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='API_number'>API Number:</label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"API_number\"\n                        placeholder=\"Enter API number\"\n                        onChange={handleInput}\n                        required\n                        name='API_number'\n                        value={newWell.API_number}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='total_depth'>Total Depth:</label>\n                    <input type=\"number\" \n                        className=\"form-control\"\n                        id=\"total_depth\"\n                        placeholder=\"Enter total depth\"\n                        onChange={handleInput}\n                        required\n                        name='total_depth'\n                        value={newWell.total_depth}\n                    />\n                </div>\n            </form>\n            </div>\n          </Modal.Body>\n          <Modal.Footer className=\"new-modal\">\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Discard\n            </Button>\n            <Button variant=\"warning\" onClick={handleSave}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default NewWellModal;","import { useEffect, useRef, useState } from \"react\";\nimport dirt from '../StaticImages/cement-texture.jpeg';\n\nfunction PDFDiagram(props){\n    const pdfcanvas0Ref = useRef(null);\n    const pdfcanvas1Ref = useRef(null);\n    const pdfcanvas2Ref = useRef(null);\n    const pdfcanvas3Ref = useRef(null);\n    const pdfctx0Ref = useRef(null);\n    const pdfctx1Ref = useRef(null);\n    const pdfctx2Ref = useRef(null);\n    const pdfctx3Ref = useRef(null);\n    const xlgEndRef = useRef(null);\n    const lrgEndRef = useRef(null);\n    const medEndRef = useRef(null);\n    const regEndRef = useRef(null);\n    const smlEndRef = useRef(null);\n    const xsmEndRef = useRef(null);\n    const [table, setTable] = useState({\n        'xlg': xlgEndRef,\n        'lrg': lrgEndRef,\n        'med': medEndRef,\n        'reg': regEndRef,\n        'sml':smlEndRef,\n        'xsm': xsmEndRef,\n    });\n    // const [activeTable, setActiveTable] = useState('');\n    // const [cArray, setCArray] = useState([]);\n\n    useEffect(() => {\n        const pdfcanvas0 = pdfcanvas0Ref.current;\n        const pdfctx0 = pdfcanvas0.getContext('2d');\n        pdfctx0Ref.current = pdfctx0;\n\n        pdfctx0.width = window.innerWidth;\n        pdfctx0.height = window.innerHeight;\n\n        pdfcanvas0.addEventListener('resize', function() {\n        pdfctx0.width = window.innerWidth;\n        pdfctx0.height = window.innerHeight;\n        });\n\n        const pdfcanvas1 = pdfcanvas1Ref.current;\n        const pdfctx1 = pdfcanvas1.getContext('2d');\n        pdfctx1Ref.current = pdfctx1;\n\n        pdfctx1.width = window.innerWidth;\n        pdfctx1.height = window.innerHeight;\n\n        pdfcanvas1.addEventListener('resize', function() {\n        pdfctx1.width = window.innerWidth;\n        pdfctx1.height = window.innerHeight;\n        });\n\n        let img = new Image();\n        let ptrn;\n        img.src = dirt;        \n\n        const pdfcanvas2 = pdfcanvas2Ref.current;\n        const pdfctx2 = pdfcanvas2.getContext('2d');\n        pdfctx2Ref.current = pdfctx2;\n\n        pdfcanvas2.addEventListener('resize', function() {\n            pdfctx2.width = window.innerWidth;\n            pdfctx2.height = window.innerHeight;\n        });\n\n        const pdfcanvas3 = pdfcanvas3Ref.current;\n        const pdfctx3 = pdfcanvas3.getContext('2d');\n        pdfctx3Ref.current = pdfctx3;\n\n        pdfcanvas3.addEventListener('resize', function() {\n            pdfctx3.width = window.innerWidth;\n            pdfctx3.height = window.innerHeight;\n        });\n\n        pdfctx0.clearRect(0, 0, pdfcanvas0.width, pdfcanvas0.height);\n        pdfctx1.clearRect(0, 0, pdfcanvas1.width, pdfcanvas1.height);\n        pdfctx2.clearRect(0, 0, pdfcanvas2.width, pdfcanvas2.height);\n        pdfctx3.clearRect(0, 0, pdfcanvas3.width, pdfcanvas3.height);\n        \n        drawCasings(props.wellCasings);\n\n        img.onload = () => {\n            ptrn = pdfctx1.createPattern(img, 'repeat');\n            pdfctx1.fillStyle = ptrn;\n            pdfctx2.fillStyle = ptrn;\n            drawCements(props.wellCements);\n            placePlugs(props.wellPlugs);\n        }\n\n        placePerforations(props.wellPerfs);\n\n        if (props.well){\n            drawDepthGuides(props.well.total_depth);\n        }\n\n    }, [props.well, props.wellCasings, props.wellCements, props.wellPerfs, props.wellPlugs]);\n        \n\n\n\n\n    function drawCement(x, y, w, h, x2){\n        pdfctx1Ref.current.fillRect(x-x2, y, x2, h);\n        pdfctx1Ref.current.fillRect(x+w, y, x2, h);\n    }\n\n    function drawDepthGuides(depth){\n        pdfctx0Ref.current.strokeStyle = \"white\";\n        pdfctx0Ref.current.lineWidth=2;\n        const x = pdfcanvas0Ref.current.width;\n        const topLine = Math.round(depth*0.25);\n        pdfctx0Ref.current.fillStyle = \"white\";\n        pdfctx0Ref.current.font = '16px Oxygen';\n        pdfctx0Ref.current.fillText(topLine, 10, 624*0.25-10);\n        const midLine = Math.round(depth*0.5);\n        pdfctx0Ref.current.fillText(midLine, 10, 624*0.5-10);\n        const botLine = Math.round(depth*0.75);\n        pdfctx0Ref.current.fillText(botLine, 10, 624*0.75-10);\n        pdfctx0Ref.current.beginPath();\n        pdfctx0Ref.current.setLineDash([5, 15]);\n        pdfctx0Ref.current.moveTo(0, 624*0.25);\n        pdfctx0Ref.current.lineTo(x,624*0.25);\n        pdfctx0Ref.current.stroke();\n        pdfctx0Ref.current.moveTo(0, 624*0.5);\n        pdfctx0Ref.current.lineTo(x,  624*0.5);\n        pdfctx0Ref.current.stroke();\n        pdfctx0Ref.current.moveTo(0, 624*0.75);\n        pdfctx0Ref.current.lineTo(x, 624*0.75);\n        pdfctx0Ref.current.stroke();\n    }\n\n    function drawPipe(x, y, w, h, a, size){\n        pdfctx2Ref.current.beginPath();\n        let next;\n        switch (size){\n            case 'xlg': pdfctx2Ref.current.lineWidth= 6;\n                if (table['lrg']['current'] !== null ){\n                    next = 15;\n                } else if (table['med']['current']  !== null ){\n                    next = 30;\n                } else if (table['reg']['current']  !== null ){\n                    next = 45;\n                } else if (table['sml']['current']  !== null ){\n                    next = 60;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 75;\n                } else {next = 90}\n                break;\n            case 'lrg': pdfctx2Ref.current.lineWidth= 5;\n                if (table['med']['current']  !== null ){\n                    next = 15;\n                } else if (table['reg']['current']  !== null ){\n                    next = 30;\n                } else if (table['sml']['current']  !== null ){\n                    next = 45;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 60;\n                } else {next = 75}\n                break;\n            case 'med': pdfctx2Ref.current.lineWidth= 4;\n                if (table['reg']['current']  !== null ){\n                    next = 15;\n                } else if (table['sml']['current'] !== null ){\n                    next = 30;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 45;\n                } else {next = 60}\n                break;\n            case 'reg': pdfctx2Ref.current.lineWidth= 3;\n                if (table['sml']  !== null ){\n                    next = 15;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 30;\n                } else {\n                    next = 45;\n                }\n                break;\n            case 'sml': pdfctx2Ref.current.lineWidth= 2;\n                if (table['xsm']['current']  !== null ){\n                    next = 15;\n                } else {\n                    next = 30;\n                }\n                break;\n            case 'xsm': pdfctx2Ref.current.lineWidth= 1;\n                next = 15;\n                break;\n            default: \n                console.log('Error setting casing width');\n                break;\n        }\n        pdfctx2Ref.current.strokestyle = \"black\";\n        pdfctx2Ref.current.fillStyle=`rgba(182, 112, 37, ${a})`;\n        pdfctx2Ref.current.fillRect(x, y, w, h, a);\n        pdfctx2Ref.current.moveTo(x,y);\n        pdfctx2Ref.current.lineTo(x,y+h);\n        pdfctx2Ref.current.lineTo(x+next, y+h); //Change to get next pipe?\n        pdfctx2Ref.current.stroke();\n        pdfctx2Ref.current.closePath();\n\n        pdfctx2Ref.current.beginPath();\n        pdfctx2Ref.current.moveTo(x+w, y);\n        pdfctx2Ref.current.lineTo(x+w,y+h);\n        pdfctx2Ref.current.lineTo(x+w-next, y+h)\n        pdfctx2Ref.current.stroke();\n        pdfctx2Ref.current.closePath();\n    }\n    \n    function drawCasingSet(x, y, w, size){\n        pdfctx2Ref.current.fillStyle=\"black\";\n        let lineWidth;\n        switch (size){\n            case 'xlg': lineWidth = 3;\n                break;\n            case 'lrg': lineWidth = 2.5;\n                break;\n            case 'med': lineWidth = 2;\n                break;\n            case 'reg': lineWidth = 1.5;\n                break;\n            case 'sml': lineWidth = 1;\n                break;\n            case 'xsm': lineWidth = 0.5;\n                break;\n            default: \n                console.log('Error setting casing width');\n                break;\n        }\n\n        pdfctx2Ref.current.beginPath();\n        pdfctx2Ref.current.moveTo(x,y+lineWidth);\n        pdfctx2Ref.current.lineTo(x-30,y+lineWidth);\n        pdfctx2Ref.current.lineTo(x,y-30+lineWidth);\n        pdfctx2Ref.current.fill();\n\n        pdfctx2Ref.current.beginPath();\n        pdfctx2Ref.current.moveTo(x+w,y+lineWidth);\n        pdfctx2Ref.current.lineTo(x+w+30, y+lineWidth);\n        pdfctx2Ref.current.lineTo(x+w,y-30+lineWidth);\n        pdfctx2Ref.current.fill();\n    }\n\n    function drawPerfPair(x, y, w){\n        drawEachPerf(x, y);\n        drawEachPerf(x+w, y);\n    }\n\n    function drawEachPerf(x2,y2) {\n        pdfctx2Ref.current.fillStyle = \"black\";\n        pdfctx2Ref.current.beginPath();\n        pdfctx2Ref.current.strokeStyle = \"white\";\n        pdfctx2Ref.current.moveTo(x2, y2-5);\n        pdfctx2Ref.current.lineTo(x2-30, y2);\n        pdfctx2Ref.current.lineTo(x2, y2+5);\n        pdfctx2Ref.current.lineTo(x2+30, y2);\n        pdfctx2Ref.current.lineTo(x2, y2-5);\n        pdfctx2Ref.current.stroke();\n        pdfctx2Ref.current.closePath();\n        pdfctx2Ref.current.fill();\n        pdfctx2Ref.current.strokeStyle = \"black\";\n    }\n\n    function drawCementPlug(x,y,w,h){\n        pdfctx2Ref.current.fillRect(x, y, w, h);\n    }\n\n    function drawMechPlug(x,y,w,h){\n        pdfctx3Ref.current.fillStyle=\"black\";\n        pdfctx3Ref.current.fillRect(x, y, w, h);\n    }\n\n    function drawDVPlug(x, y, w){\n        pdfctx2Ref.current.beginPath();\n        pdfctx2Ref.current.lineWidth = 6;\n        pdfctx2Ref.current.moveTo(x, y);\n        pdfctx2Ref.current.lineTo(x-15, y+15);\n        pdfctx2Ref.current.moveTo(x+w, y);\n        pdfctx2Ref.current.lineTo(x+w+15, y+15);\n        pdfctx2Ref.current.stroke();\n        pdfctx2Ref.current.closePath();\n    }\n\n    function findA(casings, cements){\n        let casingArray={};\n        let cementArray=[];\n        casings.forEach(casing => {\n            if (casing.gauge === 'xlg'){  \n                const xlgEnd = Math.round(casing.ending_depth*624/props.well.total_depth);\n                xlgEndRef.current = xlgEnd;\n                casingArray['xlg'] = {\n                    id: casing.id,\n                    x: 30,\n                    depth: xlgEndRef.current}; \n            } else if (casingArray['xlg'] === undefined){\n                casingArray['xlg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'lrg'){\n                const lrgEnd = Math.round(casing.ending_depth*624/props.well.total_depth);\n                lrgEndRef.current = lrgEnd;\n                casingArray['lrg'] = {\n                    id: casing.id,\n                    x: 45,\n                    depth: lrgEndRef.current};\n            } else if (casingArray['lrg'] === undefined){\n                casingArray['lrg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'med'){\n                const medEnd = Math.round(casing.ending_depth*624/props.well.total_depth);\n                medEndRef.current = medEnd;\n                casingArray['med'] = {\n                    id: casing.id,\n                    x: 60,\n                    depth: medEndRef.current};\n            } else if (casingArray['med'] === undefined){\n                casingArray['med'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'reg'){\n                const regEnd = Math.round(casing.ending_depth*624/props.well.total_depth);\n                regEndRef.current = regEnd;\n                casingArray['reg'] = {\n                    id: casing.id,\n                    x: 75,\n                    depth: regEndRef.current};\n            } else if (casingArray['reg'] === undefined){\n                casingArray['reg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'sml'){\n                const smlEnd = Math.round(casing.ending_depth*624/props.well.total_depth);\n                smlEndRef.current = smlEnd;\n                casingArray['sml'] = {\n                    id: casing.id,\n                    x: 90,\n                    depth: smlEndRef.current};\n            } else if (casingArray['sml'] === undefined) {\n                casingArray['sml'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'xsm'){\n                const xsmEnd = Math.round(casing.ending_depth*624/props.well.total_depth);\n                xsmEndRef.current = xsmEnd;\n                casingArray['xsm'] = {\n                    id: casing.id,\n                    x: 105,\n                    depth: xsmEndRef.current};\n            }\n            else if (casingArray['xsm'] === undefined){\n                casingArray['xsm'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n        });\n\n        cements.forEach(cement => {\n            const cementY=Math.round(cement.starting_depth*624/props.well.total_depth);\n            const cementBottom = Math.round(cement.ending_depth*624/props.well.total_depth);\n            let cementXTop;\n            let cementXBottom;\n            if (cementY < casingArray['xlg']['depth']){\n                cementXTop = 30;\n            } else if (cementY < casingArray['lrg']['depth']){\n                cementXTop = 45;\n            } else if (cementY < casingArray['med']['depth']){\n                cementXTop = 60;\n            } else if (cementY < casingArray['reg']['depth']){\n                cementXTop = 75;\n            } else if (cementY < casingArray['sml']['depth']){\n                cementXTop = 90;\n            } else if (cementY < casingArray['xsm']['depth']){\n                cementXTop = 105; \n            }\n            if (cementBottom <= casingArray['xlg']['depth'] +1){\n                cementXBottom = 30;\n            } else if (cementBottom <= casingArray['lrg']['depth'] +1){\n                cementXBottom = 45;\n            } else if (cementBottom <= casingArray['med']['depth'] +1){\n                cementXBottom = 60;\n            } else if (cementBottom <= casingArray['reg']['depth'] +1){\n                cementXBottom = 75;\n            } else if (cementBottom <= casingArray['sml']['depth'] +1){\n                cementXBottom = 90;\n            } else if (cementBottom <= casingArray['xsm']['depth'] +1){\n                cementXBottom = 105; \n            }\n\n            let cementW = cementXTop = cementXBottom;\n            if (cementW === 0){\n                cementW = 15;\n            }\n\n            cementArray.push({TopY: cementY, BottomY: cementBottom, TopX: cementXTop, BottomX: cementXBottom, W: cementW});\n        });                        \n        \n        let idArray=[];\n        for (let i = 0; i < cementArray.length; i++){\n            if (cementArray[i]['TopX']-cementArray[i]['W'] <= casingArray['xlg']['x'] && cementArray[i]['TopY'] < casingArray['xlg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['xlg']['id']) === -1)){\n                idArray.push(casingArray['xlg']['id']);\n            } else if (cementArray[i]['TopX'] - cementArray[i]['W'] <= casingArray['lrg']['x'] && cementArray[i]['TopY'] < casingArray['lrg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['lrg']['id']) === -1)){\n                idArray.push(casingArray['lrg']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['med']['x'] && cementArray[i]['TopY'] < casingArray['med']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['med']['id']) === -1)){\n                idArray.push(casingArray['med']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['reg']['x'] && cementArray[i]['TopY'] < casingArray['reg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['reg']['id']) === -1)){\n                idArray.push(casingArray['reg']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['sml']['x'] && cementArray[i]['TopY'] < casingArray['sml']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['sml']['id']) === -1)){\n                idArray.push(casingArray['sml']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['xsm']['x'] && cementArray[i]['TopY'] < casingArray['xsm']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['xsm']['id']) === -1)){\n                idArray.push(casingArray['xsm']['id']);\n            }\n        }\n        idArray.pop();\n        return idArray;\n    }\n\n\n    \n    function drawCasings(casings){\n        const aIndex = findA(props.wellCasings, props.wellCements);\n        let casingArray=[];\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'xlg' && casing.ending_depth > casing.starting_depth){\n                const casingX=120-90;\n                const casingY=Math.round(casing.starting_depth*624/props.well.total_depth);\n                const casingW=180;\n                const casingH=Math.round(casing.ending_depth*624/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                \n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                \n                const xlgEnd = casingY+casingH;\n                xlgEndRef.current = xlgEnd;\n\n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n            }\n            setTable(prevState => ({  \n                ...prevState,        \n                'xlg': xlgEndRef.current\n            }));      \n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'lrg' && casing.ending_depth > casing.starting_depth){\n                const casingX=120-75;\n                const casingY=Math.round(casing.starting_depth*624/props.well.total_depth);\n                const casingW=150;\n                const casingH=Math.round(casing.ending_depth*624/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const lrgEnd = casingY+casingH;\n                lrgEndRef.current = lrgEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }                setTable(prevState => ({  \n                    ...prevState,        \n                    'lrg': lrgEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'med' && casing.ending_depth > casing.starting_depth){\n                const casingX=120-60;\n                const casingY=Math.round(casing.starting_depth*624/props.well.total_depth);\n                const casingW=120;\n                const casingH=Math.round(casing.ending_depth*624/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const medEnd = casingY+casingH;\n                medEndRef.current = medEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'med': medEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'reg' && casing.ending_depth > casing.starting_depth){\n                const casingX=120-45;\n                const casingY=Math.round(casing.starting_depth*624/props.well.total_depth);\n                const casingW=90;\n                const casingH=Math.round(casing.ending_depth*624/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const regEnd = casingY+casingH;\n                regEndRef.current = regEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'reg': regEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'sml' && casing.ending_depth > casing.starting_depth){\n                const casingX=120-30;\n                const casingY=Math.round(casing.starting_depth*624/props.well.total_depth);\n                const casingW=60;\n                const casingH=Math.round(casing.ending_depth*624/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const smlEnd = casingY+casingH;\n                smlEndRef.current = smlEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'sml': smlEndRef.current\n                }));\n            }\n        });\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'xsm' && casing.ending_depth > casing.starting_depth){\n                const casingX=120-15;\n                const casingY=Math.round(casing.starting_depth*624/props.well.total_depth);\n                const casingW=30;\n                const casingH=Math.round(casing.ending_depth*624/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const xsmEnd = casingY+casingH;\n                xsmEndRef.current = xsmEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'xsm': xsmEndRef.current\n                }));\n            }\n        });\n    }\n\n    function drawCements(cements){\n        cements.forEach(cement => {\n            const cementY=Math.round(cement.starting_depth*624/props.well.total_depth);\n            const cementH=Math.round(cement.ending_depth*624/props.well.total_depth)-cementY;\n            const cementBottom = Math.round(cement.ending_depth*624/props.well.total_depth);\n    \n            // console.log(cement.id)\n            const cementX = findPipeXAtY(cementBottom, table);\n            const cementXtop = findPipeXAtY(cementY, table);\n            const cementX2 = findNextPipeXAtY(cementX, cementXtop, cementY, table);\n            let deltaX;\n            // findA(cementXtop, cementX);\n            // console.log(cArray);\n            // console.log(cement.id, cementX, cementX2, cementXtop);\n            if (cementX2 === 0){  \n                deltaX = 15;\n            } else {\n                deltaX = cementX2;\n            }\n            const cementW = findPipeWAtY(cementBottom, table);\n            if (cementH > 0){\n                drawCement(cementX, cementY, cementW, cementH, deltaX);\n            }\n        })\n    }\n\n    function findPipeXAtY(y, table){\n        // console.log(table);\n        if (y < table['xlg']){\n            // setActiveTable('xlg');\n            return 120-90\n        } else if (y < table['lrg']){\n            // setActiveTable('xlg');\n            return 120-75\n        } else if (y < table['med']){\n            // setActiveTable('lrg');\n            return 120-60\n        } else if (y < table['reg']){\n            // setActiveTable('med');\n            return 120-45\n        } else if (y <= table['sml']){\n            // setActiveTable('reg');\n            return 120-30\n        } else if (y <= table['xsm']){\n            // setActiveTable('sml');\n            return 120-15\n        }\n    };\n\n    function findPipeWAtY(y, table){\n        if (y <= table['xlg']){\n            return 180\n        } else if (y < table['lrg']){\n            return 150\n        } else if (y < table['med']){\n            return 120\n        } else if (y < table['reg']){\n            return 90\n        } else if (y <= table['sml']){\n            return 60\n        } else if (y <= table['xsm']){\n            return 30\n        }\n    };\n\n    function findNextPipeXAtY(x, x2, y, table){\n        //Y is already set for x, x2.\n        let xArray = [];\n        if (xlgEndRef.current !== null){\n            xArray.push(findPipeXAtY(xlgEndRef.current-1, table));\n        }\n        if (lrgEndRef.current !== null){\n            xArray.push(findPipeXAtY(lrgEndRef.current-1, table));\n        } \n        if (medEndRef.current !== null){\n            xArray.push(findPipeXAtY(medEndRef.current-1, table));\n        }\n        if (regEndRef.current !== null){\n            xArray.push(findPipeXAtY(regEndRef.current-1, table));\n        }\n        if (smlEndRef.current !== null){\n            xArray.push(findPipeXAtY(smlEndRef.current-1, table));\n        }\n        if (xsmEndRef.current !== null){\n            xArray.push(findPipeXAtY(xsmEndRef.current-1, table));\n        }\n        \n        xArray.sort(function(a, b){return a-b});\n        \n        if (x2 === x){\n            return 15\n        } else {\n            return x - xArray[xArray.indexOf(x)-1];\n        }\n    }\n\n    function placePerforations(perfs){\n       perfs.forEach(perf => {\n            const perfY=Math.round(perf.starting_depth*624/props.well.total_depth);\n            const perfH=Math.round(perf.ending_depth*624/props.well.total_depth)-perfY;\n            const perfX = findPipeXAtY(perfY+perfH, table);\n            const perfW = findPipeWAtY(perfY+perfH, table);\n            console.log(perfX, perfY, perfW);\n            if (perfH > 0){\n                drawPerfPair(perfX, perfY, perfW);\n            }\n        })\n    }\n\n    function placePlugs(plugs){\n        plugs.forEach(plug => {\n            if (plug.plug_type === \"DV\"){\n                const plugY=plug.set_depth*624/props.well.total_depth;\n                const plugX = findPipeXAtY(plugY, table);\n                const plugW = findPipeWAtY(plugY, table);\n                drawDVPlug(plugX, plugY, plugW);\n            } else {\n                const plugY=plug.starting_depth*624/props.well.total_depth;\n                const plugH=(plug.ending_depth*624/props.well.total_depth)-plugY;\n                if (plugH > 0){\n                    if (plugY+plugH <= xlgEndRef.current){\n                        const plugX=120-90;\n                        const plugW=180;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }\n                    } else if (plugY+plugH <= lrgEndRef.current){\n                        const plugX=120-75;\n                        const plugW=150;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }                    \n                    } else if (plugY+plugH <= medEndRef.current){\n                        const plugX=120-60;\n                        const plugW=120;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else if (plugY+plugH <= regEndRef.current){\n                        const plugX=120-45;\n                        const plugW=90;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else if (plugY+plugH <= smlEndRef.current){\n                        const plugX=120-30;\n                        const plugW=60;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else {\n                        const plugX=120-15;\n                        const plugW=30;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    }\n                }\n            }\n        })\n    }\n\n    return (\n        <div className=\"pdf-canvas-container\" >\n            <canvas id=\"pdfcanvas0\" width=\"240\" height=\"624\" ref={pdfcanvas0Ref}></canvas>\n            <canvas id=\"pdfcanvas1\" width=\"240\" height=\"624\" ref={pdfcanvas1Ref}></canvas>\n            <canvas id=\"pdfcanvas2\" width=\"240\" height=\"624\" ref={pdfcanvas2Ref}></canvas>\n            <canvas id=\"pdfcanvas3\" width=\"240\" height=\"624\" ref={pdfcanvas3Ref} ></canvas>\n        </div>\n    )\n}\n\nexport default PDFDiagram;","import './PDFView.css'\n// import ReactDOM from 'react-dom'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport { withRouter } from 'react-router-dom';\nimport PDFDiagram from './PDFDiagram';\n\nfunction PDFView(props){\n\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    \n    useEffect(() => {\n          \n        const fetchWell = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well');\n            } else {\n                const data = await response.json();                \n                props.setWell(data);               \n            }\n          }\n\n        const fetchWellFeatures = async () => {                      \n            const response = await fetch(`/api/wells/${props.match.params.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n            }\n        }\n        fetchWell();\n        fetchWellFeatures();\n        setTimeout(() => window.print(), 500);\n    }, []);\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    let holeHTML=[];\n    if (wellHoles){\n        // console.log(props.wellHoles);\n        for (let i = 0; i < wellHoles.length; i++) {\n            holeHTML[i] = <div className=\"pdf-well-hole\">\n                <p>Hole Size: {wellHoles[i].hole_size}</p>\n                <p>Starting Depth: {wellHoles[i].starting_depth}</p>\n                <p>Ending Depth: {wellHoles[i].ending_depth}</p>\n            </div>\n        }\n    }\n\n    let casingHTML=[];\n    if (wellCasings){\n        for (let i = 0; i < wellCasings.length; i++) {\n            let gaugeHTML;\n            if (wellCasings[i].gauge === \"xlg\") {\n                gaugeHTML = '13 3/8\"'\n            } else if (wellCasings[i].gauge === \"lrg\") {\n                gaugeHTML = ' 9 5/8\"'\n            } else if (wellCasings[i].gauge === \"med\") {\n                gaugeHTML = ' 8 5/8\"'\n            } else if (wellCasings[i].gauge === \"reg\") {\n                gaugeHTML = ' 7\"'\n            } else if (wellCasings[i].gauge === \"sml\") {\n                gaugeHTML = '5 1/2\"'\n            } else if (wellCasings[i].gauge === \"xsm\") {\n                gaugeHTML = '4 1/2\"'\n            }\n            casingHTML[i] = <div className=\"pdf-well-casing\">\n                <p>Casing Gauge: {gaugeHTML} </p>\n                <p>Casing Weight: {wellCasings[i].casing_weight} </p>\n                <p>Casing Grading: {wellCasings[i].casing_grading} </p>\n                <p>Starting Depth: {wellCasings[i].starting_depth} </p>\n                <p>Ending Depth: {wellCasings[i].ending_depth} </p>\n            </div>\n        }\n    }\n\n    let cementHTML = [];\n    if (wellCements){\n        for (let i=0; i < wellCements.length; i++) {\n            cementHTML[i] = <div className=\"pdf-well-cement\">\n                <p>Cement Type: {wellCements[i].cement_type} </p>\n                <p>Sacks Pumped: {wellCements[i].sacks_pumped}</p>\n                <p>Top of Cement: {wellCements[i].starting_depth}</p>\n                <p>Bottom of Cement: {wellCements[i].ending_depth}</p>\n            </div>\n        }\n    }\n\n    let perfsHTML = [];\n    if (wellPerfs){\n        for (let i=0; i < wellPerfs.length; i++) {\n            perfsHTML[i] = <div className=\"pdf-well-perfs\">\n                <p>Perforation Interval: {wellPerfs[i].perforation_interval} </p>\n                <p>Total Holes: {wellPerfs[i].perforation_total_holes}</p>\n                <p>Starting Depth:{wellPerfs[i].starting_depth}</p>\n                <p>Ending Depth: {wellPerfs[i].ending_depth}</p>\n            </div>\n        }\n    }\n\n    let plugsHTML = [];\n    if (wellPlugs){\n        for (let i=0; i < wellPlugs.length; i++) {\n            if (wellPlugs[i].plug_type === \"CP\") {\n                plugsHTML[i] = <div className=\"pdf-well-plug\">\n                    <p>Plug Type: Cement Plug</p>\n                    <p>Sacks Pumped:{wellPlugs[i].sacks_pumped}</p> \n                    <p>Starting Depth:{wellPlugs[i].starting_depth}</p> \n                    <p>Ending Depth:{wellPlugs[i].ending_depth}</p> \n                </div>\n            } else if (wellPlugs[i].plug_type === \"MP\") {\n                plugsHTML[i] = <div className=\"pdf-well-plug\">\n                    <p>Plug Type: Mechanical Plug</p>\n                    <p>Starting Depth:{wellPlugs[i].starting_depth}</p> \n                    <p>Ending Depth:{wellPlugs[i].ending_depth}</p> \n                </div>            \n            } else if (wellPlugs[i].plug_type === \"DV\") {\n                plugsHTML[i] = <div className=\"pdf-well-plug\">\n                <p>Plug Type: Diverter Valve</p>\n                <p>Set Depth:{wellPlugs[i].set_depth}</p> \n            </div>\n            } \n        }\n    }\n\n    window.onafterprint = (event) => {\n        props.setShowPDF(false);\n      };\n\n\n    if (props.well && wellHoles && wellCasings && wellCements && wellPerfs && wellPlugs){\n    return (\n        <div className=\"PDF-body\">\n            <div className=\"top-row\">\n                <h2>{props.well.lease} {props.well.well_number}</h2>\n                <div><span className=\"bold-span\">API Number: </span>{props.well.API_number}</div>\n                <div><span className=\"bold-span\">Last Updated: </span>{formatDate()}</div>\n            </div>\n            <div className=\"main-block\">\n                <div className=\"text-block\">\n                    <div className=\"row-2\">\n                        <div><span className=\"bold-span\">Company: </span>{props.well.company}</div>\n                        <div><span className=\"bold-span\">Permit Number: </span> {props.well.permit_number}</div>\n                    </div>\n                    <div>\n                        <div><span className=\"bold-span\">Current Status: </span>{props.well.current_status}</div>\n                    </div>\n                    <div className=\"row-3\">\n                        <div><span className=\"bold-span\">Location: </span>{props.well.location}</div>\n                        <div><span className=\"bold-span\">Section: </span>{props.well.section}</div>\n                        <div><span className=\"bold-span\">Survey: </span>{props.well.survey}</div>\n                    </div>\n                    <div className=\"row-4\">\n                        <div><span className=\"bold-span\">County: </span>{props.well.county} &nbsp; &nbsp;</div>\n                        <div><span className=\"bold-span\">State: </span> {props.well.state}</div>\n                    </div>\n                    <div className=\"row-5\">\n                        <div><span className=\"bold-span\">Field: </span>{props.well.field}</div>\n                        <div><span className=\"bold-span\">Initial Formation: </span>{props.well.initial_formation}</div>\n                    </div>\n                    <div className=\"row-5\">\n                        <div><span className=\"bold-span\">Spud Date: </span>{props.well.spud_date}</div>\n                        <div><span className=\"bold-span\">Comp Date: </span>{props.well.completion_date}</div>\n                    </div>\n                    <div className=\"row-6\">\n                        <div><span className=\"bold-span\">Ground Level: </span>{props.well.ground_level}</div>\n                        <div><span className=\"bold-span\">Kelley Bushing: </span>{props.well.kelley_bushing}</div>\n                    </div>\n                    <div className=\"row-6\">\n                        <div><span className=\"bold-span\">Derrick Floor: </span>{props.well.derrick_floor}</div>\n                        <div><span className=\"bold-span\">Total Depth: </span>{props.well.total_depth}</div>\n                    </div>\n                    <div className=\"features\">\n                        <h4> HOLE </h4>\n                        {holeHTML}\n                        <h4> CASING </h4>\n                        {casingHTML}\n                        <h4> CEMENT </h4>\n                        {cementHTML}\n                        <h4> PERFORATIONS </h4>\n                        {perfsHTML}\n                        <h4> PLUGS </h4>\n                        {plugsHTML}\n                    </div>\n                </div>\n                <PDFDiagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} />\n                {/* <img src=\"\" alt=\"\" className=\"static-diagram\"></img> */}\n            </div>\n                \n           \n        </div>\n    )\n} else {\n    return (\n        <>\n        </>\n    )\n}\n}\n\nexport default withRouter(PDFView);","import React from 'react';\nimport { JSCharting } from 'jscharting-react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie';\n\nfunction Chart() {\n    \n    const [choice, setChoice] = useState('month');\n    const [chartData, setChartData] = useState([]);\n\n    \n\n    useEffect(() => {\n      let results=[];\n      async function fetchPricePeriod(){        \n        const response = await fetch(`/api/prices/past_${choice}/`, \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n        });if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.prices.forEach(row => {\n                results.push({x: row.created_at, y: row.price});\n            });\n            results.forEach(row => {\n                let year = row.x.slice(0,4);\n                let month = row.x.slice(5,7);\n                month = parseInt(month);\n                month--;\n                month = month.toString();\n                let day = row.x.slice(8,10);\n                row.x = new Date(year, month, day);\n            })\n            // console.log(results);\n            setChartData(results);    \n        }\n    }\n\n        fetchPricePeriod();\n        return () => {\n          //Do something??\n        };\n    }, [choice]);  //, fetchPricePeriod, results\n    \n    const config = {\n        type: 'line',\n        palette: [\"rgba(184, 156, 45, 0.8)\"],\n        axisToZoom: 'x',\n\n        legend_visible: false,\n        \n        title: {\n            position: 'full',\n            padding: 7,\n            fill: ['#effcff', '#f8edff', 45],\n            opacity: 0.7,\n            boxVisible: true,\n            radius: 7,\n            outline: { color: '#a0d4ef', width: 1 },\n            label: {\n              text: 'WTI Oil Prices',\n              style: {\n                color: '#000',\n                fontSize: '20px',\n                fontFamily: 'Oswald, Tahoma, sans-serif',\n                fontStyle: 'normal',\n                fontWeight: 'normal',\n              },\n              align: 'right',\n            }\n        },\n            \n        yAxis: { scale_minorInterval: 0.25, formatString: 'c' },\n        \n        defaultPoint: {\n            marker: { outline: { width: 2, color: 'white' } },\n        },\n\n        defaultPoint_marker_visible: true,\n\n        xAxis: {          \n            formatString: 'd',\n            scale_type: 'time',\n        },\n        \n        defaultPoint_tooltip: '%xValue<br/>%yValue',\n\n        series: [\n            {\n                points: chartData                \n            }\n        ]\n    };\n\n\n    \n    function handleMonth(){\n        setChoice('month');\n    };\n\n    function handleWeek(){\n        setChoice('week');\n    };\n\n    const divStyle = {\n        maxWidth: '100%',\n        height: '300px',\n        margin: '0px auto',\n    };\n\n    return (\n        <div className=\"chart-div\">\n        <div className=\"chart\" style={divStyle}><JSCharting options={config} mutable={false} /></div>\n        <div className=\"chart-buttons\">\n            <Button className=\"chart-button\" onClick={handleMonth} variant=\"warning\">Past Month</Button>\n            <Button className=\"chart-button\" onClick={handleWeek} variant=\"warning\">Past Week</Button>\n        </div>\n        </div>\n\n    );\n}\n\nexport default Chart;\n\n\n\n/*\n<h3>WTI Oil Prices:</h3> \n    AXIS FORMATTING\n      // JS\n    \n        \n        \n        yAxis: { scale_minorInterval: 20, formatString: 'c' },\n        \n\n        scale_minorInterval: { unit: 'month', multiplier: 4 },\n        defaultPoint_tooltip: '%xValue<br/>%yValue',\n        \n        \n      });\n\n// AXIS ZOOM:\n\n        \n        margin_right: 10,\n        xAxis: {\n          scale_type: 'time',\n          defaultTick_enabled: false,\n          customTicks: [\n            { value_pattern: 'month', label_text: '%min' },\n          ],\n        },\n        legend_visible: false,\n        series: [\n          {\n            type: 'line spline',\n            defaultPoint: {\n              marker: { outline: { width: 2, color: 'white' } },\n            },\n            points: [\n              { x: '04/1/2016', y: 74.78 },\n              { x: '1/1/2019', y: 46.89 },\n            ],\n          },\n        ],\n      });\n\n\n\n\n\n\n*/","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\nimport CMlogo from '../StaticImages/CMlogo.png';\nimport Chart from './Chart';\nimport { useEffect, useState } from 'react';\nimport Collapse from 'react-bootstrap/Collapse'\nimport { NavLink } from 'react-router-dom';\n\n\n\nfunction SplashModal(props) {\n    const handleClose = () => props.setShowSplash(false);\n    const [price, setPrice] = useState(\"$0.00\");\n    const [showCollapse, setShowCollapse] = useState(false);\n    \n    const fetchPrice = async () => {\n      const response = await fetch('/api/prices/latest/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        console.log('Oops, I did it again.');\n      } else {\n        const data = await response.json();\n        setPrice(data.formatted);\n      }\n    }\n    \n    useEffect(() => {\n      fetchPrice();\n    }, []);\n\n    let welcomeHTML;\n    if (props.userName){\n      welcomeHTML=<h2 className=\"fp-h1 text-center\"> Welcome back, {props.userName}! </h2>\n    } else {\n      welcomeHTML=<h2 className=\"fp-h1 text-center\"> Welcome! Please <NavLink onClick={handleClose} to='/login'>log in</NavLink></h2>\n    }\n           \n    return (\n      <>  \n        <Modal id=\"splash-modal\" size=\"lg\" show={props.showSplash} onHide={handleClose}>\n          <Modal.Header  className=\"splash\" closeButton>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            <img className=\"logo\" src={CMlogo} alt=\"Case Manager logo\" />\n            <p className=\"text-center WTI-prompt\"  \n                onClick={() => setShowCollapse(!showCollapse)} \n                aria-controls=\"price-chart\"\n                aria-expanded={showCollapse}> \n                <span className=\"bold-span\">Current WTI Price:</span> {price}\n            </p>\n            <Collapse in={showCollapse}>\n              <div id=\"price-chart\">\n                <Chart />\n              </div>\n            </Collapse>\n            {welcomeHTML}\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">\n            <Button variant=\"warning\" onClick={handleClose}>\n              OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default SplashModal;","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport WellHoles from './WellHoles';\nimport WellCasings from './WellCasings';\nimport WellCements from './WellCements';\nimport WellPerfs from './WellPerfs';\nimport WellPlugs from './WellPlugs';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\nimport DeleteWellModal from './DeleteWellModal';\nimport PlatImageModal from './PlatImageModal';\nimport Diagram from './Diagram';\nimport Button from 'react-bootstrap/esm/Button';\n// import Collapse from 'react-bootstrap/esm/Collapse';\nimport PDFView from './PDFView';\nimport DropdownButton from 'react-bootstrap/esm/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { Route, Switch, useHistory } from 'react-router-dom'; //withRouter, \n\nfunction WellViewToo(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} />\n    const $faCaret = <FontAwesomeIcon icon={faCaretUp} size=\"3x\" />\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight2\" size=\"2x\"/>\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    const [deleteTarget, setDeleteTarget] = useState({});\n    const [showDelete, setShowDelete] = useState(false);\n    const [isClicked, setIsClicked] = useState(false);\n    const [refresh, setRefresh] = useState(0);\n    const [showWellDel, setShowWellDel] = useState(false);\n    const [showImage, setShowImage] = useState(false);\n    const [showPDF, setShowPDF] = useState(false);\n    // const [showCollapse, setShowCollapse] = useState(false);\n    let wellHolesHTML;\n    let wellCasingsHTML;\n    let wellCementsHTML;\n    let wellPerfsHTML;\n    let wellPlugsHTML;\n    // let marginStyle={marginTop: \"101vh\"}\n    /*\n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    */\n    \n    // console.log(props);\n    function displayPopup() {\n        setShowImage(true);\n        // const $popup = document.getElementById('popup');\n        // if ($popup.style.display === 'none'){\n        //     $popup.style.display = 'block';\n        // } else {\n        //     $popup.style.display = 'none';\n        // }\n    }\n    \n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        props.setWell({...props.well, [name]: value});\n    }\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    useEffect(() => {\n          \n        const fetchWell = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well');\n            } else {\n                const data = await response.json();                \n                props.setWell(data);               \n            }\n          }\n\n\n        const fetchWellFeatures = async () => {\n                      \n            const response = await fetch(`/api/wells/${props.match.params.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n            }\n        }\n        \n        fetchWell();\n        fetchWellFeatures();\n        setShowDelete(false);        \n    }, [refresh, showPDF]);\n\n    useEffect(() => {\n        if (showDelete === false && isClicked === true) {\n            setShowDelete(true);\n        } else {\n            setShowDelete(false)\n        }\n    },[isClicked]);//showDelete\n\n    async function handleBlur(event){\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        // const {propertyName, value} = event.target;\n        // console.log(event.target);\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/${props.match.params.id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating well information');\n        }\n        // const data = await response.json();\n        // console.log(propertyName, value);\n        if (propertyName === \"total_depth\"){\n            setRefresh(Math.random());\n        }\n\n    }\n\n    const handleHoleChange = (event) => {\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        let index = wellHoles.findIndex((hole) => hole.id === parseInt(id));\n        let test = [...wellHoles]\n        test[index][propertyName] = value;\n        setWellHoles(test);\n    }\n\n    async function handleHoleBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        console.log(event.target);\n        console.log(event.target.id);\n        console.log(id)\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/holes/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating hole information');\n        }\n        // const data = await response.json();\n    }\n    \n    if (wellHoles === []){\n        wellHolesHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    } else {\n        wellHolesHTML = wellHoles.map(hole => <WellHoles key={hole.id+1000} {...hole} setWellHoles={setWellHoles} handleHoleChange={handleHoleChange} handleHoleBlur={handleHoleBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleHoleKeyPress={handleHoleKeyPress}/>)        \n    }\n\n    const handleCasingChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCasings.findIndex(casing => casing.id === parseInt(id));\n        let test = [...wellCasings]\n        test[index][name] = value;\n        setWellCasings(test);\n    }\n\n    async function handleCasingBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/casings/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating casing information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellCasings !== []){\n        wellCasingsHTML = wellCasings.map(casing => <WellCasings key={casing.id+2000} {...casing} handleCasingChange={handleCasingChange} handleCasingBlur={handleCasingBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleCasingKeyPress={handleCasingKeyPress}/>)\n    } else {\n        wellCasingsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handleCementChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCements.findIndex(cement => cement.id === parseInt(id));\n        let test = [...wellCements]\n        test[index][name] = value;\n        setWellCements(test);\n    }\n\n    async function handleCementBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/cements/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating cement information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellCements !== []){\n        wellCementsHTML = wellCements.map(cement => <WellCements key={cement.id+3000} {...cement} handleCementChange={handleCementChange} handleCementBlur={handleCementBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleCementKeyPress={handleCementKeyPress}/>)\n    } else {\n        wellCementsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePerforationChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPerfs.findIndex(perf => perf.id === parseInt(id));\n        let test = [...wellPerfs]\n        test[index][name] = value;\n        setWellPerfs(test);\n    }\n\n    async function handlePerforationBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/perforations/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating perforation information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellPerfs !== []){\n        wellPerfsHTML = wellPerfs.map(perf => <WellPerfs key={perf.id+4000} {...perf} handlePerforationChange={handlePerforationChange} handlePerforationBlur={handlePerforationBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handlePerfKeyPress={handlePerfKeyPress}/>)\n    } else {\n        wellPerfsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePlugChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPlugs.findIndex(plug => plug.id === parseInt(id));\n        let test = [...wellPlugs]\n        test[index][name] = value;\n        setWellPlugs(test);\n    }\n\n    async function handlePlugBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/plugs/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating plug information');\n        }\n        // const data = await response.json();\n    }\n\n\n    if (wellPlugs !== []){\n        wellPlugsHTML = wellPlugs.map(plug => <WellPlugs key={plug.id+5000} {...plug} handlePlugChange={handlePlugChange} handlePlugBlur={handlePlugBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handlePlugKeyPress={handlePlugKeyPress}/>)\n    } else {\n        wellPlugsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    function handleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleHoleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleHoleBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleCasingKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleCasingBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleCementKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleCementBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handlePerfKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handlePerforationBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handlePlugKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handlePlugBlur(e)\n            e.target.blur();\n\n        }\n    }\n\n\n    const createNewHole = async () => {\n        const newHole = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            hole_size: ''\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newHole)\n        };\n        const response = await fetch('/api/wells/holes/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellHoles([...wellHoles, newHole]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCasing = async () => {\n        const newCasing = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            casing_weight: '',\n            casing_grading: '',\n            gauge: 'sml',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCasing)\n        };\n        const response = await fetch('/api/wells/casings/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellCasings([...wellCasings, newCasing]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCement = async () => {\n        const newCement = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCement)\n        };\n        const response = await fetch('/api/wells/cements/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellCements([...wellCements, newCement]);\n            setRefresh(Math.random())\n        }\n    };\n    \n    const createNewPerforation = async () => {\n        const newPerforation = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            perforation_interval: '',\n            perforation_total_holes: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPerforation)\n        };\n        const response = await fetch('/api/wells/perforations/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellPerfs([...wellPerfs, newPerforation]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewPlug = async () => {\n        const newPlug = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPlug)\n        };\n        const response = await fetch('/api/wells/plugs/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellPlugs([...wellPlugs, newPlug]);\n            setRefresh(Math.random())\n        }\n    };\n\n    function handleDeleteWell(event){\n        setShowWellDel(true);\n    }\n\n    function handleBack(){\n        props.setShowSplash(false)\n        props.history.push('');\n    }\n\n    function handleView(){\n        setShowPDF(true);\n        // props.history.push(`/pdf/${props.match.params.id}`);\n     \n\n        // async function fetchPDF(){        \n        //   const response = await fetch(`/api/pdf/`, \n        //     {headers: {\n        //             'Content-Type': 'application/json',\n        //             'X-CSRFToken': Cookies.get('csrftoken'),\n        //         }\n        //     });\n        //     if(!response){\n        //         console.log(response);\n        //     } else {\n        //         const data = await response.json();\n        //         console.log(data);\n        //     }\n           \n        // }\n        // fetchPDF();\n\n        // <Link to=\"/files/myfile.pdf\" target=\"_blank\" download>Download</Link>\n    }\n\n    let wellInfoHTML;\n    // style={marginStyle}\n    if (props.well !== null) {\n        wellInfoHTML = \n        <div className=\"well-info-grid\" >\n                <div className=\"well-view-grid-top\">\n                    <div className=\"left-group\"> \n                        <h2>{props.well.lease} {props.well.well_number}  </h2>\n                        <DropdownButton id=\"dropdown-basic-button\" title=\"Actions\" autoclose=\"true\">\n                            <Dropdown.Item id=\"dd-item-1\" onClick={handleBack} >Back to Well Selection</Dropdown.Item>\n                            <Dropdown.Item id=\"dd-item-2\" onClick={displayPopup} >Show/Upload Plat</Dropdown.Item>\n                            <Dropdown.Item id=\"dd-item-3\" onClick={handleView}>Print/PDF View</Dropdown.Item>\n                            <Dropdown.Item id=\"dd-item-4\" onClick={handleDeleteWell}>Delete Well</Dropdown.Item>\n                        </DropdownButton>\n                    </div>\n                    \n                    <div className=\"right-group\">\n                        \n                        <span className=\"bold-span\">Last Updated: </span>{formatDate()}\n                \n                    </div>                    \n                    \n                </div>\n                <div className=\"well-table-id row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">API Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"API_number\" className=\"input-hidden\" value={props.well.API_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Company: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"company\" className=\"input-hidden\" value={props.well.company} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Permit Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"permit_number\"className=\"input-hidden\" value={props.well.permit_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Current Status: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"current_status\" className=\"input-hidden\" value={props.well.current_status} />\n                    </div>\n                </div>\n                <div className=\"well-table-location row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Location: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"location\" className=\"input-hidden\" value={props.well.location} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Section: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"section\" className=\"input-hidden\" value={props.well.section} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Survey: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"survey\" className=\"input-hidden\" value={props.well.survey} />\n                    </div>\n                    <div className=\"col-lg-3 county-state\">\n                        <div>\n                            <span className=\"bold-span\">County: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"county\" className=\"input-hidden county\" value={props.well.county} />\n                        </div>\n                        <div>\n                            <span className=\"bold-span\">State: </span> <input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"state\" className=\"input-hidden state\" value={props.well.state} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"well-table-field row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Field: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"field\" className=\"input-hidden\" value={props.well.field} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Initial Formation: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"initial_formation\" className=\"input-hidden\" value={props.well.initial_formation} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Spud Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"spud_date\" className=\"input-hidden\" value={props.well.spud_date} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Comp Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"completion_date\" className=\"input-hidden\" value={props.well.completion_date} />\n                    </div>\n                </div>\n                <div className=\"well-table-depths row mb-3\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Ground Level: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"ground_level\" className=\"input-hidden\" value={props.well.ground_level} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Kelley Bushing: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"kelley_bushing\" className=\"input-hidden\" value={props.well.kelley_bushing} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Derrick Floor: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"derrick_floor\" className=\"input-hidden\" value={props.well.derrick_floor} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Total Depth: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"total_depth\" className=\"input-hidden\" value={props.well.total_depth} />\n                    </div>\n                </div>\n                <div className=\"labels row\">\n                    <div className=\"hole-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label1\"> HOLE</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellHolesHTML}\n                            <button className=\"new-feature-button\" onClick={createNewHole}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"casing-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label2\">CASING</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCasingsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCasing}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"cement-col col\">\n                        <div className=\"showme\" >\n                            <p className=\"label3\">CEMENT</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCementsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCement}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"perf-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label4\">PERFORATIONS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPerfsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPerforation}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"plug-col col\">\n                        <div className=\"col showme\">\n                            <p className=\"label5\">PLUGS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPlugsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPlug}> Add New</button>\n                        </div>\n                    </div>\n                </div>\n            </div>;\n    } else {\n        wellInfoHTML = <div>Loading...<br />If this screen does not go away, you may not have permission to view this well.</div>;\n    }\n\n    // let diagramHTML;\n    // if (window.innerWidth < 768) {\n    //     diagramHTML = \n    //     <>\n    //     <p onClick={() => setShowCollapse(!showCollapse)} \n    //     area-controls=\"diagram-collapse\"\n    //     aria-expanded={showCollapse}>\n    //         Show/Hide</p>\n    //     <Collapse in={showCollapse} >\n    //     <div className=\"diagram-collapse\">\n    //             <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh} />\n    //     </div>\n    //     </Collapse>\n    //     </>\n    // } else {\n    //     diagramHTML =  <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh} />\n    // }\n        \n    \n    // useEffect(() => {\n    //     if (marginStyle==='margin-top: \"101vh\"'){\n    //         marginStyle='margin-top: \"1vh\"';\n    //     } else {\n    //         marginStyle='margin-top: \"101vh\"';\n    //     }        \n    // }, [showCollapse])\n\n    // <PDFView well={props.well} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} wellHoles={wellHoles} />\n    if (showPDF){\n        return <PDFView well={props.well} setWell={props.setWell} setShowPDF={setShowPDF}/>\n    } else {\n        return (\n            <>\n            <div className=\"well-container-grid\" id=\"top\">\n                {wellInfoHTML}\n                <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh} />\n            {/* {diagramHTML} */}\n            <a href=\"#top\" className=\"float\" id=\"float\">\n                    <i className=\"my-float\">{$faCaret}</i>\n                </a>\n            </div>\n                <DeleteConfirmationModal deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} showDelete={showDelete} setShowDelete={setShowDelete} history={props.history} setRefresh={setRefresh} setIsClicked={setIsClicked}/>\n                <DeleteWellModal history={props.history} setRefresh={setRefresh} showWellDel={showWellDel} setShowWellDel={setShowWellDel}/>\n                <PlatImageModal well={props.well} setWell={props.setWell} showImage={showImage} setShowImage={setShowImage} history={props.history} refresh={refresh} setRefresh={setRefresh}/>                            \n            </>\n        );\n    }\n};\n\nexport default withRouter(WellViewToo)\n\n\n\n/*\n<Switch>\n                    <Route path='/pdf' >\n                        <PDFView well={props.well} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} wellHoles={wellHoles} />            \n                    </Route>\n                </Switch>\n\n<Collapse in={showCollapse}>\n        <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh} />\n</Collapse>\n\n\n<div className=\"well-info\">\n    <h2>{props.well.lease} {props.well.well_number}</h2>\n    <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    I'm a well! \n</div>\n\n\n\nlet currentTarget;\n\n\n\n\n// add when widget loads\n\n... and finally some housekeeping\n\n// remove listener when destroying the widget\nwindow.removeEventListener(\"click\", clickOut);\n\n\n\n\n    // useEffect(() => {\n    //     // setWellHoles(wellFeatures.holes);\n    //     // setWellCasings(wellFeatures.casings);\n    //     // setWellCements(wellFeatures.cements);\n    //     // setWellPerfs(wellFeatures.perforations);\n    //     // setWellPlugs(wellFeatures.plugs);\n    // }, [wellFeatures]);\n\n    //CHANGE TO NOT USE INNERHTML!\n    // function editField(event){\n    //     if (!selected){\n    //         console.log(event);\n    //         id = event.target.id;\n    //         currentTarget = id;\n    //         value = event.target.attributes.value.value;\n    //         $active = document.getElementById(id)\n    //         console.log(value);\n    //         $active.innerHTML = `<input type='text' value=${value} />`;\n    //         window.addEventListener(\"click\", clickOut);\n    //         console.log($active);\n    //         selected = true;\n    //     }\n    // }\n\n    // const clickOut = (event) => {\n    //     if (!event.target.id.includes(currentTarget)) {\n    //         selected = false;\n    //         window.removeEventListener(\"click\", clickOut);\n    //         $active.innerHTML = `<span id=${id} value=${value} onClick={editField}>${value}</span>`\n    //     }\n    // };\n\nfetch(‘https://jsonplaceholder.typicode.com/todos/1', {\nmethod: ‘PATCH’,\nbody: JSON.stringify({\ncompleted: true\n}),\nheaders: {\n“Content-type”: “application/json; charset=UTF-8”\n}\n})\n.then(response => response.json())\n.then(json => console.log(json))\n\n\n\nasync function handleBlur(event){\n    event.preventDefault();\n    const options = {\n        method: 'PATCH',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(name: value)\n    };\n    const response = await fetch(``/api/wells/${props.match.params.id}/`, options);\n    const data = await response.json();\n    console.log('data', data);\n}\n\n\n\nconst newHole = async () => {\n    const newHole = {\n        well: props.match.params.id,\n        starting_depth: 0,\n        ending_depth: 0,\n        hole_size: ''\n    }\n    const options = {\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(newHole)\n    };\n    const response = await fetch('/api/wells/holes/', options);\n    if(!response){\n        console.log(response);\n    } else {\n        const data = await response.json();\n        setWellHoles([...wellHoles, newHole]);\n    }\n};\n\n<span className=\"icon\" onClick={displayPopup}>{$faImage}</span>\n<Button className=\"btn back-button\" variant=\"warning\" id=\"back-button\" onClick={handleView}>Print View</Button>\n<Button className=\"btn back-button\" variant=\"warning\" id=\"back-button\" onClick={handleBack}> well selection </Button>\n\n\n<Button className=\"btn back-button\" variant=\"warning\" id=\"back-button\" onClick={handleView}>Print View</Button>\n<Button className=\"btn back-button\" variant=\"warning\" id=\"back-button\" onClick={handleBack}> well selection </Button>\n\n*/","import { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom'; //withRouter, \nimport Cookies from 'js-cookie'\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport './App.css';\nimport WelcomePage from './components/WelcomePage';\nimport WellView from './components/WellView';\nimport NewWellModal from './components/NewWellModal';\n//FOR TESTING, BELOW\n// import Diagram from './components/Diagram';\nimport Test from './components/Test';\nimport PDFView from './components/PDFView';\nimport SplashModal from './components/SplashModal';\nimport WellViewToo from './components/WellViewToo';\n\n\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [isAuth, setIsAuth] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const history = useHistory();\n  const [well, setWell] = useState(null);\n  const [showNew, setShowNew] = useState(false);\n  const [showSplash, setShowSplash] = useState(true);\n\n  useEffect(()=> {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        setIsAuth(false);\n        if (history.location.pathname !== '/register') {\n          history.push('/login');\n        }\n      } else {\n        const data = await response.json();\n        const ID=data.pk;\n        const username=data.username;\n        setIsAuth(true);\n        setUserID(ID);\n        setUserName(username);\n      }\n    }\n    checkAuth();\n  }, [isAuth, history]) //history, \n\n  if (isAuth === null){\n    return <Spinner animation=\"grow\" variant='primary' />\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/register' >\n          <RegistrationForm isAuth={isAuth} setIsAuth={setIsAuth} history={history}/>\n        </Route>\n        <Route path='/login'>\n            <LoginForm  isAuth={isAuth} setIsAuth={setIsAuth} history={history}/>\n            <SplashModal userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/>\n        </Route>       \n        <Route path='/wellinfo/:id'>\n            <WellViewToo well={well} setWell={setWell} userID={userID} setUserID={setUserID} history={history} setShowSplash={setShowSplash}/>\n        </Route>\n\n        {/* <Route path='/welltest/:id'>\n            <WellViewToo well={well} setWell={setWell} userID={userID} setUserID={setUserID} history={history} setShowSplash={setShowSplash}/>\n        </Route> */}\n        \n\n        {/* <Route path='/pdf'> */}\n            {/* <Test userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/> */}\n            {/* {<PDFView  /> } well={props.well} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} wellHoles={wellHoles} */}\n        {/* </Route>           */}\n        {/* <Route path='/pdf/:id' >\n          <PDFView history={history} well={well} setWell={setWell} userID={userID} setUserID={setUserID} setShowSplash={setShowSplash}/>            \n        </Route> */}\n\n        {/* <Route path='/chart'>\n            <Chart />\n        </Route>           \n        \n        */}\n       \n        {/* <Route path='/wellslist'>\n            <WellList isAuth={isAuth} history={history} well={well} setWell={setWell}/>\n        </Route>        */}\n        \n        <Route path=''>\n          <WelcomePage isAuth={isAuth} setIsAuth={setIsAuth} userID={userID} history={history} userName={userName} well={well} setWell={setWell} setShowNew={setShowNew} showNew={showNew}/>\n          <SplashModal userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/>\n          <NewWellModal setShowNew={setShowNew} showNew={showNew} history={history} userID={userID} setUserID={setUserID} setWell={setWell}/>\n        </Route>        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
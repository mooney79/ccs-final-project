{"version":3,"sources":["components/LoginForm.js","components/RegistrationForm.js","components/WellItem.js","components/WellList.js","components/WelcomePage.js","components/WellHoles.js","components/WellCasings.js","components/WellCements.js","components/WellPerfs.js","components/WellPlugs.js","components/DeleteDetails.js","components/DeleteConfirmationModal.js","components/DeleteWellModal.js","components/PlatImageModal.js","StaticImages/cement-texture.jpeg","components/Diagram.js","components/WellView.js","components/NewWellModal.js","StaticImages/CMlogo.png","components/Chart.js","components/SplashModal.js","components/WellViewToo.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","username","password","userLog","setUserLog","handleInput","event","target","name","value","prevState","handleError","err","console","warn","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","log","json","data","set","key","setIsAuth","isAuth","to","className","onSubmit","htmlFor","type","id","placeholder","onChange","required","password1","style","color","textDecoration","cursor","onClick","history","push","RegistrationForm","email","password2","userReg","setUserReg","error","setError","WellItem","idString","useHistory","fetchWell","ok","setWell","lease","well_number","API_number","WellList","list","wellList","setWellList","useEffect","fetchWells","map","well","Spinner","animation","variant","setShowNew","showNew","WelcomePage","logHTML","handleLogout","user","remove","WellHoles","$faTrashAlt","icon","faTrashAlt","inverse","pull","handleHoleChange","onBlur","handleHoleBlur","onKeyPress","e","handleHoleKeyPress","hole_size","starting_depth","ending_depth","$delTarget","currentTarget","parentElement","getClass","attributes","class","slice","length","getID","children","setDeleteTarget","element","setIsClicked","WellCasings","gaugeHTML","handleCasingChange","handleCasingBlur","defaultValue","gauge","handleCasingKeyPress","casing_weight","casing_grading","WellCements","handleCementChange","handleCementBlur","handleCementKeyPress","cement_type","sacks_pumped","WellPerfs","handlePerforationChange","handlePerforationBlur","handlePerfKeyPress","perforation_interval","perforation_total_holes","WellPlugs","plugHTML","plugChoiceHTML","handleDelete","plug_type","handlePlugChange","handlePlugBlur","handlePlugKeyPress","set_depth","DeleteDetails","DeleteConfirmationModal","deleteDetails","setDeleteDetails","handleClose","setShowDelete","deleteTarget","delHTML","urlPicker","setRefresh","Math","random","fetchDeleteDetails","showDelete","Object","entries","pair","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","DeleteWellModal","setShowWellDel","urlId","location","pathname","showWellDel","imageHTML","source","setShowImage","preview","setPreview","plat_image","src","alt","file","files","reader","FileReader","onloadend","result","readAsDataURL","showImage","formData","FormData","append","Diagram","canvas0Ref","useRef","canvas1Ref","canvas2Ref","canvas3Ref","ctx0Ref","ctx1Ref","ctx2Ref","ctx3Ref","xlgEndRef","lrgEndRef","medEndRef","regEndRef","smlEndRef","xsmEndRef","table","setTable","drawPipe","x","y","w","h","size","next","current","beginPath","lineWidth","strokestyle","fillStyle","fillRect","moveTo","lineTo","stroke","closePath","drawCasingSet","fill","drawEachPerf","x2","y2","strokeStyle","drawCementPlug","drawMechPlug","findPipeXAtY","findPipeWAtY","canvas0","ctx0","getContext","width","window","innerWidth","height","innerHeight","addEventListener","canvas1","ctx1","ptrn","img","Image","dirt","canvas2","ctx2","ctx3","clearRect","casings","aIndex","cements","casingArray","cementArray","forEach","casing","xlgEnd","round","total_depth","depth","undefined","lrgEnd","medEnd","regEnd","smlEnd","xsmEnd","cement","cementXTop","cementXBottom","cementY","cementBottom","cementW","TopY","BottomY","TopX","BottomX","W","idArray","i","indexOf","pop","findA","wellCasings","wellCements","casingA","casingX","casingY","casingW","casingH","includes","drawCasings","onload","createPattern","deltaX","cementH","cementX","cementX2","xArray","sort","b","findNextPipeXAtY","wellPlugs","plug","plugY","plugX","plugW","plugH","wellPerfs","perf","perfY","perfH","perfX","perfW","topLine","font","fillText","midLine","botLine","setLineDash","drawDepthGuides","refresh","ref","wellHolesHTML","wellCasingsHTML","wellCementsHTML","wellPerfsHTML","wellPlugsHTML","$faImage","faImage","wellFeatures","setWellFeatures","wellHoles","setWellHoles","setWellCasings","setWellCements","setWellPerfs","setWellPlugs","isClicked","handleChange","handleBlur","propertyName","match","params","fetchWellFeatures","holes","perforations","plugs","index","findIndex","hole","parseInt","test","handleKeyPress","blur","wellInfoHTML","createNewHole","newHole","createNewCasing","newCasing","createNewCement","newCement","createNewPerforation","newPerforation","createNewPlug","newPlug","setShowSplash","goBack","rawDate","updated_at","year","formatDate","company","permit_number","current_status","section","survey","county","state","field","initial_formation","spud_date","completion_date","ground_level","kelley_bushing","derrick_floor","NewWellModal","handleSave","newWell","setNewWell","Chart","choice","setChoice","chartData","setChartData","results","prices","row","created_at","price","month","toString","day","Date","fetchPricePeriod","config","palette","axisToZoom","legend_visible","title","position","padding","opacity","boxVisible","radius","outline","label","text","fontSize","fontFamily","fontStyle","fontWeight","align","yAxis","scale_minorInterval","formatString","defaultPoint","marker","defaultPoint_marker_visible","xAxis","scale_type","defaultPoint_tooltip","series","points","maxWidth","margin","mutable","SplashModal","welcomeHTML","setPrice","showCollapse","setShowCollapse","fetchPrice","formatted","userName","showSplash","CMlogo","Collapse","in","App","setUserName","userID","setUserID","checkAuth","ID","pk","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0300bd1d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction LoginForm(props){\n    const [userLog, setUserLog] = useState({\n        username: '',\n        password: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserLog(prevState => ({   //prevState is a variable name for the previous\n            ...prevState,         //value of the state\n            [name]:value,\n        }))\n    }\n\n    function handleError(err){\n        console.warn(err);\n    }\n    \n    async function handleSubmit(event) {\n        event.preventDefault();\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(userLog)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token ${data.key}`); // This is bad mang.\n            props.setIsAuth(true);\n            // props.history.push('/profile');  // This pushes the browser to the next area\n        }\n    \n    }\n    if (props.isAuth){  //Example of a redirect, but kind of balls user-friendly-wise.  Instead, replace login button with logout button\n        return <Redirect to=\"/\" />\n    } //Could flip it to protect \"profileForm\" and redirect them to login\n\n    function directToRegister(){\n        props.history.push('/register');\n    }\n\n    const buttonStyle = {\n        color: 'blue',\n        textDecoration: 'underline',\n        cursor: 'pointer',\n    }\n\n    return(\n        <div className=\"form-container login-page\">\n        <form className=\"mt-3 col-10 col-md-5 login-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userLog.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={userLog.password1}\n                />\n            </div>\n            <button type=\"submit\" className=\"btn btn-warning mt-1\" >Log in</button>            \n            <p className=\"text-center\">Not  a member?  Click <span className=\"link-button\" style={buttonStyle} onClick={directToRegister}>here</span> to register.</p>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default withRouter(LoginForm)","import { useState } from 'react'\nimport Cookies from 'js-cookie'\n\nfunction RegistrationForm(props){\n    const [userReg, setUserReg] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUserReg(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n\n    const [error, setError] = useState(null);\n\n    function handleError(err){\n        console.warn(err);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(userReg.password1 !== userReg.password2){\n            setError('Passwords do not match!');\n        } else {\n            //fire off registration process\n            const options = {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                },\n                body: JSON.stringify(userReg)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response){\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setIsAuth(true);\n            }\n        }\n    }\n\n    const buttonStyle = {\n        color: 'blue',\n        textDecoration: 'underline',\n        cursor: 'pointer',\n    }\n    \n    function directToLogin(){\n        props.history.push('/login');\n    }\n\n\n    return(\n        <div className=\"form-container register-page\">\n        <form className=\"mt-3 col-10 col-md-5 register-form\" onSubmit={handleSubmit} >\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='username'>Username</label>\n                <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={userReg.username}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='email'>Email address</label>\n                <input type=\"email\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter E-mail\"\n                    onChange={handleInput}\n                    required\n                    name='email'\n                    value={userReg.email}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password1'>Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password1\"\n                    placeholder=\"Enter Password\"\n                    onChange={handleInput}\n                    required\n                    name='password1'\n                    value={userReg.password1}\n                />\n            </div>\n            <div className=\"form-group text-left mb-3\">\n                <label htmlFor='password2'>Confirm Password:</label>\n                <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password2\"\n                    placeholder=\"Re-enter password\"\n                    onChange={handleInput}\n                    required\n                    name='password2'\n                    value={userReg.password2}\n                />\n                {error &&<span className=\"text-danger\"> {error}</span>}\n            </div>\n            <div className='split-register'>\n            <p>Already have an account? <span className=\"link-button\" style={buttonStyle} onClick={directToLogin}>Log in!</span> </p>\n            <button type=\"submit\" className=\"btn btn-warning mt-3\" >Register</button>\n            </div>\n        </form>\n        \n        </div>\n    )\n\n}\n\nexport default RegistrationForm","import { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nfunction WellItem(props) {\n    const id = props.id;\n    const idString = `${id}`;\n    const history = useHistory();\n\n    const fetchWell = async () => {\n      const response = await fetch(`/api/wells/${id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n    function handleClick(event){\n      // const wellID = event.target.parentElement.id;\n      fetchWell();\n    }\n\n  return(\n    <li className=\"ListItem\" id={idString}>\n        <p className=\"list-p\">{props.lease} {props.well_number}</p> <p><span className=\"bold-span\">API:</span> {props.API_number} </p> <button onClick={handleClick}className=\"li-button\">Select</button>\n    </li>\n  )\n  }\n\nexport default WellItem;\n","import { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport WellItem from './WellItem';\nimport Spinner from 'react-bootstrap/esm/Spinner';\n\nfunction WellList(props){\n\n    const [wellList, setWellList] = useState([]);\n    \n\n    useEffect(()=> {\n        const fetchWells = async () => {\n        const response = await fetch('/api/wells/user/', \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n                }\n        });\n        if (!response.ok) {\n            console.log('Error fetching wells');\n        } else {\n            const data = await response.json();\n            setWellList(data);\n        }\n        }\n        fetchWells();\n    }, []);\n\n    let list;\n    if (wellList !== []){\n        list = wellList.map(well => <WellItem key={well.id+9000} {...well} wellList={wellList} setWellList={setWellList} setWell={props.setWell} />)\n    } else {\n        list = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n    return (\n        <div className=\"well-list-container\">\n            <p><span className=\"bold-span\"> Your wells: </span></p>\n            <ul className=\"well-ul\">\n                {list}\n                <li className=\"ListItem\" id=\"new-well\">\n                    <button className=\"list-p li-button\" onClick={() => {console.log(\"I fired!\"); props.setShowNew(true);console.log(props.showNew)}}> Add New Well</button>\n                </li>\n            </ul>\n        </div>\n    )    \n}\n\nexport default WellList","// import { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie'\nimport WellList from './WellList';\n// import Chart from './Chart';\n\nfunction WelcomePage(props){\n\n    const handleLogout = async () => {\n        const options = {\n          method: 'POST',\n          headers:{\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(props.user)\n        };\n    const response = await fetch('/rest-auth/logout/', options)\n      if(!response){\n          console.log(response);\n      } else {\n        Cookies.remove('Authorization');\n        Cookies.remove('SessionID');\n        props.setIsAuth(false);\n      }\n    };\n\n    let logHTML;\n    // let IDtestHTML;\n    if(props.isAuth){\n        // IDtestHTML = <p>User ID: {props.userID}</p>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={handleLogout}>Logout</div>\n    } else {\n        // IDtestHTML = <></>\n        logHTML = <div className=\"welcome-page-log-button\" onClick={() => props.history.push('/login')}>Login</div>\n    }\n\n\n    return (\n        <div className=\"welcome-container col-10 col-md-5\">           \n            <WellList setWell={props.setWell} well={props.well} setShowNew={props.setShowNew} showNew={props.showNew}/> \n            {logHTML}            \n        </div>\n    )\n}\n\nexport default WelcomePage","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellHoles(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-hole\">\n            <p>Hole Size:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} onKeyPress={(e) => props.handleHoleKeyPress(e)} name=\"hole_size\" className=\"input-hidden\" value={props.hole_size} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} onKeyPress={(e) => props.handleHoleKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleHoleChange} onBlur={props.handleHoleBlur} onKeyPress={(e) => props.handleHoleKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <br />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellHoles;\n//<i class=\"far fa-trash-alt\"></i>\n//So... \n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellCasings(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n    \n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    \n    let gaugeHTML;\n\n    gaugeHTML = \n    <select id={props.id} onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} name=\"gauge\" className=\"input-hidden\" defaultValue={props.gauge} >\n        <option value=\"xlg\" >13 3/8\"</option>\n        <option value=\"lrg\" >9 5/8\"</option>\n        <option value=\"med\" >8 5/8\"</option>\n        <option value=\"reg\" >7\"</option>\n        <option value=\"sml\" >5 1/2\"</option>\n        <option value=\"xsm\" >4 1/2\"</option>\n    </select>\n\n    return(\n        <div className=\"well-casing\">\n            <p>Casing Gauge:</p> {gaugeHTML}\n            <p>Casing Weight:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} onKeyPress={(e) => props.handleCasingKeyPress(e)} name=\"casing_weight\" className=\"input-hidden\" value={props.casing_weight} />\n            <p>Casing Grading:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} onKeyPress={(e) => props.handleCasingKeyPress(e)} name=\"casing_grading\" className=\"input-hidden\" value={props.casing_grading} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} onKeyPress={(e) => props.handleCasingKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handleCasingChange} onBlur={props.handleCasingBlur} onKeyPress={(e) => props.handleCasingKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            \n            <br />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellCasings;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellCements(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\" />\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n\n    return(\n        <div className=\"well-cement\">\n        <p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} onKeyPress={(e) => props.handleCementKeyPress(e)} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />\n        <p>Sacks Pumped: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} onKeyPress={(e) => props.handleCementKeyPress(e)} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Top of Cement: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} onKeyPress={(e) => props.handleCementKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Bottom of Cement: </p><input id={props.id} type=\"text\" onChange={props.handleCementChange} onBlur={props.handleCementBlur} onKeyPress={(e) => props.handleCementKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <br />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n    </div>\n    )\n}\n\nexport default WellCements;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nfunction WellPerfs(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\" />\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    return(\n        <div className=\"well-perfs\">\n            <p>Perforation Interval:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} onKeyPress={(e) => props.handlePerfKeyPress(e)} name=\"perforation_interval\" className=\"input-hidden\" value={props.perforation_interval} />\n            <p>Total Holes:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} onKeyPress={(e) => props.handlePerfKeyPress(e)} name=\"perforation_total_holes\" className=\"input-hidden\" value={props.perforation_total_holes} />\n            <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} onKeyPress={(e) => props.handlePerfKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n            <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} onKeyPress={(e) => props.handlePerfKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n            <br />\n            <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n            <hr></hr>\n        </div>\n    )\n}\n\nexport default WellPerfs;\n\n/*\n<input id={props.id} type=\"text\" onChange={props.handlePerforationChange} onBlur={props.handlePerforationBlur} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n\nending_depth: 8404\nid: 1\nperforation_interval: \"15'\"\nperforation_total_holes: \"250\"\nstarting_depth: 8076\nwell: 1\n\n\n*/","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction WellPlugs(props){\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight\"/>\n    function handleDelete(event){\n        const $delTarget = event.currentTarget.parentElement.parentElement;\n        let getClass = $delTarget.attributes.class.value;\n        getClass = getClass.slice(5, getClass.length);\n        let getID = $delTarget.children[1].id;\n        props.setDeleteTarget({'id': getID, element: getClass});\n        props.setIsClicked(true);\n    }   \n    let plugHTML;\n    let plugChoiceHTML;  \n    \n    if(props.plug_type === 'CP') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Sacks Pumped:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"sacks_pumped\" className=\"input-hidden\" value={props.sacks_pumped} />\n        <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <br />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    } else if (props.plug_type === 'MP') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Starting Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"starting_depth\" className=\"input-hidden\" value={props.starting_depth} />\n        <p>Ending Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"ending_depth\" className=\"input-hidden\" value={props.ending_depth} />\n        <br />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    } else if (props.plug_type === 'DV') {\n        plugHTML = <div className=\"well-plug\">\n            {plugChoiceHTML}\n        <p>Set Depth:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} onKeyPress={(e) => props.handlePlugKeyPress(e)} name=\"set_depth\" className=\"input-hidden\" value={props.set_depth} />\n        <br />\n        <p className=\"trash-icon\"><span className=\"icon\" onClick={handleDelete}>{$faTrashAlt}</span></p>\n        <hr></hr>\n        </div>\n    }\n\n    return(\n        <>\n        <select id={props.id} onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"plug_type\" className=\"input-hidden\" defaultValue={props.plug_type} >\n            <option value=\"CP\" >Cement Plug</option>\n            <option value=\"MP\" >Mechanical Plug</option>\n            <option value=\"DV\" >Diverter Valve</option>\n        </select>\n        {plugHTML}\n        </>\n    )\n}\n\nexport default WellPlugs;\n\n//<p>Cement Type:</p> <input id={props.id} type=\"text\" onChange={props.handlePlugChange} onBlur={props.handlePlugBlur} name=\"cement_type\" className=\"input-hidden\" value={props.cement_type} />","function DeleteDetails(props){\n\n    return (\n        <>\n            <p><span className=\"bold-span\">{props[0]}:</span> {props[1]} </p>\n        </>\n    )\n}\n\nexport default DeleteDetails;","import Modal from 'react-bootstrap/Modal'\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\nimport DeleteDetails from './DeleteDetails';\n\nfunction DeleteConfirmationModal(props) {\n    const [deleteDetails, setDeleteDetails] = useState({});\n    const handleClose = () => props.setShowDelete(false);\n    const {id, element} = props.deleteTarget;\n    let delHTML='';\n    let urlPicker='';\n\n    const handleDelete = async () => {\n       \n        const options = {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        console.log(urlPicker);\n        const response = await fetch(urlPicker, options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            // console.log(data);\n            // props.setShowDelete(false);\n            handleClose();\n            props.setDeleteTarget({});\n            props.setIsClicked(false);\n            props.setRefresh(Math.random());\n            \n            // handleClose();\n            // props.history.push(props.history.location.pathname);\n            // props.history.push(`/wellinfo/${data.id}`);\n        }\n    }\n\n    useEffect(() => {\n        const fetchDeleteDetails = async () => {\n            const response = await fetch(urlPicker, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well feature');\n            } else {\n                const data = await response.json();\n                setDeleteDetails(data);\n            }\n        }\n        fetchDeleteDetails();        \n    }, [props.showDelete]); //urlPicker\n\n    // console.log(props);\n    if (props.showDelete === true) {\n    \n    switch(element) {\n        case 'hole':\n            urlPicker = `/api/wells/holes/${id}/`;\n            break;\n        case 'casing':\n            urlPicker = `/api/wells/casings/${id}/`;\n            break;\n        case 'cement':\n            urlPicker = `/api/wells/cements/${id}/`;\n            break;\n        case 'perfs':\n            urlPicker = `/api/wells/perforations/${id}/`;\n            break;\n        case 'plug':\n            urlPicker = `/api/wells/plugs/${id}/`;\n            break;\n        default:\n            console.log('Error: no urlPicker defined for delete feature');\n    }\n    // console.log(element, id);\n    // console.log(urlPicker);\n    // useEffect(() => {\n    //     const fetchDeleteDetails = async () => {\n    //         const response = await fetch(urlPicker, \n    //         {headers: {\n    //                 'Content-Type': 'application/json',\n    //                 'X-CSRFToken': Cookies.get('csrftoken'),\n    //                 }\n    //         });\n    //         if (!response.ok) {\n    //             console.log('Error fetching well feature');\n    //         } else {\n    //             const data = await response.json();\n    //             setDeleteDetails(data);\n    //             // console.log(data);\n    //             // if (data !== {}) {\n    //                 // for (const [key, value] of Object.entries(data)){\n    //                 //     delHTML += `<p>${key}: ${value}</p>`;\n    //                     // delHTML += `<p><span className=\"bold-span\">${key}: ${value}</span></p> <br />`;\n    //                 // }\n    //             // }\n    //         }\n    //     }\n    //     fetchDeleteDetails();\n        \n        \n    // }, [/*props.deleteTarget*/]);\n\n    \n    \n    // console.log(deleteDetails);\n    // if (deleteDetails !== {}) {\n    //     for (const [key, value] of Object.entries(deleteDetails)){\n    //         delHTML = <><p><span className=\"bold-span\">{key}:</span> {value} </p><br/></>\n    //     }\n    // }\n    if (deleteDetails !== {}) {\n        const detailPairs = Object.entries(deleteDetails);\n        // console.log(detailPairs);\n        delHTML = detailPairs.map(pair => <DeleteDetails key={Math.random()*450} {...pair} />);\n    }\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showDelete} onHide={handleClose}>\n          <Modal.Header  className=\"splash\" closeButton>\n            <Modal.Title>Delete Entry</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            <p>Are you sure you want to delete this entry? This action cannot be undone.</p>\n            <br />\n            <div>\n                {delHTML}\n            </div>\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Keep Data\n            </Button>\n            <Button variant=\"warning\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default DeleteConfirmationModal;\n\n/*\nTO DO:\n------\nFigure out where to put this, and what props are needed.\nRewrite this to pop up when a delete button is pressed.\nRewrite the fetch to delete the entry.\nCan I figure out how to call it without cloning 5 times for each feature?\nWrite the detai views/urls needed for the fetch.\n*/","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\n// import DeleteDetails from './DeleteDetails';\n\nfunction DeleteWellModal(props) {\n    const handleClose = () => props.setShowWellDel(false);\n    const urlId=props.history.location.pathname.slice(10);\n    const urlPicker=`/api/wells/${urlId}`;\n\n\n    const handleDelete = async () => {\n       \n        const options = {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        const response = await fetch(urlPicker, options);\n        if(!response){\n            console.log(response);\n        } else {\n            props.setRefresh(Math.random())\n            props.history.push('');\n        }\n    }\n  \n    return (\n      <>  \n        <Modal show={props.showWellDel} onHide={handleClose}>\n          <Modal.Header className=\"splash\" closeButton>\n            <Modal.Title>Delete Well</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            <p>Are you sure you want to delete this Well? This action cannot be undone.</p>\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Keep Well\n            </Button>\n            <Button variant=\"warning\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default DeleteWellModal;","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport { useState } from 'react'; //useState, useEffect\nimport Cookies from 'js-cookie'\nimport { withRouter } from 'react-router-dom';\n// import { useEffect } from 'react';\n// import DeleteDetails from './DeleteDetails';\n\nfunction PlatImageModal(props) {\n  const handleClose = () => props.setShowImage(false);\n  // const [imageHTML, setImageHTML] = useState('');\n  const [preview, setPreview] = useState('');\n  let imageHTML;\n\n  const handleImage = (event) => {\n    const file = event.target.files[0];\n    props.setWell({\n      ...props.well,\n      plat_image: file,\n    })\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreview(reader.result);\n    }\n    reader.readAsDataURL(file); //returns URL\n  }\n\n  // const [source, setSource] = useState('');\n\n  // useEffect(() => {    \n  //   // if (!props.well){\n  //   //   const fetchWell = async () => {\n  //   //     const response = await fetch(`/api/wells/${props.match.params.id}/`, \n  //   //     {headers: {\n  //   //             'Content-Type': 'application/json',\n  //   //             'X-CSRFToken': Cookies.get('csrftoken'),\n  //   //             }\n  //   //     });\n  //   //     if (!response.ok) {\n  //   //         console.log('Error fetching well');\n  //   //     } else {\n  //   //         const data = await response.json();                \n  //   //         props.setWell(data);                                 \n  //   //     }\n  //   //   }\n  //   //   fetchWell();\n  //   // }\n  // }, [preview])\n\n   \n\n\n  // console.log(props);\n  // if (preview) {\n  //   setSource(preview);\n  // } else if (props.well){\n  //   setSource(props.well.plat_image);\n  // }\n\n    if(props.well){  \n      let source;\n      if (preview) {\n         source = preview;\n      } else if (props.well.plat_image){\n        source = props.well.plat_image;\n      }    \n      imageHTML=\n     <div className=\"ImageForm\">\n       {/* if (props.well.plat_image) {\n         <img src={props.well.plat_image} alt=\"plat_image\" />\n       } else {*/}\n       {props.well.plat_image && <img className=\"prev\" src={source} alt =\"\" />}\n       <input type=\"file\" name=\"plat_image\" onChange={handleImage}/>\n     </div>\n   } else {\n      imageHTML=<></>\n   }\n\n\n//\n// src={source}\n    // const urlId=props.history.location.pathname.slice(10);\n    // const urlPicker=`/api/wells/${urlId}`;\n\n\n    // const handleDelete = async () => {\n       \n    //     const options = {\n    //         method: 'DELETE',\n    //         headers:{\n    //             'Content-Type': 'application/json',\n    //             'X-CSRFToken': Cookies.get('csrftoken'),\n    //         },\n    //     };\n    //     const response = await fetch(urlPicker, options);\n    //     if(!response){\n    //         console.log(response);\n    //     } else {\n    //         props.history.push('');\n    //     }\n    // }\n\n    function handleUpload(){\n      const formData = new FormData(); //Constructing key value pairs below VVV\n      formData.append('plat_image', props.well.plat_image);\n\n      const options = {\n        method: 'PATCH',\n        headers: {\n          'X-CSRFToken': Cookies.get('csrftoken'), \n        },\n        body: formData,\n        // body: JSON.stringify({[propertyName]: value})\n      }\n      fetch(`/api/wells/${props.well.id}/`, options); \n      // fetch(`/media/`, options); \n      setPreview('');\n      props.setRefresh(Math.random());\n      handleClose();\n    }\n\n    // let imageHTML;\n  \n  \n    return (\n      <>  \n        <Modal show={props.showImage} onHide={handleClose}>\n          <Modal.Header className=\"splash\" closeButton>\n            <Modal.Title>Plat</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            {imageHTML}\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">           \n            <Button variant=\"warning\" onClick={handleUpload}>\n              Upload Photo\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default withRouter(PlatImageModal);\n\n/*\n\n<Button variant=\"secondary\" onClick={handleClose}>\n  Keep Well\n</Button>\n\n\n\n\n  \n  const handleUpload = (event) => {\n    // event.preventDefault();\n    const formData = new FormData(); //Constructing key value pairs below VVV\n    formData.append('plat_image', well.plat_image);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'), \n      },\n      body: formData,\n      // body: JSON.stringify({[propertyName]: value})\n    }\n    // fetch(`/api/wells/${props.well.id}/`, options); \n    fetch(`/media/`, options); \n  }\n\n  return (\n    <div className=\"ImageForm\">\n        <input type=\"file\" name=\"plat_image\" onChange={handleImage}/>\n        {props.well.plat_image && <img src={preview} alt =\"\" />}\n    </div>\n  );\n}\n\n\nconst fetchWell = async () => {\n      const response = await fetch(`/api/wells/${props.well.id}/`, \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n      });\n      if (!response.ok) {\n          console.log('Error fetching well');\n      } else {\n          const data = await response.json();\n          props.setWell(data);\n          history.push(`/wellinfo/${id}`);\n      }\n    }\n\n\n\n\n\n*/","export default __webpack_public_path__ + \"static/media/cement-texture.0f27d432.jpeg\";","import { useEffect, useRef, useState } from \"react\";\nimport dirt from '../StaticImages/cement-texture.jpeg';\n\nfunction Diagram(props){\n    const canvas0Ref = useRef(null);\n    const canvas1Ref = useRef(null);\n    const canvas2Ref = useRef(null);\n    const canvas3Ref = useRef(null);\n    const ctx0Ref = useRef(null);\n    const ctx1Ref = useRef(null);\n    const ctx2Ref = useRef(null);\n    const ctx3Ref = useRef(null);\n    const xlgEndRef = useRef(null);\n    const lrgEndRef = useRef(null);\n    const medEndRef = useRef(null);\n    const regEndRef = useRef(null);\n    const smlEndRef = useRef(null);\n    const xsmEndRef = useRef(null);\n    const [table, setTable] = useState({\n        'xlg': xlgEndRef,\n        'lrg': lrgEndRef,\n        'med': medEndRef,\n        'reg': regEndRef,\n        'sml':smlEndRef,\n        'xsm': xsmEndRef,\n    });\n    // const [activeTable, setActiveTable] = useState('');\n    // const [cArray, setCArray] = useState([]);\n\n    useEffect(() => {\n        const canvas0 = canvas0Ref.current;\n        const ctx0 = canvas0.getContext('2d');\n        ctx0Ref.current = ctx0;\n\n        ctx0.width = window.innerWidth;\n        ctx0.height = window.innerHeight;\n\n        canvas0.addEventListener('resize', function() {\n        ctx0.width = window.innerWidth;\n        ctx0.height = window.innerHeight;\n        });\n\n        const canvas1 = canvas1Ref.current;\n        const ctx1 = canvas1.getContext('2d');\n        ctx1Ref.current = ctx1;\n\n        ctx1.width = window.innerWidth;\n        ctx1.height = window.innerHeight;\n\n        canvas1.addEventListener('resize', function() {\n        ctx1.width = window.innerWidth;\n        ctx1.height = window.innerHeight;\n        });\n\n        let img = new Image();\n        let ptrn;\n        img.src = dirt;        \n\n        const canvas2 = canvas2Ref.current;\n        const ctx2 = canvas2.getContext('2d');\n        ctx2Ref.current = ctx2;\n\n        canvas2.addEventListener('resize', function() {\n            ctx2.width = window.innerWidth;\n            ctx2.height = window.innerHeight;\n        });\n\n        const canvas3 = canvas3Ref.current;\n        const ctx3 = canvas3.getContext('2d');\n        ctx3Ref.current = ctx3;\n\n        canvas2.addEventListener('resize', function() {\n            ctx2.width = window.innerWidth;\n            ctx2.height = window.innerHeight;\n        });\n\n\n        ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n        \n        drawCasings(props.wellCasings);\n\n        img.onload = () => {\n            ptrn = ctx1.createPattern(img, 'repeat');\n            ctx1.fillStyle = ptrn;\n            ctx2.fillStyle = ptrn;\n            drawCements(props.wellCements);\n            placePlugs(props.wellPlugs);\n        }\n\n        placePerforations(props.wellPerfs);\n\n        if (props.well){\n            drawDepthGuides(props.well.total_depth);\n        }\n\n    }, [props.wellCasings, props.wellCements, props.wellPerfs, props.wellPlugs, props.refresh]);\n        // drawCasings, drawCements, placePerforations, placePlugs, props.well]);//[]\n\n\n\n\n    function drawCement(x, y, w, h, x2){\n        ctx1Ref.current.fillRect(x-x2, y, x2, h);\n        ctx1Ref.current.fillRect(x+w, y, x2, h);\n    }\n\n    function drawDepthGuides(depth){\n        ctx0Ref.current.strokeStyle = \"white\";\n        ctx0Ref.current.lineWidth=2;\n        const x = canvas0Ref.current.width;\n        const topLine = Math.round(depth*0.25);\n        ctx0Ref.current.fillStyle = \"white\";\n        ctx0Ref.current.font = '16px Oxygen';\n        ctx0Ref.current.fillText(topLine, 10, 891*0.25-10);\n        const midLine = Math.round(depth*0.5);\n        ctx0Ref.current.fillText(midLine, 10, 891*0.5-10);\n        const botLine = Math.round(depth*0.75);\n        ctx0Ref.current.fillText(botLine, 10, 891*0.75-10);\n        ctx0Ref.current.beginPath();\n        ctx0Ref.current.setLineDash([5, 15]);\n        ctx0Ref.current.moveTo(0, 891*0.25);\n        ctx0Ref.current.lineTo(x,891*0.25);\n        ctx0Ref.current.stroke();\n        ctx0Ref.current.moveTo(0, 891*0.5);\n        ctx0Ref.current.lineTo(x,  891*0.5);\n        ctx0Ref.current.stroke();\n        ctx0Ref.current.moveTo(0, 891*0.75);\n        ctx0Ref.current.lineTo(x, 891*0.75);\n        ctx0Ref.current.stroke();\n    }\n\n    function drawPipe(x, y, w, h, a, size){\n        ctx2Ref.current.beginPath();\n        let next;\n        switch (size){\n            case 'xlg': ctx2Ref.current.lineWidth= 6;\n                if (table['lrg']['current'] !== null ){\n                    next = 15;\n                } else if (table['med']['current']  !== null ){\n                    next = 30;\n                } else if (table['reg']['current']  !== null ){\n                    next = 45;\n                } else if (table['sml']['current']  !== null ){\n                    next = 60;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 75;\n                } else {next = 90}\n                break;\n            case 'lrg': ctx2Ref.current.lineWidth= 5;\n                if (table['med']['current']  !== null ){\n                    next = 15;\n                } else if (table['reg']['current']  !== null ){\n                    next = 30;\n                } else if (table['sml']['current']  !== null ){\n                    next = 45;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 60;\n                } else {next = 75}\n                break;\n            case 'med': ctx2Ref.current.lineWidth= 4;\n                if (table['reg']['current']  !== null ){\n                    next = 15;\n                } else if (table['sml']['current'] !== null ){\n                    next = 30;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 45;\n                } else {next = 60}\n                break;\n            case 'reg': ctx2Ref.current.lineWidth= 3;\n                if (table['sml']  !== null ){\n                    next = 15;\n                } else if (table['xsm']['current']  !== null ){\n                    next = 30;\n                } else {\n                    next = 45;\n                }\n                break;\n            case 'sml': ctx2Ref.current.lineWidth= 2;\n                if (table['xsm']['current']  !== null ){\n                    next = 15;\n                } else {\n                    next = 30;\n                }\n                break;\n            case 'xsm': ctx2Ref.current.lineWidth= 1;\n                next = 15;\n                break;\n            default: \n                console.log('Error setting casing width');\n                break;\n        }\n        ctx2Ref.current.strokestyle = \"black\";\n        ctx2Ref.current.fillStyle=`rgba(182, 112, 37, ${a})`;\n        ctx2Ref.current.fillRect(x, y, w, h, a);\n        ctx2Ref.current.moveTo(x,y);\n        ctx2Ref.current.lineTo(x,y+h);\n        ctx2Ref.current.lineTo(x+next, y+h); //Change to get next pipe?\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x+w, y);\n        ctx2Ref.current.lineTo(x+w,y+h);\n        ctx2Ref.current.lineTo(x+w-next, y+h)\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n    }\n    \n    function drawCasingSet(x, y, w, size){\n        ctx2Ref.current.fillStyle=\"black\";\n        let lineWidth;\n        switch (size){\n            case 'xlg': lineWidth = 3;\n                break;\n            case 'lrg': lineWidth = 2.5;\n                break;\n            case 'med': lineWidth = 2;\n                break;\n            case 'reg': lineWidth = 1.5;\n                break;\n            case 'sml': lineWidth = 1;\n                break;\n            case 'xsm': lineWidth = 0.5;\n                break;\n            default: \n                console.log('Error setting casing width');\n                break;\n        }\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x,y+lineWidth);\n        ctx2Ref.current.lineTo(x-30,y+lineWidth);\n        ctx2Ref.current.lineTo(x,y-30+lineWidth);\n        ctx2Ref.current.fill();\n\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.moveTo(x+w,y+lineWidth);\n        ctx2Ref.current.lineTo(x+w+30, y+lineWidth);\n        ctx2Ref.current.lineTo(x+w,y-30+lineWidth);\n        ctx2Ref.current.fill();\n    }\n\n    // function drawPerforations(x, y, w){\n    //     drawEachPerf(x, y);\n    //     drawEachPerf(x, y+15);\n    //     drawEachPerf(x, y+30);\n    //     drawEachPerf(x+w, y);\n    //     drawEachPerf(x+w, y+15);\n    //     drawEachPerf(x+w, y+30);\n    // }\n\n    function drawPerfPair(x, y, w){\n        drawEachPerf(x, y);\n        drawEachPerf(x+w, y);\n    }\n\n    function drawEachPerf(x2,y2) {\n        ctx2Ref.current.fillStyle = \"black\";\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.strokeStyle = \"white\";\n        ctx2Ref.current.moveTo(x2, y2-5);\n        ctx2Ref.current.lineTo(x2-30, y2);\n        ctx2Ref.current.lineTo(x2, y2+5);\n        ctx2Ref.current.lineTo(x2+30, y2);\n        ctx2Ref.current.lineTo(x2, y2-5);\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n        ctx2Ref.current.fill();\n        ctx2Ref.current.strokeStyle = \"black\";\n    }\n\n    function drawCementPlug(x,y,w,h){\n        ctx2Ref.current.fillRect(x, y, w, h);\n    }\n\n    function drawMechPlug(x,y,w,h){\n        ctx3Ref.current.fillStyle=\"black\";\n        ctx3Ref.current.fillRect(x, y, w, h);\n    }\n\n    function drawDVPlug(x, y, w){\n        ctx2Ref.current.beginPath();\n        ctx2Ref.current.lineWidth = 6;\n        ctx2Ref.current.moveTo(x, y);\n        ctx2Ref.current.lineTo(x-15, y+15);\n        ctx2Ref.current.moveTo(x+w, y);\n        ctx2Ref.current.lineTo(x+w+15, y+15);\n        ctx2Ref.current.stroke();\n        ctx2Ref.current.closePath();\n    }\n\n    //CenterX 222px\n    //height 891px\n    // Ending_depth is to total_depth as X is to 891\n    //ED/TD = X/891\n    //X = ED/TD * 891\n\n    function findA(casings, cements){\n        let casingArray={};\n        let cementArray=[];\n        casings.forEach(casing => {\n            if (casing.gauge === 'xlg'){  \n                const xlgEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                xlgEndRef.current = xlgEnd;\n                casingArray['xlg'] = {\n                    id: casing.id,\n                    x: 132,\n                    depth: xlgEndRef.current}; \n            } else if (casingArray['xlg'] === undefined){\n                casingArray['xlg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'lrg'){\n                const lrgEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                lrgEndRef.current = lrgEnd;\n                casingArray['lrg'] = {\n                    id: casing.id,\n                    x: 147,\n                    depth: lrgEndRef.current};\n            } else if (casingArray['lrg'] === undefined){\n                casingArray['lrg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'med'){\n                const medEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                medEndRef.current = medEnd;\n                casingArray['med'] = {\n                    id: casing.id,\n                    x: 162,\n                    depth: medEndRef.current};\n            } else if (casingArray['med'] === undefined){\n                casingArray['med'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'reg'){\n                const regEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                regEndRef.current = regEnd;\n                casingArray['reg'] = {\n                    id: casing.id,\n                    x: 177,\n                    depth: regEndRef.current};\n            } else if (casingArray['reg'] === undefined){\n                casingArray['reg'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'sml'){\n                const smlEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                smlEndRef.current = smlEnd;\n                casingArray['sml'] = {\n                    id: casing.id,\n                    x: 192,\n                    depth: smlEndRef.current};\n            } else if (casingArray['sml'] === undefined) {\n                casingArray['sml'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n            if (casing.gauge === 'xsm'){\n                const xsmEnd = Math.round(casing.ending_depth*891/props.well.total_depth);\n                xsmEndRef.current = xsmEnd;\n                casingArray['xsm'] = {\n                    id: casing.id,\n                    x: 207,\n                    depth: xsmEndRef.current};\n            }\n            else if (casingArray['xsm'] === undefined){\n                casingArray['xsm'] = {\n                    x: 0,\n                    depth: 0,\n                };\n            }\n        });\n\n        cements.forEach(cement => {\n            const cementY=Math.round(cement.starting_depth*891/props.well.total_depth);\n            const cementBottom = Math.round(cement.ending_depth*891/props.well.total_depth);\n            let cementXTop;\n            let cementXBottom;\n            if (cementY < casingArray['xlg']['depth']){\n                cementXTop = 132;\n            } else if (cementY < casingArray['lrg']['depth']){\n                cementXTop = 147;\n            } else if (cementY < casingArray['med']['depth']){\n                cementXTop = 162;\n            } else if (cementY < casingArray['reg']['depth']){\n                cementXTop = 177;\n            } else if (cementY < casingArray['sml']['depth']){\n                cementXTop = 192;\n            } else if (cementY < casingArray['xsm']['depth']){\n                cementXTop = 207; \n            }\n            if (cementBottom <= casingArray['xlg']['depth'] +1){\n                cementXBottom = 132;\n            } else if (cementBottom <= casingArray['lrg']['depth'] +1){\n                cementXBottom = 147;\n            } else if (cementBottom <= casingArray['med']['depth'] +1){\n                cementXBottom = 162;\n            } else if (cementBottom <= casingArray['reg']['depth'] +1){\n                cementXBottom = 177;\n            } else if (cementBottom <= casingArray['sml']['depth'] +1){\n                cementXBottom = 192;\n            } else if (cementBottom <= casingArray['xsm']['depth'] +1){\n                cementXBottom = 207; \n            }\n\n            let cementW = cementXTop = cementXBottom;\n            if (cementW === 0){\n                cementW = 15;\n            }\n\n            cementArray.push({TopY: cementY, BottomY: cementBottom, TopX: cementXTop, BottomX: cementXBottom, W: cementW});\n        });                        \n        \n        let idArray=[];\n        for (let i = 0; i < cementArray.length; i++){\n            if (cementArray[i]['TopX']-cementArray[i]['W'] <= casingArray['xlg']['x'] && cementArray[i]['TopY'] < casingArray['xlg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['xlg']['id']) === -1)){\n                idArray.push(casingArray['xlg']['id']);\n            } else if (cementArray[i]['TopX'] - cementArray[i]['W'] <= casingArray['lrg']['x'] && cementArray[i]['TopY'] < casingArray['lrg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['lrg']['id']) === -1)){\n                idArray.push(casingArray['lrg']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['med']['x'] && cementArray[i]['TopY'] < casingArray['med']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['med']['id']) === -1)){\n                idArray.push(casingArray['med']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['reg']['x'] && cementArray[i]['TopY'] < casingArray['reg']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['reg']['id']) === -1)){\n                idArray.push(casingArray['reg']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['sml']['x'] && cementArray[i]['TopY'] < casingArray['sml']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['sml']['id']) === -1)){\n                idArray.push(casingArray['sml']['id']);\n            } else if (cementArray[i]['TopX'] -cementArray[i]['W'] <= casingArray['xsm']['x'] && cementArray[i]['TopY'] < casingArray['xsm']['depth'] && cementArray[i]['bottomY'] !== cementArray[i]['TopY'] && (idArray.indexOf(casingArray['xsm']['id']) === -1)){\n                idArray.push(casingArray['xsm']['id']);\n            }\n        }\n        idArray.pop();\n        return idArray;\n    }\n\n\n    \n    function drawCasings(casings){\n        const aIndex = findA(props.wellCasings, props.wellCements);\n        let casingArray=[];\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'xlg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-90;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=180;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                \n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                \n                const xlgEnd = casingY+casingH;\n                xlgEndRef.current = xlgEnd;\n\n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n            }\n            setTable(prevState => ({  \n                ...prevState,        \n                'xlg': xlgEndRef.current\n            }));      \n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'lrg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-75;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=150;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const lrgEnd = casingY+casingH;\n                lrgEndRef.current = lrgEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }                setTable(prevState => ({  \n                    ...prevState,        \n                    'lrg': lrgEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'med' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-60;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=120;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const medEnd = casingY+casingH;\n                medEndRef.current = medEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'med': medEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'reg' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-45;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=90;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const regEnd = casingY+casingH;\n                regEndRef.current = regEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'reg': regEndRef.current\n                }));\n            }\n        })\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'sml' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-30;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=60;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const smlEnd = casingY+casingH;\n                smlEndRef.current = smlEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'sml': smlEndRef.current\n                }));\n            }\n        });\n        casings.forEach(casing => {\n            let casingA;\n            if (casing.gauge === 'xsm' && casing.ending_depth > casing.starting_depth){\n                const casingX=222-15;\n                const casingY=Math.round(casing.starting_depth*891/props.well.total_depth);\n                const casingW=30;\n                const casingH=Math.round(casing.ending_depth*891/props.well.total_depth)-casingY;\n                casingArray.push(casingX);\n                if (aIndex.includes(casing.id)){\n                     casingA=0;\n                } else {\n                     casingA=1;\n                }\n                const xsmEnd = casingY+casingH;\n                xsmEndRef.current = xsmEnd; \n                if (casingH > 0){\n                    drawPipe(casingX, casingY, casingW, casingH, casingA, casing.gauge);\n                    drawCasingSet(casingX, casingY+casingH, casingW, casing.gauge);\n                }\n                setTable(prevState => ({  \n                    ...prevState,        \n                    'xsm': xsmEndRef.current\n                }));\n            }\n        });\n    }\n\n    function drawCements(cements){\n        cements.forEach(cement => {\n            const cementY=Math.round(cement.starting_depth*891/props.well.total_depth);\n            const cementH=Math.round(cement.ending_depth*891/props.well.total_depth)-cementY;\n            const cementBottom = Math.round(cement.ending_depth*891/props.well.total_depth);\n    \n            // console.log(cement.id)\n            const cementX = findPipeXAtY(cementBottom, table);\n            const cementXtop = findPipeXAtY(cementY, table);\n            const cementX2 = findNextPipeXAtY(cementX, cementXtop, cementY, table);\n            let deltaX;\n            // findA(cementXtop, cementX);\n            // console.log(cArray);\n            // console.log(cement.id, cementX, cementX2, cementXtop);\n            if (cementX2 === 0){  \n                deltaX = 15;\n            } else {\n                deltaX = cementX2;\n            }\n            const cementW = findPipeWAtY(cementBottom, table);\n            if (cementH > 0){\n                drawCement(cementX, cementY, cementW, cementH, deltaX);\n            }\n        })\n    }\n\n    function findPipeXAtY(y, table){\n        // console.log(table);\n        if (y < table['xlg']){\n            // setActiveTable('xlg');\n            return 222-90\n        } else if (y < table['lrg']){\n            // setActiveTable('xlg');\n            return 222-75\n        } else if (y < table['med']){\n            // setActiveTable('lrg');\n            return 222-60\n        } else if (y < table['reg']){\n            // setActiveTable('med');\n            return 222-45\n        } else if (y <= table['sml']){\n            // setActiveTable('reg');\n            return 222-30\n        } else if (y <= table['xsm']){\n            // setActiveTable('sml');\n            return 222-15\n        }\n    };\n\n    function findPipeWAtY(y, table){\n        if (y <= table['xlg']){\n            return 180\n        } else if (y < table['lrg']){\n            return 150\n        } else if (y < table['med']){\n            return 120\n        } else if (y < table['reg']){\n            return 90\n        } else if (y <= table['sml']){\n            return 60\n        } else if (y <= table['xsm']){\n            return 30\n        }\n    };\n\n    function findNextPipeXAtY(x, x2, y, table){\n        //Y is already set for x, x2.\n        let xArray = [];\n        if (xlgEndRef.current !== null){\n            xArray.push(findPipeXAtY(xlgEndRef.current-1, table));\n        }\n        if (lrgEndRef.current !== null){\n            xArray.push(findPipeXAtY(lrgEndRef.current-1, table));\n        } \n        if (medEndRef.current !== null){\n            xArray.push(findPipeXAtY(medEndRef.current-1, table));\n        }\n        if (regEndRef.current !== null){\n            xArray.push(findPipeXAtY(regEndRef.current-1, table));\n        }\n        if (smlEndRef.current !== null){\n            xArray.push(findPipeXAtY(smlEndRef.current-1, table));\n        }\n        if (xsmEndRef.current !== null){\n            xArray.push(findPipeXAtY(xsmEndRef.current-1, table));\n        }\n        \n        xArray.sort(function(a, b){return a-b});\n        \n        if (x2 === x){\n            return 15\n        } else {\n            return x - xArray[xArray.indexOf(x)-1];\n        }\n    }\n\n    function placePerforations(perfs){\n       perfs.forEach(perf => {\n            const perfY=Math.round(perf.starting_depth*891/props.well.total_depth);\n            const perfH=Math.round(perf.ending_depth*891/props.well.total_depth)-perfY;\n            const perfX = findPipeXAtY(perfY+perfH, table);\n            const perfW = findPipeWAtY(perfY+perfH, table);\n            if (perfH > 0){\n                drawPerfPair(perfX, perfY, perfW);\n            }\n        })\n    }\n\n    function placePlugs(plugs){\n        plugs.forEach(plug => {\n            if (plug.plug_type === \"DV\"){\n                const plugY=plug.set_depth*891/props.well.total_depth;\n                const plugX = findPipeXAtY(plugY, table);\n                const plugW = findPipeWAtY(plugY, table);\n                drawDVPlug(plugX, plugY, plugW);\n            } else {\n                const plugY=plug.starting_depth*891/props.well.total_depth;\n                const plugH=(plug.ending_depth*891/props.well.total_depth)-plugY;\n                if (plugH > 0){\n                    if (plugY+plugH <= xlgEndRef.current){\n                        const plugX=222-90;\n                        const plugW=180;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }\n                    } else if (plugY+plugH <= lrgEndRef.current){\n                        const plugX=222-75;\n                        const plugW=150;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }                    \n                    } else if (plugY+plugH <= medEndRef.current){\n                        const plugX=222-60;\n                        const plugW=120;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else if (plugY+plugH <= regEndRef.current){\n                        const plugX=222-45;\n                        const plugW=90;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else if (plugY+plugH <= smlEndRef.current){\n                        const plugX=222-30;\n                        const plugW=60;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    } else {\n                        const plugX=222-15;\n                        const plugW=30;\n                        if (plug.plug_type === \"CP\"){\n                            drawCementPlug(plugX, plugY, plugW, plugH);\n                        } else {\n                            drawMechPlug(plugX, plugY, plugW, plugH);\n                        }    \n                    }\n                }\n            }\n        })\n    }\n\n    return (\n        <div className=\"bg-pseudo\">\n            <canvas id=\"canvas0\" width=\"444\" height=\"900\" ref={canvas0Ref}></canvas>\n            <canvas id=\"canvas1\" width=\"444\" height=\"900\" ref={canvas1Ref}></canvas>\n            <canvas id=\"canvas2\" width=\"444\" height=\"900\" ref={canvas2Ref}></canvas>\n            <canvas id=\"canvas3\" width=\"444\" height=\"900\" ref={canvas3Ref}></canvas>\n        </div>\n    )\n}\n\nexport default Diagram;","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport WellHoles from './WellHoles';\nimport WellCasings from './WellCasings';\nimport WellCements from './WellCements';\nimport WellPerfs from './WellPerfs';\nimport WellPlugs from './WellPlugs';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\nimport DeleteWellModal from './DeleteWellModal';\nimport PlatImageModal from './PlatImageModal';\nimport Diagram from './Diagram';\nimport Button from 'react-bootstrap/esm/Button';\n\nfunction WellView(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} />\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight2\" size=\"2x\"/>\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    const [deleteTarget, setDeleteTarget] = useState({});\n    const [showDelete, setShowDelete] = useState(false);\n    const [isClicked, setIsClicked] = useState(false);\n    const [refresh, setRefresh] = useState(0);\n    const [showWellDel, setShowWellDel] = useState(false);\n    const [showImage, setShowImage] = useState(false);\n    let wellHolesHTML;\n    let wellCasingsHTML;\n    let wellCementsHTML;\n    let wellPerfsHTML;\n    let wellPlugsHTML;\n    /*\n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    */\n    \n    // console.log(props);\n    function displayPopup() {\n        setShowImage(true);\n        // const $popup = document.getElementById('popup');\n        // if ($popup.style.display === 'none'){\n        //     $popup.style.display = 'block';\n        // } else {\n        //     $popup.style.display = 'none';\n        // }\n    }\n    \n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        props.setWell({...props.well, [name]: value});\n    }\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    useEffect(() => {\n          \n        const fetchWell = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well');\n            } else {\n                const data = await response.json();                \n                props.setWell(data);               \n            }\n          }\n\n\n        const fetchWellFeatures = async () => {\n                      \n            const response = await fetch(`/api/wells/${props.match.params.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n            }\n        }\n        \n        fetchWell();\n        fetchWellFeatures();\n        setShowDelete(false);        \n    }, [refresh]);\n\n    useEffect(() => {\n        if (showDelete === false && isClicked === true) {\n            setShowDelete(true);\n        } else {\n            setShowDelete(false)\n        }\n    },[isClicked]);//showDelete\n\n    async function handleBlur(event){\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        // const {propertyName, value} = event.target;\n        // console.log(event.target);\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/${props.match.params.id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating well information');\n        }\n        // const data = await response.json();\n        // console.log(propertyName, value);\n        if (propertyName === \"total_depth\"){\n            setRefresh(Math.random());\n        }\n\n    }\n\n    const handleHoleChange = (event) => {\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        let index = wellHoles.findIndex((hole) => hole.id === parseInt(id));\n        let test = [...wellHoles]\n        test[index][propertyName] = value;\n        setWellHoles(test);\n    }\n\n    async function handleHoleBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        console.log(event.target);\n        console.log(event.target.id);\n        console.log(id)\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/holes/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating hole information');\n        }\n        // const data = await response.json();\n    }\n    \n    if (wellHoles === []){\n        wellHolesHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    } else {\n        wellHolesHTML = wellHoles.map(hole => <WellHoles key={hole.id+1000} {...hole} setWellHoles={setWellHoles} handleHoleChange={handleHoleChange} handleHoleBlur={handleHoleBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleHoleKeyPress={handleHoleKeyPress}/>)        \n    }\n\n    const handleCasingChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCasings.findIndex(casing => casing.id === parseInt(id));\n        let test = [...wellCasings]\n        test[index][name] = value;\n        setWellCasings(test);\n    }\n\n    async function handleCasingBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/casings/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating casing information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellCasings !== []){\n        wellCasingsHTML = wellCasings.map(casing => <WellCasings key={casing.id+2000} {...casing} handleCasingChange={handleCasingChange} handleCasingBlur={handleCasingBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleCasingKeyPress={handleCasingKeyPress}/>)\n    } else {\n        wellCasingsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handleCementChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCements.findIndex(cement => cement.id === parseInt(id));\n        let test = [...wellCements]\n        test[index][name] = value;\n        setWellCements(test);\n    }\n\n    async function handleCementBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/cements/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating cement information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellCements !== []){\n        wellCementsHTML = wellCements.map(cement => <WellCements key={cement.id+3000} {...cement} handleCementChange={handleCementChange} handleCementBlur={handleCementBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleCementKeyPress={handleCementKeyPress}/>)\n    } else {\n        wellCementsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePerforationChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPerfs.findIndex(perf => perf.id === parseInt(id));\n        let test = [...wellPerfs]\n        test[index][name] = value;\n        setWellPerfs(test);\n    }\n\n    async function handlePerforationBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/perforations/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating perforation information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellPerfs !== []){\n        wellPerfsHTML = wellPerfs.map(perf => <WellPerfs key={perf.id+4000} {...perf} handlePerforationChange={handlePerforationChange} handlePerforationBlur={handlePerforationBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handlePerfKeyPress={handlePerfKeyPress}/>)\n    } else {\n        wellPerfsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePlugChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPlugs.findIndex(plug => plug.id === parseInt(id));\n        let test = [...wellPlugs]\n        test[index][name] = value;\n        setWellPlugs(test);\n    }\n\n    async function handlePlugBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/plugs/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating plug information');\n        }\n        // const data = await response.json();\n    }\n\n\n    if (wellPlugs !== []){\n        wellPlugsHTML = wellPlugs.map(plug => <WellPlugs key={plug.id+5000} {...plug} handlePlugChange={handlePlugChange} handlePlugBlur={handlePlugBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handlePlugKeyPress={handlePlugKeyPress}/>)\n    } else {\n        wellPlugsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    function handleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleHoleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleHoleBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleCasingKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleCasingBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleCementKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleCementBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handlePerfKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handlePerforationBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handlePlugKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handlePlugBlur(e)\n            e.target.blur();\n\n        }\n    }\n\n\n    const createNewHole = async () => {\n        const newHole = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            hole_size: ''\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newHole)\n        };\n        const response = await fetch('/api/wells/holes/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellHoles([...wellHoles, newHole]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCasing = async () => {\n        const newCasing = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            casing_weight: '',\n            casing_grading: '',\n            gauge: 'sml',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCasing)\n        };\n        const response = await fetch('/api/wells/casings/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellCasings([...wellCasings, newCasing]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCement = async () => {\n        const newCement = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCement)\n        };\n        const response = await fetch('/api/wells/cements/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellCements([...wellCements, newCement]);\n            setRefresh(Math.random())\n        }\n    };\n    \n    const createNewPerforation = async () => {\n        const newPerforation = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            perforation_interval: '',\n            perforation_total_holes: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPerforation)\n        };\n        const response = await fetch('/api/wells/perforations/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellPerfs([...wellPerfs, newPerforation]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewPlug = async () => {\n        const newPlug = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPlug)\n        };\n        const response = await fetch('/api/wells/plugs/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellPlugs([...wellPlugs, newPlug]);\n            setRefresh(Math.random())\n        }\n    };\n\n    function handleDeleteWell(event){\n        setShowWellDel(true);\n    }\n\n    function handleBack(){\n        props.setShowSplash(false)\n        props.history.goBack();\n    }\n\n    let wellInfoHTML;\n    if (props.well !== null) {\n        wellInfoHTML = \n        <div className=\"well-info\">\n                <div className=\"well-table-top row\">\n                    <div className=\"col-lg-8\"> \n                        <h2>{props.well.lease} {props.well.well_number} <span className=\"icon\" onClick={displayPopup}>{$faImage}</span> </h2>\n                    </div>\n                    <div>\n                    <Button className=\"btn\" variant=\"warning\" onClick={handleBack}> well selection </Button>\n                    </div>\n                    <div className=\"col-lg-4 text-right\">\n                        <span className=\"icon-trash-lrg\" onClick={handleDeleteWell}>{$faTrashAlt}</span>\n                        <span className=\"bold-span\">Last Updated: </span>{formatDate()}\n                    </div>                    \n                </div>\n                <div className=\"well-table-id row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">API Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"API_number\" className=\"input-hidden\" value={props.well.API_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Company: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"company\" className=\"input-hidden\" value={props.well.company} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Permit Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"permit_number\"className=\"input-hidden\" value={props.well.permit_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Current Status: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"current_status\" className=\"input-hidden\" value={props.well.current_status} />\n                    </div>\n                </div>\n                <div className=\"well-table-location row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Location: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"location\" className=\"input-hidden\" value={props.well.location} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Section: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"section\" className=\"input-hidden\" value={props.well.section} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Survey: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"survey\" className=\"input-hidden\" value={props.well.survey} />\n                    </div>\n                    <div className=\"col-lg-3 county-state\">\n                        <div>\n                            <span className=\"bold-span\">County: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"county\" className=\"input-hidden county\" value={props.well.county} />\n                        </div>\n                        <div>\n                            <span className=\"bold-span\">State: </span> <input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"state\" className=\"input-hidden state\" value={props.well.state} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"well-table-field row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Field: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"field\" className=\"input-hidden\" value={props.well.field} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Initial Formation: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"initial_formation\" className=\"input-hidden\" value={props.well.initial_formation} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Spud Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"spud_date\" className=\"input-hidden\" value={props.well.spud_date} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Comp Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"completion_date\" className=\"input-hidden\" value={props.well.completion_date} />\n                    </div>\n                </div>\n                <div className=\"well-table-depths row mb-3\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Ground Level: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"ground_level\" className=\"input-hidden\" value={props.well.ground_level} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Kelley Bushing: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"kelley_bushing\" className=\"input-hidden\" value={props.well.kelley_bushing} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Derrick Floor: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"derrick_floor\" className=\"input-hidden\" value={props.well.derrick_floor} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Total Depth: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"total_depth\" className=\"input-hidden\" value={props.well.total_depth} />\n                    </div>\n                </div>\n                <div className=\"labels row\">\n                    <div className=\"hole-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label1\"> HOLE</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellHolesHTML}\n                            <button className=\"new-feature-button\" onClick={createNewHole}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"casing-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label2\">CASING</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCasingsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCasing}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"cement-col col\">\n                        <div className=\"showme\" >\n                            <p className=\"label3\">CEMENT</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCementsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCement}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"perf-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label4\">PERFORATIONS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPerfsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPerforation}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"plug-col col\">\n                        <div className=\"col showme\">\n                            <p className=\"label5\">PLUGS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPlugsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPlug}> Add New</button>\n                        </div>\n                    </div>\n                </div>\n            </div>;\n    } else {\n        wellInfoHTML = <div>Loading...<br />If this screen does not go away, you may not have permission to view this well.</div>;\n    }\n        \n    return (\n        <div className=\"well-container\">\n            {wellInfoHTML}\n            <DeleteConfirmationModal deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} showDelete={showDelete} setShowDelete={setShowDelete} history={props.history} setRefresh={setRefresh} setIsClicked={setIsClicked}/>\n            <DeleteWellModal history={props.history} setRefresh={setRefresh} showWellDel={showWellDel} setShowWellDel={setShowWellDel}/>\n            <PlatImageModal well={props.well} setWell={props.setWell} showImage={showImage} setShowImage={setShowImage} history={props.history} refresh={refresh} setRefresh={setRefresh}/>\n            <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh}/>\n        </div>\n    );\n};\n\nexport default withRouter(WellView)\n\n\n\n/*\n\n<div className=\"well-info\">\n    <h2>{props.well.lease} {props.well.well_number}</h2>\n    <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    I'm a well! \n</div>\n\n\n\nlet currentTarget;\n\n\n\n\n// add when widget loads\n\n... and finally some housekeeping\n\n// remove listener when destroying the widget\nwindow.removeEventListener(\"click\", clickOut);\n\n\n\n\n    // useEffect(() => {\n    //     // setWellHoles(wellFeatures.holes);\n    //     // setWellCasings(wellFeatures.casings);\n    //     // setWellCements(wellFeatures.cements);\n    //     // setWellPerfs(wellFeatures.perforations);\n    //     // setWellPlugs(wellFeatures.plugs);\n    // }, [wellFeatures]);\n\n    //CHANGE TO NOT USE INNERHTML!\n    // function editField(event){\n    //     if (!selected){\n    //         console.log(event);\n    //         id = event.target.id;\n    //         currentTarget = id;\n    //         value = event.target.attributes.value.value;\n    //         $active = document.getElementById(id)\n    //         console.log(value);\n    //         $active.innerHTML = `<input type='text' value=${value} />`;\n    //         window.addEventListener(\"click\", clickOut);\n    //         console.log($active);\n    //         selected = true;\n    //     }\n    // }\n\n    // const clickOut = (event) => {\n    //     if (!event.target.id.includes(currentTarget)) {\n    //         selected = false;\n    //         window.removeEventListener(\"click\", clickOut);\n    //         $active.innerHTML = `<span id=${id} value=${value} onClick={editField}>${value}</span>`\n    //     }\n    // };\n\nfetch(‘https://jsonplaceholder.typicode.com/todos/1', {\nmethod: ‘PATCH’,\nbody: JSON.stringify({\ncompleted: true\n}),\nheaders: {\n“Content-type”: “application/json; charset=UTF-8”\n}\n})\n.then(response => response.json())\n.then(json => console.log(json))\n\n\n\nasync function handleBlur(event){\n    event.preventDefault();\n    const options = {\n        method: 'PATCH',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(name: value)\n    };\n    const response = await fetch(``/api/wells/${props.match.params.id}/`, options);\n    const data = await response.json();\n    console.log('data', data);\n}\n\n\n\nconst newHole = async () => {\n    const newHole = {\n        well: props.match.params.id,\n        starting_depth: 0,\n        ending_depth: 0,\n        hole_size: ''\n    }\n    const options = {\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(newHole)\n    };\n    const response = await fetch('/api/wells/holes/', options);\n    if(!response){\n        console.log(response);\n    } else {\n        const data = await response.json();\n        setWellHoles([...wellHoles, newHole]);\n    }\n};\n\n\n\n*/","import Modal from 'react-bootstrap/Modal'\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\n\nfunction NewWellModal(props) {\n       \n    const handleClose = () => props.setShowNew(false);\n\n    const handleSave = async () => {\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newWell)\n        };\n        const response = await fetch('/api/wells/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            props.setShowNew(false);\n            console.log(data);\n            props.setWell(data);\n            props.history.push(`/wellinfo/${data.id}`);\n        }\n    }\n\n    const [newWell, setNewWell] = useState({\n        lease: '',\n        well_number: '',\n        API_number: '',\n        total_depth: 0,\n    })\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setNewWell(prevState => ({  \n            ...prevState,        \n            [name]:value,\n        }))\n    }\n   \n    return (\n      <>  \n        <Modal show={props.showNew} onHide={handleClose} className=\"new-well-modal\">\n          <Modal.Header className=\"new-modal\" closeButton>\n            <Modal.Title>Add New Well</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"new-modal\">\n            <div className=\"form-container new-well\">\n            <form className=\"col-12 new-well-form\" >\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='lease'>Lease Name:</label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"lease\"\n                        placeholder=\"Enter lease\"\n                        onChange={handleInput}\n                        required\n                        name='lease'\n                        value={newWell.lease}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='well_number'>Well Number: </label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"well_number\"\n                        placeholder=\"Enter well number\"\n                        onChange={handleInput}\n                        required\n                        name='well_number'\n                        value={newWell.well_number}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='API_number'>API Number:</label>\n                    <input type=\"text\" \n                        className=\"form-control\"\n                        id=\"API_number\"\n                        placeholder=\"Enter API number\"\n                        onChange={handleInput}\n                        required\n                        name='API_number'\n                        value={newWell.API_number}\n                    />\n                </div>\n                <div className=\"form-group text-left mb-3\">\n                    <label htmlFor='total_depth'>Total Depth:</label>\n                    <input type=\"number\" \n                        className=\"form-control\"\n                        id=\"total_depth\"\n                        placeholder=\"Enter total depth\"\n                        onChange={handleInput}\n                        required\n                        name='total_depth'\n                        value={newWell.total_depth}\n                    />\n                </div>\n            </form>\n            </div>\n          </Modal.Body>\n          <Modal.Footer className=\"new-modal\">\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Discard\n            </Button>\n            <Button variant=\"warning\" onClick={handleSave}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default NewWellModal;","export default __webpack_public_path__ + \"static/media/CMlogo.2c75626a.png\";","import React from 'react';\nimport { JSCharting } from 'jscharting-react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie';\n\nfunction Chart() {\n    \n    const [choice, setChoice] = useState('month');\n    const [chartData, setChartData] = useState([]);\n\n    \n\n    useEffect(() => {\n      let results=[];\n      async function fetchPricePeriod(){        \n        const response = await fetch(`/api/prices/past_${choice}/`, \n        {headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n              }\n        });if(!response){\n            console.log(response);\n        } else {\n            const data = await response.json();\n            data.prices.forEach(row => {\n                results.push({x: row.created_at, y: row.price});\n            });\n            results.forEach(row => {\n                let year = row.x.slice(0,4);\n                let month = row.x.slice(5,7);\n                month = parseInt(month);\n                month--;\n                month = month.toString();\n                let day = row.x.slice(8,10);\n                row.x = new Date(year, month, day);\n            })\n            // console.log(results);\n            setChartData(results);    \n        }\n    }\n\n        fetchPricePeriod();\n        return () => {\n          //Do something??\n        };\n    }, [choice]);  //, fetchPricePeriod, results\n    \n    const config = {\n        type: 'line',\n        palette: [\"rgba(184, 156, 45, 0.8)\"],\n        axisToZoom: 'x',\n\n        legend_visible: false,\n        \n        title: {\n            position: 'full',\n            padding: 7,\n            fill: ['#effcff', '#f8edff', 45],\n            opacity: 0.7,\n            boxVisible: true,\n            radius: 7,\n            outline: { color: '#a0d4ef', width: 1 },\n            label: {\n              text: 'WTI Oil Prices',\n              style: {\n                color: '#000',\n                fontSize: '20px',\n                fontFamily: 'Oswald, Tahoma, sans-serif',\n                fontStyle: 'normal',\n                fontWeight: 'normal',\n              },\n              align: 'right',\n            }\n        },\n            \n        yAxis: { scale_minorInterval: 0.25, formatString: 'c' },\n        \n        defaultPoint: {\n            marker: { outline: { width: 2, color: 'white' } },\n        },\n\n        defaultPoint_marker_visible: true,\n\n        xAxis: {          \n            formatString: 'd',\n            scale_type: 'time',\n        },\n        \n        defaultPoint_tooltip: '%xValue<br/>%yValue',\n\n        series: [\n            {\n                points: chartData                \n            }\n        ]\n    };\n\n\n    \n    function handleMonth(){\n        setChoice('month');\n    };\n\n    function handleWeek(){\n        setChoice('week');\n    };\n\n    const divStyle = {\n        maxWidth: '100%',\n        height: '300px',\n        margin: '0px auto',\n    };\n\n    return (\n        <div className=\"chart-div\">\n        <div className=\"chart\" style={divStyle}><JSCharting options={config} mutable={false} /></div>\n        <div className=\"chart-buttons\">\n            <Button className=\"chart-button\" onClick={handleMonth} variant=\"warning\">Past Month</Button>\n            <Button className=\"chart-button\" onClick={handleWeek} variant=\"warning\">Past Week</Button>\n        </div>\n        </div>\n\n    );\n}\n\nexport default Chart;\n\n\n\n/*\n<h3>WTI Oil Prices:</h3> \n    AXIS FORMATTING\n      // JS\n    \n        \n        \n        yAxis: { scale_minorInterval: 20, formatString: 'c' },\n        \n\n        scale_minorInterval: { unit: 'month', multiplier: 4 },\n        defaultPoint_tooltip: '%xValue<br/>%yValue',\n        \n        \n      });\n\n// AXIS ZOOM:\n\n        \n        margin_right: 10,\n        xAxis: {\n          scale_type: 'time',\n          defaultTick_enabled: false,\n          customTicks: [\n            { value_pattern: 'month', label_text: '%min' },\n          ],\n        },\n        legend_visible: false,\n        series: [\n          {\n            type: 'line spline',\n            defaultPoint: {\n              marker: { outline: { width: 2, color: 'white' } },\n            },\n            points: [\n              { x: '04/1/2016', y: 74.78 },\n              { x: '1/1/2019', y: 46.89 },\n            ],\n          },\n        ],\n      });\n\n\n\n\n\n\n*/","import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Cookies from 'js-cookie'\nimport CMlogo from '../StaticImages/CMlogo.png';\nimport Chart from './Chart';\nimport { useEffect, useState } from 'react';\nimport Collapse from 'react-bootstrap/Collapse'\nimport { NavLink } from 'react-router-dom';\n\n\n\nfunction SplashModal(props) {\n    const handleClose = () => props.setShowSplash(false);\n    const [price, setPrice] = useState(\"$0.00\");\n    const [showCollapse, setShowCollapse] = useState(false);\n    \n    const fetchPrice = async () => {\n      const response = await fetch('/api/prices/latest/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        console.log('Oops, I did it again.');\n      } else {\n        const data = await response.json();\n        setPrice(data.formatted);\n      }\n    }\n    \n    useEffect(() => {\n      fetchPrice();\n    }, []);\n\n    let welcomeHTML;\n    if (props.userName){\n      welcomeHTML=<h2 className=\"fp-h1 text-center\"> Welcome back, {props.userName}! </h2>\n    } else {\n      welcomeHTML=<h2 className=\"fp-h1 text-center\"> Welcome! Please <NavLink onClick={handleClose} to='/login'>log in</NavLink></h2>\n    }\n           \n    return (\n      <>  \n        <Modal id=\"splash-modal\" size=\"lg\" show={props.showSplash} onHide={handleClose}>\n          <Modal.Header  className=\"splash\" closeButton>\n          </Modal.Header>\n          <Modal.Body className=\"splash-body\">\n            <img className=\"logo\" src={CMlogo} alt=\"Case Manager logo\" />\n            <p className=\"text-center WTI-prompt\"  \n                onClick={() => setShowCollapse(!showCollapse)} \n                aria-controls=\"price-chart\"\n                aria-expanded={showCollapse}> \n                <span className=\"bold-span\">Current WTI Price:</span> {price}\n            </p>\n            <Collapse in={showCollapse}>\n              <div id=\"price-chart\">\n                <Chart />\n              </div>\n            </Collapse>\n            {welcomeHTML}\n          </Modal.Body>\n          <Modal.Footer className=\"splash\">\n            <Button variant=\"warning\" onClick={handleClose}>\n              OK\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}\n\n\nexport default SplashModal;","// import ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport WellHoles from './WellHoles';\nimport WellCasings from './WellCasings';\nimport WellCements from './WellCements';\nimport WellPerfs from './WellPerfs';\nimport WellPlugs from './WellPlugs';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\nimport DeleteWellModal from './DeleteWellModal';\nimport PlatImageModal from './PlatImageModal';\nimport Diagram from './Diagram';\nimport Button from 'react-bootstrap/esm/Button';\n\nfunction WellViewToo(props) {\n    \n    const $faImage = <FontAwesomeIcon icon={faImage} />\n    const $faTrashAlt = <FontAwesomeIcon icon={faTrashAlt} inverse pull=\"right\" className=\"highlight2\" size=\"2x\"/>\n    const [wellFeatures, setWellFeatures] = useState([]);\n    const [wellHoles, setWellHoles] = useState([]);\n    const [wellCasings, setWellCasings] = useState([]);\n    const [wellCements, setWellCements] = useState([]);\n    const [wellPerfs, setWellPerfs] = useState([]);\n    const [wellPlugs, setWellPlugs] = useState([]);\n    const [deleteTarget, setDeleteTarget] = useState({});\n    const [showDelete, setShowDelete] = useState(false);\n    const [isClicked, setIsClicked] = useState(false);\n    const [refresh, setRefresh] = useState(0);\n    const [showWellDel, setShowWellDel] = useState(false);\n    const [showImage, setShowImage] = useState(false);\n    let wellHolesHTML;\n    let wellCasingsHTML;\n    let wellCementsHTML;\n    let wellPerfsHTML;\n    let wellPlugsHTML;\n    /*\n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    */\n    \n    // console.log(props);\n    function displayPopup() {\n        setShowImage(true);\n        // const $popup = document.getElementById('popup');\n        // if ($popup.style.display === 'none'){\n        //     $popup.style.display = 'block';\n        // } else {\n        //     $popup.style.display = 'none';\n        // }\n    }\n    \n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        props.setWell({...props.well, [name]: value});\n    }\n\n    function formatDate() {\n        const rawDate = props.well.updated_at;\n        const year = rawDate.slice(0,4);\n        const month = rawDate.slice(5,7);\n        const day = rawDate.slice(9,10);\n        return month + '/' + day + '/' + year;\n    }\n\n    useEffect(() => {\n          \n        const fetchWell = async () => {\n            const response = await fetch(`/api/wells/${props.match.params.id}/`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well');\n            } else {\n                const data = await response.json();                \n                props.setWell(data);               \n            }\n          }\n\n\n        const fetchWellFeatures = async () => {\n                      \n            const response = await fetch(`/api/wells/${props.match.params.id}/features`, \n            {headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': Cookies.get('csrftoken'),\n                    }\n            });\n            if (!response.ok) {\n                console.log('Error fetching well features');\n            } else {\n                const data = await response.json();\n                setWellFeatures(data);\n                setWellHoles(data.holes);\n                setWellCasings(data.casings);\n                setWellCements(data.cements);\n                setWellPerfs(data.perforations);\n                setWellPlugs(data.plugs);\n            }\n        }\n        \n        fetchWell();\n        fetchWellFeatures();\n        setShowDelete(false);        \n    }, [refresh]);\n\n    useEffect(() => {\n        if (showDelete === false && isClicked === true) {\n            setShowDelete(true);\n        } else {\n            setShowDelete(false)\n        }\n    },[isClicked]);//showDelete\n\n    async function handleBlur(event){\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        // const {propertyName, value} = event.target;\n        // console.log(event.target);\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/${props.match.params.id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating well information');\n        }\n        // const data = await response.json();\n        // console.log(propertyName, value);\n        if (propertyName === \"total_depth\"){\n            setRefresh(Math.random());\n        }\n\n    }\n\n    const handleHoleChange = (event) => {\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        let index = wellHoles.findIndex((hole) => hole.id === parseInt(id));\n        let test = [...wellHoles]\n        test[index][propertyName] = value;\n        setWellHoles(test);\n    }\n\n    async function handleHoleBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        console.log(event.target);\n        console.log(event.target.id);\n        console.log(id)\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/holes/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating hole information');\n        }\n        // const data = await response.json();\n    }\n    \n    if (wellHoles === []){\n        wellHolesHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    } else {\n        wellHolesHTML = wellHoles.map(hole => <WellHoles key={hole.id+1000} {...hole} setWellHoles={setWellHoles} handleHoleChange={handleHoleChange} handleHoleBlur={handleHoleBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleHoleKeyPress={handleHoleKeyPress}/>)        \n    }\n\n    const handleCasingChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCasings.findIndex(casing => casing.id === parseInt(id));\n        let test = [...wellCasings]\n        test[index][name] = value;\n        setWellCasings(test);\n    }\n\n    async function handleCasingBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/casings/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating casing information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellCasings !== []){\n        wellCasingsHTML = wellCasings.map(casing => <WellCasings key={casing.id+2000} {...casing} handleCasingChange={handleCasingChange} handleCasingBlur={handleCasingBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleCasingKeyPress={handleCasingKeyPress}/>)\n    } else {\n        wellCasingsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handleCementChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellCements.findIndex(cement => cement.id === parseInt(id));\n        let test = [...wellCements]\n        test[index][name] = value;\n        setWellCements(test);\n    }\n\n    async function handleCementBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/cements/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating cement information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellCements !== []){\n        wellCementsHTML = wellCements.map(cement => <WellCements key={cement.id+3000} {...cement} handleCementChange={handleCementChange} handleCementBlur={handleCementBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handleCementKeyPress={handleCementKeyPress}/>)\n    } else {\n        wellCementsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePerforationChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPerfs.findIndex(perf => perf.id === parseInt(id));\n        let test = [...wellPerfs]\n        test[index][name] = value;\n        setWellPerfs(test);\n    }\n\n    async function handlePerforationBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/perforations/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating perforation information');\n        }\n        // const data = await response.json();\n    }\n\n    if (wellPerfs !== []){\n        wellPerfsHTML = wellPerfs.map(perf => <WellPerfs key={perf.id+4000} {...perf} handlePerforationChange={handlePerforationChange} handlePerforationBlur={handlePerforationBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handlePerfKeyPress={handlePerfKeyPress}/>)\n    } else {\n        wellPerfsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    const handlePlugChange = (event) => {\n        const {name, value, id} = event.target;\n        let index = wellPlugs.findIndex(plug => plug.id === parseInt(id));\n        let test = [...wellPlugs]\n        test[index][name] = value;\n        setWellPlugs(test);\n    }\n\n    async function handlePlugBlur(event){\n        const id = event.target.id;\n        const propertyName = event.target.name;\n        const value = event.target.value;\n        const options = {\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify({[propertyName]: value})\n        };\n        const response = await fetch(`/api/wells/plugs/${id}/`, options);\n        if (!response.ok) {\n            console.log('Error updating plug information');\n        }\n        // const data = await response.json();\n    }\n\n\n    if (wellPlugs !== []){\n        wellPlugsHTML = wellPlugs.map(plug => <WellPlugs key={plug.id+5000} {...plug} handlePlugChange={handlePlugChange} handlePlugBlur={handlePlugBlur} deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} setIsClicked={setIsClicked} setRefresh={setRefresh} handlePlugKeyPress={handlePlugKeyPress}/>)\n    } else {\n        wellPlugsHTML = <> <Spinner animation=\"grow\" variant='primary' /><p>Loading...</p></>\n    }\n\n    function handleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleHoleKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleHoleBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleCasingKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleCasingBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handleCementKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handleCementBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handlePerfKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handlePerforationBlur(e)\n            e.target.blur();\n        }\n    }\n\n    function handlePlugKeyPress(e) {\n        if (e.key=== 'Enter') {\n            handlePlugBlur(e)\n            e.target.blur();\n\n        }\n    }\n\n\n    const createNewHole = async () => {\n        const newHole = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            hole_size: ''\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newHole)\n        };\n        const response = await fetch('/api/wells/holes/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellHoles([...wellHoles, newHole]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCasing = async () => {\n        const newCasing = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            casing_weight: '',\n            casing_grading: '',\n            gauge: 'sml',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCasing)\n        };\n        const response = await fetch('/api/wells/casings/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellCasings([...wellCasings, newCasing]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewCement = async () => {\n        const newCement = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newCement)\n        };\n        const response = await fetch('/api/wells/cements/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellCements([...wellCements, newCement]);\n            setRefresh(Math.random())\n        }\n    };\n    \n    const createNewPerforation = async () => {\n        const newPerforation = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            perforation_interval: '',\n            perforation_total_holes: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPerforation)\n        };\n        const response = await fetch('/api/wells/perforations/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellPerfs([...wellPerfs, newPerforation]);\n            setRefresh(Math.random())\n        }\n    };\n\n    const createNewPlug = async () => {\n        const newPlug = {\n            well: props.match.params.id,\n            starting_depth: 0,\n            ending_depth: 0,\n            sacks_pumped: 0,\n            cement_type: '',\n        }\n        const options = {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(newPlug)\n        };\n        const response = await fetch('/api/wells/plugs/', options);\n        if(!response){\n            console.log(response);\n        } else {\n            // const data = await response.json();\n            setWellPlugs([...wellPlugs, newPlug]);\n            setRefresh(Math.random())\n        }\n    };\n\n    function handleDeleteWell(event){\n        setShowWellDel(true);\n    }\n\n    function handleBack(){\n        props.setShowSplash(false)\n        props.history.goBack();\n    }\n\n    let wellInfoHTML;\n    if (props.well !== null) {\n        wellInfoHTML = \n        <div className=\"well-info-grid\">\n                <div className=\"well-view-grid-top\">\n                    <div className=\"left-group\"> \n                        <h2>{props.well.lease} {props.well.well_number} <span className=\"icon\" onClick={displayPopup}>{$faImage}</span> </h2>\n                    </div>\n                    <Button className=\"btn\" variant=\"warning\" onClick={handleBack}> well selection </Button>\n                    <div className=\"right-group\">\n                        <span className=\"icon-trash-lrg\" onClick={handleDeleteWell}>{$faTrashAlt}</span>\n                        <span className=\"bold-span\">Last Updated: </span>{formatDate()}\n                    </div>                    \n                    \n                </div>\n                <div className=\"well-table-id row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">API Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"API_number\" className=\"input-hidden\" value={props.well.API_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Company: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"company\" className=\"input-hidden\" value={props.well.company} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Permit Number: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"permit_number\"className=\"input-hidden\" value={props.well.permit_number} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Current Status: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"current_status\" className=\"input-hidden\" value={props.well.current_status} />\n                    </div>\n                </div>\n                <div className=\"well-table-location row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Location: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"location\" className=\"input-hidden\" value={props.well.location} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Section: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"section\" className=\"input-hidden\" value={props.well.section} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Survey: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"survey\" className=\"input-hidden\" value={props.well.survey} />\n                    </div>\n                    <div className=\"col-lg-3 county-state\">\n                        <div>\n                            <span className=\"bold-span\">County: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"county\" className=\"input-hidden county\" value={props.well.county} />\n                        </div>\n                        <div>\n                            <span className=\"bold-span\">State: </span> <input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"state\" className=\"input-hidden state\" value={props.well.state} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"well-table-field row\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Field: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"field\" className=\"input-hidden\" value={props.well.field} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Initial Formation: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"initial_formation\" className=\"input-hidden\" value={props.well.initial_formation} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Spud Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"spud_date\" className=\"input-hidden\" value={props.well.spud_date} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Comp Date: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"completion_date\" className=\"input-hidden\" value={props.well.completion_date} />\n                    </div>\n                </div>\n                <div className=\"well-table-depths row mb-3\">\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Ground Level: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"ground_level\" className=\"input-hidden\" value={props.well.ground_level} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Kelley Bushing: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"kelley_bushing\" className=\"input-hidden\" value={props.well.kelley_bushing} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Derrick Floor: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"derrick_floor\" className=\"input-hidden\" value={props.well.derrick_floor} />\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <span className=\"bold-span\">Total Depth: </span><input type=\"text\" onChange={handleChange} onBlur={handleBlur} onKeyPress={handleKeyPress} name=\"total_depth\" className=\"input-hidden\" value={props.well.total_depth} />\n                    </div>\n                </div>\n                <div className=\"labels row\">\n                    <div className=\"hole-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label1\"> HOLE</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellHolesHTML}\n                            <button className=\"new-feature-button\" onClick={createNewHole}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"casing-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label2\">CASING</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCasingsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCasing}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"cement-col col\">\n                        <div className=\"showme\" >\n                            <p className=\"label3\">CEMENT</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellCementsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewCement}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"perf-col col\">\n                        <div className=\"showme\">\n                            <p className=\"label4\">PERFORATIONS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPerfsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPerforation}> Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"plug-col col\">\n                        <div className=\"col showme\">\n                            <p className=\"label5\">PLUGS</p>\n                        </div>\n                        <div className=\"scroll-area\">\n                            {wellPlugsHTML}\n                            <button className=\"new-feature-button\" onClick={createNewPlug}> Add New</button>\n                        </div>\n                    </div>\n                </div>\n            </div>;\n    } else {\n        wellInfoHTML = <div>Loading...<br />If this screen does not go away, you may not have permission to view this well.</div>;\n    }\n        \n    return (\n        <>\n        <div className=\"well-container-grid\">\n            {wellInfoHTML}\n            <Diagram wellFeatures={wellFeatures} wellCements={wellCements} wellCasings={wellCasings} wellPerfs={wellPerfs} wellPlugs={wellPlugs} well={props.well} refresh={refresh}/>\n        </div>\n        <DeleteConfirmationModal deleteTarget={deleteTarget} setDeleteTarget={setDeleteTarget} showDelete={showDelete} setShowDelete={setShowDelete} history={props.history} setRefresh={setRefresh} setIsClicked={setIsClicked}/>\n            <DeleteWellModal history={props.history} setRefresh={setRefresh} showWellDel={showWellDel} setShowWellDel={setShowWellDel}/>\n            <PlatImageModal well={props.well} setWell={props.setWell} showImage={showImage} setShowImage={setShowImage} history={props.history} refresh={refresh} setRefresh={setRefresh}/>\n        </>\n    );\n};\n\nexport default withRouter(WellViewToo)\n\n\n\n/*\n\n<div className=\"well-info\">\n    <h2>{props.well.lease} {props.well.well_number}</h2>\n    <button onClick={displayPopup}>  {$faImage} <br /> Plat Button </button>  \n    <div id=\"popup\" className=\"plat-pop-up\"> I'm a PLAT!</div>\n    I'm a well! \n</div>\n\n\n\nlet currentTarget;\n\n\n\n\n// add when widget loads\n\n... and finally some housekeeping\n\n// remove listener when destroying the widget\nwindow.removeEventListener(\"click\", clickOut);\n\n\n\n\n    // useEffect(() => {\n    //     // setWellHoles(wellFeatures.holes);\n    //     // setWellCasings(wellFeatures.casings);\n    //     // setWellCements(wellFeatures.cements);\n    //     // setWellPerfs(wellFeatures.perforations);\n    //     // setWellPlugs(wellFeatures.plugs);\n    // }, [wellFeatures]);\n\n    //CHANGE TO NOT USE INNERHTML!\n    // function editField(event){\n    //     if (!selected){\n    //         console.log(event);\n    //         id = event.target.id;\n    //         currentTarget = id;\n    //         value = event.target.attributes.value.value;\n    //         $active = document.getElementById(id)\n    //         console.log(value);\n    //         $active.innerHTML = `<input type='text' value=${value} />`;\n    //         window.addEventListener(\"click\", clickOut);\n    //         console.log($active);\n    //         selected = true;\n    //     }\n    // }\n\n    // const clickOut = (event) => {\n    //     if (!event.target.id.includes(currentTarget)) {\n    //         selected = false;\n    //         window.removeEventListener(\"click\", clickOut);\n    //         $active.innerHTML = `<span id=${id} value=${value} onClick={editField}>${value}</span>`\n    //     }\n    // };\n\nfetch(‘https://jsonplaceholder.typicode.com/todos/1', {\nmethod: ‘PATCH’,\nbody: JSON.stringify({\ncompleted: true\n}),\nheaders: {\n“Content-type”: “application/json; charset=UTF-8”\n}\n})\n.then(response => response.json())\n.then(json => console.log(json))\n\n\n\nasync function handleBlur(event){\n    event.preventDefault();\n    const options = {\n        method: 'PATCH',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(name: value)\n    };\n    const response = await fetch(``/api/wells/${props.match.params.id}/`, options);\n    const data = await response.json();\n    console.log('data', data);\n}\n\n\n\nconst newHole = async () => {\n    const newHole = {\n        well: props.match.params.id,\n        starting_depth: 0,\n        ending_depth: 0,\n        hole_size: ''\n    }\n    const options = {\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(newHole)\n    };\n    const response = await fetch('/api/wells/holes/', options);\n    if(!response){\n        console.log(response);\n    } else {\n        const data = await response.json();\n        setWellHoles([...wellHoles, newHole]);\n    }\n};\n\n\n\n*/","import { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom'; //withRouter, \nimport Cookies from 'js-cookie'\nimport Spinner from 'react-bootstrap/Spinner';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport './App.css';\nimport WelcomePage from './components/WelcomePage';\nimport WellView from './components/WellView';\nimport NewWellModal from './components/NewWellModal';\n//FOR TESTING, BELOW\n// import Diagram from './components/Diagram';\n// import Test from './components/Test';\nimport SplashModal from './components/SplashModal';\nimport WellViewToo from './components/WellViewToo';\n\n\n\nfunction App() {\n  const [userName, setUserName] = useState('');\n  const [isAuth, setIsAuth] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const history = useHistory();\n  const [well, setWell] = useState(null);\n  const [showNew, setShowNew] = useState(false);\n  const [showSplash, setShowSplash] = useState(true);\n\n  useEffect(()=> {\n    const checkAuth = async () => {\n      const response = await fetch('/rest-auth/user/', \n      {headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            }\n      });\n      if (!response.ok) {\n        setIsAuth(false);\n        if (history.location.pathname !== '/register') {\n          history.push('/login');\n        }\n      } else {\n        const data = await response.json();\n        const ID=data.pk;\n        const username=data.username;\n        setIsAuth(true);\n        setUserID(ID);\n        setUserName(username);\n      }\n    }\n    checkAuth();\n  }, [isAuth, history]) //history, \n\n  if (isAuth === null){\n    return <Spinner animation=\"grow\" variant='primary' />\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/register' >\n          <RegistrationForm isAuth={isAuth} setIsAuth={setIsAuth} history={history}/>\n        </Route>\n        <Route path='/login'>\n            <LoginForm  isAuth={isAuth} setIsAuth={setIsAuth} history={history}/>\n            <SplashModal userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/>\n        </Route>       \n        <Route path='/wellinfo/:id'>\n            <WellViewToo well={well} setWell={setWell} userID={userID} setUserID={setUserID} history={history} setShowSplash={setShowSplash}/>\n        </Route>\n\n        {/* <Route path='/welltest/:id'>\n            <WellViewToo well={well} setWell={setWell} userID={userID} setUserID={setUserID} history={history} setShowSplash={setShowSplash}/>\n        </Route> */}\n        \n\n        {/* <Route path='/test'>\n            <Test userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/>\n        </Route>           */}\n\n        {/* <Route path='/chart'>\n            <Chart />\n        </Route>           \n        \n        */}\n       \n        {/* <Route path='/wellslist'>\n            <WellList isAuth={isAuth} history={history} well={well} setWell={setWell}/>\n        </Route>        */}\n        <Route path=''>\n          <WelcomePage isAuth={isAuth} setIsAuth={setIsAuth} userID={userID} history={history} userName={userName} well={well} setWell={setWell} setShowNew={setShowNew} showNew={showNew}/>\n          <SplashModal userName={userName} setShowSplash={setShowSplash} showSplash={showSplash}/>\n          <NewWellModal setShowNew={setShowNew} showNew={showNew} history={history} userID={userID} setUserID={setUserID} setWell={setWell}/>\n        </Route>        \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}